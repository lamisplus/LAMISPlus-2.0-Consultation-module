{"version":3,"sources":["main/webapp/api.js","main/webapp/jsx/layouts/SplitActionButton.js","main/webapp/jsx/components/Patient/PatientList.js","main/webapp/jsx/components/Home.js","main/webapp/jsx/components/Patient/PostPatient.js","main/webapp/jsx/components/Patient/PatientCard.js","main/webapp/jsx/components/History/AddPharmacyOrder.js","main/webapp/jsx/components/History/EditPharmacyOrder.js","main/webapp/jsx/components/History/RecentHistory.js","main/webapp/jsx/components/Patient/PatientDetails.js","main/webapp/jsx/components/History/PatientConsulationHistoryCard.js","main/webapp/jsx/components/History/PatientConsultationHistory.js","main/webapp/jsx/components/History/ViewPatientHistory.js","App.js","main/webapp/reportWebVitals.js","main/webapp/context/ThemeDemo.js","main/webapp/context/ThemeContext.js","index.js"],"names":["token","URLSearchParams","window","location","search","get","url","apiUrl","SplitActionButton","props","React","open","setOpen","anchorRef","useRef","handleClose","ButtonGroup","variant","ref","style","backgroundColor","height","width","actions","type","to","borderRight","Button","size","onClick","console","info","startIcon","icon","Typography","fontWeight","name","Divider","orientation","flexItem","marginTop","undefined","prevOpen","Popper","anchorEl","current","role","transition","disablePortal","zIndex","TransitionProps","placement","Grow","transformOrigin","Paper","sx","minWidth","maxWidth","ClickAwayListener","onClickAway","MenuList","id","autoFocusItem","slice","map","option","index","MenuItem","color","fontSize","Math","random","tableIcons","Add","forwardRef","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","Patients","makeStyles","theme","card","margin","spacing","display","flexDirection","alignItems","form","submit","cardBottom","marginBottom","Select","button","root","input","error","success","useState","patientList","setPatientList","axios","baseUrl","headers","then","response","data","catch","toast","position","POSITION","TOP_RIGHT","useEffect","patients","calculate_age","dob","today","Date","dateParts","split","dateObject","birthDate","age_now","getFullYear","m","getMonth","getDate","getHospitalNumber","identifier","hospitalNumber","find","obj","value","actionItems","row","log","pathname","state","patientObj","CardBody","icons","title","columns","field","filtering","firstName","surname","hospital_number","gender","age","dateOfBirth","moment","format","options","headerStyle","padding","searchFieldStyle","margingLeft","exportButton","searchFieldAlignment","pageSizeOptions","pageSize","debounceInterval","divStyle","borderRadius","Home","key","setKey","Row","Col","xl","className","Card","Body","Tabs","activeKey","onSelect","k","Tab","eventKey","useStyles","newDate","PostPatient","selectedOption","setSelectedOption","classes","useHistory","services","setServices","saving","setSaving","filterService","filter","x","moduleServiceCode","Object","entries","label","moduleServiceName","ServicesPost","encounterDate","facilityId","personId","serviceCode","visitId","postServices","Modal","show","showModal","toggle","Header","onChange","isMulti","noOptionsMessage","Spinner","e","preventDefault","serviceArr","forEach","array","push","post","commenced","textTransform","withStyles","heading","typography","pxToRem","secondaryHeading","palette","text","secondary","verticalAlign","details","column","flexBasis","helper","borderLeft","divider","unit","link","primary","main","textDecoration","patientObjs","setpatientObj","modal","setModal","ExpansionPanel","defaultExpanded","ExpansionPanelSummary","expandIcon","md","root2","otherName","phoneNumber","contactPoint","getPhoneNumber","address","city","getAddress","floated","ExpansionPanelActions","AddPharmacyOrder","drugs","setDrugs","dosageUnits","setDosageUnits","durationUnits","setDurationUnits","encounterDateTime","drugName","dosageStrength","dosageStrengthUnit","dosageFrequency","startDate","duration","durationUnit","comments","patientId","orderedBy","dateTimePrescribed","pharmacyOrder","setPharmacyOrder","handleInputChangePharmacyOrderDto","target","handleSubmit","resp","loadDosageUnits","useCallback","loadDurationUnits","loadPharmacyDrugs","drugRows","dosageUnitsRows","durationUnitsRows","length","drug","dosageUnit","FormGroup","InputGroup","brand","EditPharmacyOrder","editPharmacyOrderValue","pharmacyOrderEdit","setPharmacyOrderEdit","substring","Widget","isLabEnabled","setIsLabEnabled","isPharmacyEnabled","setIsPharmacyEnabled","hasAllergies","pharmacyModal","setPharmacyModal","pharmacyOrderModal","setPharmacyOrderModal","otherVisitsVitals","setOtherVisitVitals","previousConsultation","setPreviousConsultation","setEncounterDate","useForm","control","getValues","setError","setValue","complaint","onsetDate","severity","dateResolved","inputFields","setInputFields","certainty","diagnosis","diagnosisOrder","inputFieldsDiagnosis","setInputFieldsDiagnosis","labOrder","labTest","priority","status","inputFieldsLab","setInputFieldsLab","history","setEditPharmacyOrderValue","pharmacy_by_visitId","onSubmit","diagnosisList","presentingComplaints","labTests","inputFieldsDiag","inputField","InData","toString","visitNote","toLocaleTimeString","hour12","err","labGroups","setLabGroups","setLabTests","priorities","setPriorities","loadLabCheck","loadPharmacyCheck","loadOtherVisitsVitals","loadPreviousConsultation","loadLabGroup","getLatestVitals","latestVitals","setVitalSignDto","handleInputChange","event","values","handleInputDiagChange","handleInputLabChange","str","handleDelete","delete","Grid","Column","keys","Segment","Accordion","minHeight","AccordionSummary","borderBottom","Label","as","AccordionDetails","List","celled","Item","paddingBottom","paddingTop","borderTop","pulse","respiratoryRate","temperature","systolic","diastolic","bodyWeight","vital","consultation","i","j","pointing","ribbon","Group","errors","utils","DateFnsUtils","defaultValue","rules","required","render","rest","border","disableFuture","invalidDateMessage","Table","borderColor","Cell","Input","fluid","placeholder","class","Footer","HeaderCell","handleAddFields","Icon","diagInputField","diagIndex","handleAddDiagFields","labInputField","labIndex","d","groupName","labTestName","handleAddFieldsLab","pharmacy","handleEditPharmacyOrder","labelPosition","Content","Feed","visitNotes","Event","content","Summary","PatientDetails","CardContent","RecentHistory","PatientConsultationHistoryCard","visit","elevation","maxHeight","overflow","scrollbarWidth","fontFamily","presentingComplaint","order","gridItem","PatientConsultationHistory","selectedVisit","setSelectedVisit","patientConsultations","Container","divided","item","cellStyle","date","basic","loadConsultationDetails","float","toolbar","setLatestVitals","editPharmacyOrder","setEditPharmacyOrder","put","orderDate","orderId","pharm","loadLatestVitals","labtest_by_visitId","lab","tests","labId","description","labTestGroup","labTestGroupId","labTestId","orderPriority","labTestOrderStatus","labdata","App","path","ViewPatientHistory","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","direction","dezThemeSet","version","layout","headerBg","navheaderBg","sidebarBg","sidebarStyle","sidebarPosition","headerPosition","containerLayout","ThemeContext","createContext","ThemeContextProvider","sideBarStyle","setSideBarStyle","sidebarposition","setSidebarposition","headerposition","setHeaderposition","sidebarLayout","setSidebarLayout","setDirection","primaryColor","setPrimaryColor","navigationHader","setNavigationHader","haderColor","setHaderColor","sidebarColor","setSidebarColor","iconHover","setIconHover","menuToggle","setMenuToggle","background","setBackground","containerPosition_","setcontainerPosition_","body","document","querySelector","windowWidth","setWindowWidth","windowHeight","setWindowHeight","changePrimaryColor","setAttribute","changeNavigationHader","chnageHaderColor","chnageSidebarColor","changeSideBarPostion","changeDirectionLayout","html","changeSideBarLayout","changeSideBarStyle","alert","changeHeaderPostion","changeBackground","changeContainerPosition","resizeWindow","innerWidth","innerHeight","addEventListener","removeEventListener","Provider","sideBarOption","layoutOption","backgroundOption","headerPositions","containerPosition","directionPosition","sidebarpositions","colors","openMenuToggle","setDemoTheme","setAttr","themeSettings","children","ReactDOM","StrictMode","basename","getElementById"],"mappings":"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","file":"static/js/main.bdf95bfd.chunk.js","sourcesContent":["export const  token = (new URLSearchParams(window.location.search)).get(\"jwt\")\r\nexport const url = '/api/v1/'\r\nexport const apiUrl = '/api/v1/'\r\n\r\n\r\n\r\n/*\r\nexport const url =  'http://localhost:8282/api/v1/';\r\nexport const apiUrl =  'http://localhost:8282/api/';\r\nexport const  token = 'eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJndWVzdEBsYW1pc3BsdXMub3JnIiwiYXV0aCI6IlN1cGVyIEFkbWluIiwibmFtZSI6Ikd1ZXN0IEd1ZXN0IiwiZXhwIjoxNjU4Njg4MTc1fQ.P6w22Ed9tW9kNM_ANy8Mlc-s58wpHh0SagUPK62Hzz-BFiJje1E_O-YnKTzkw8Ibz5orglYNIbdv8A5wSSWwQQ';\r\n*/\r\n","import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport ButtonGroup from '@mui/material/ButtonGroup';\r\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\r\nimport Grow from '@mui/material/Grow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Popper from '@mui/material/Popper';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport MenuList from '@mui/material/MenuList';\r\nimport Typography from '@mui/material/Typography';\r\nimport {FaEye, FaCaretDown } from \"react-icons/fa\";\r\nimport Divider from '@mui/material/Divider';\r\nimport {useRef} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\n\r\n\r\n\r\nexport default function SplitActionButton(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n    const anchorRef = useRef(null);\r\n\r\n    const handleClick = () => {\r\n        console.info(`You clicked`);\r\n        console.info(props.actions[0].actions[0].to);\r\n        console.info(`You clicked`);\r\n    };\r\n\r\n    const handleMenuItemClick = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleToggle = () => {\r\n        setOpen((prevOpen) => !prevOpen);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ButtonGroup variant=\"contained\" ref={anchorRef} style={{backgroundColor:'rgb(153, 46, 98)', height:'30px',width:`${ props.actions[0].type === 'single' ?'auto':'150px'}`}} >\r\n\r\n                <Link to={props.actions[0].actions[0].to} style={{borderRight:'20px solid #fff !important'}}>\r\n                    <Button size=\"small\" onClick={handleClick} variant=\"contained\" startIcon={props.actions[0].actions[0].icon} style={{backgroundColor:'rgb(153, 46, 98)'}}>\r\n                        <Typography variant=\"h7\" style={{fontWeight:'bolder'}}>{props.actions[0].actions[0].name}</Typography>\r\n                    </Button>\r\n                </Link>\r\n\r\n                {props.actions[0].type === 'multiple'&&\r\n                    <>\r\n                        <Divider orientation=\"vertical\" flexItem style={{borderRight:'20px solid #fff !important', backgroundColor:'#fff',width:'1px', height:'26px',marginTop:'2px'}}>\r\n                            1\r\n                        </Divider>\r\n                        <Button\r\n                            size=\"medium\"\r\n                            aria-controls={open ? 'split-button-menu' : undefined}\r\n                            aria-expanded={open ? 'true' : undefined}\r\n                            aria-label=\"select merge strategy\"\r\n                            aria-haspopup=\"menu\"\r\n                            onClick={handleToggle}\r\n                            style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                        >\r\n                            <FaCaretDown size='24' />\r\n                        </Button>\r\n                    </>\r\n                }\r\n\r\n            </ButtonGroup>\r\n            {props.actions[0].type === 'multiple'&&\r\n                <>\r\n                    <Popper\r\n                        open={open}\r\n                        anchorEl={anchorRef.current}\r\n                        role={undefined}\r\n                        transition\r\n                        disablePortal\r\n                        style={{ zIndex:'10000' }}\r\n                    >\r\n                        {({ TransitionProps, placement }) => (\r\n                            <Grow\r\n                                {...TransitionProps}\r\n                                style={{\r\n                                    transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom',\r\n                                    zIndex:'1000'\r\n                                }}\r\n                            >\r\n                                width: 130,\r\n                                <Paper sx={{ minWidth:'130px', maxWidth: '150px', marginTop:'2px', zIndex:'1000' }}>\r\n                                    <ClickAwayListener onClickAway={handleClose}>\r\n                                        <MenuList id=\"split-button-menu\" autoFocusItem>\r\n                                            {props.actions[0].actions.slice(1).map((option, index) => (\r\n                                                <MenuItem\r\n                                                    key={Math.random()}\r\n                                                >\r\n                                                    <Link\r\n                                                        to={option.to}\r\n                                                    >\r\n                                                        {option.icon}<span style={{color: 'rgb(153, 46, 98)', fontWeight:'bolder', fontSize:'12px'}}>{option.name}</span>\r\n                                                    </Link>\r\n\r\n                                                </MenuItem>\r\n                                            ))}\r\n                                        </MenuList>\r\n                                    </ClickAwayListener>\r\n                                </Paper>\r\n                            </Grow>\r\n                        )}\r\n                    </Popper>\r\n                </>\r\n            }\r\n\r\n\r\n        </React.Fragment>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from '@material-table/core';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl, token } from \"./../../../api\";\r\n\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport {  Card,CardBody,} from 'reactstrap';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport {Menu,MenuList,MenuButton,MenuItem,} from \"@reach/menu-button\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport moment from \"moment\";\r\nimport {toast} from \"react-toastify\";\r\nimport {MdDeleteForever, MdModeEdit, MdPerson} from \"react-icons/md\";\r\nimport {FaEye, FaCaretDown } from \"react-icons/fa\";\r\nimport SplitActionButton from \"../../layouts/SplitActionButton\";\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}))\r\n\r\n\r\nconst Patients = (props) => {\r\n\r\n    const [patientList, setPatientList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n    }, []);\r\n    ///GET LIST OF Patients\r\n    async function patients() {\r\n        axios\r\n            .get(`${baseUrl}patient/checked-in-by-service/consultation-code`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setPatientList(response.data);\r\n            })\r\n            .catch((error) => {\r\n                toast.error(\"An error occurred while fetching checked-in patients\", {\r\n                    position: toast.POSITION.TOP_RIGHT\r\n                });\r\n            });\r\n    }\r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n        if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n            age_now--;\r\n        }\r\n        if (age_now === 0) {\r\n            return m + \" month(s)\";\r\n        }\r\n        return age_now + \" year(s)\";\r\n    };\r\n\r\n    const getHospitalNumber = (identifier) => {\r\n        const identifiers = identifier;\r\n        const hospitalNumber = identifiers.identifier.find(obj => obj.type == 'HospitalNumber');\r\n        return hospitalNumber ? hospitalNumber.value : '';\r\n    };\r\n\r\n\r\n    function actionItems(row){\r\n        console.log(row);\r\n        console.log('try 11')\r\n        return  [\r\n            {\r\n                type:'single',\r\n                actions:[\r\n                    {\r\n                        name:'Dashboard',\r\n                        type:'link',\r\n                        icon:<FaEye  size=\"22\"/>,\r\n                        to:{\r\n                            pathname: \"/patient-history\",\r\n                            state: { patientObj: row  }\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n\r\n        ]\r\n    }\r\n    //console.log(patientList)\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <CardBody>\r\n\r\n\r\n                    <MaterialTable\r\n                        icons={tableIcons}\r\n                        title=\"Find Patient \"\r\n                        columns={[\r\n                            // { title: \" ID\", field: \"Id\" },\r\n                            {\r\n                                title: \"Patient Name\",\r\n                                field: \"name\",\r\n                            },\r\n                            { title: \"Hospital Number\", field: \"hospital_number\", filtering: false },\r\n                            { title: \"Gender\", field: \"gender\", filtering: false },\r\n                            { title: \"Age\", field: \"age\", filtering: false },\r\n                            { title: \"Actions\", field: \"actions\", filtering: false },\r\n                        ]}\r\n                        data={ patientList.map((row) => ({\r\n\r\n                            name:row.firstName + \" \" + row.surname,\r\n                            hospital_number: getHospitalNumber(row.identifier),\r\n                            gender:row.gender.display,\r\n                            age: (row.dateOfBirth === 0 ||\r\n                                row.dateOfBirth === undefined ||\r\n                                row.dateOfBirth === null ||\r\n                                row.dateOfBirth === \"\" )\r\n                                ? 0\r\n                                : calculate_age(moment(row.dateOfBirth).format(\"DD-MM-YYYY\")),\r\n\r\n                               actions:<SplitActionButton actions={actionItems(row)} />\r\n\r\n                        }))}\r\n\r\n                        options={{\r\n                            headerStyle: {\r\n                                backgroundColor: \"#014d88\",\r\n                                color: \"#fff\",\r\n                                fontSize:'16px',\r\n                                padding:'10px',\r\n                                fontWeight:'bolder'\r\n                            },\r\n                            searchFieldStyle: {\r\n                                width : '200%',\r\n                                margingLeft: '250px',\r\n                            },\r\n                            filtering: false,\r\n                            exportButton: false,\r\n                            searchFieldAlignment: 'left',\r\n                            pageSizeOptions:[10,20,100],\r\n                            pageSize:10,\r\n                            debounceInterval: 400\r\n                        }}\r\n                    />\r\n\r\n                </CardBody>\r\n            </Card>\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Patients;\r\n\r\n\r\n","import React, {useState, Fragment } from \"react\";\r\nimport { Row, Col, Card,  Tab, Tabs, } from \"react-bootstrap\";\r\nimport Dashboard from './Patient/PatientList'\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nconst divStyle = {\r\n  borderRadius: \"2px\",\r\n  fontSize: 14,\r\n};\r\n\r\nconst Home = () => {\r\n    const [key, setKey] = useState('home');\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      <Row>\r\n       \r\n        <Col xl={12}>\r\n          <div className=\"row page-titles mx-0\" style={{marginTop:\"0.5px\"}}>\r\n            <ol className=\"breadcrumb\">\r\n              <li className=\"breadcrumb-item active\"><Link to={`#`}>Consultation</Link></li>\r\n              <li className=\"breadcrumb-item  \"><Link to={`#`}>Patient List</Link></li>\r\n            </ol>\r\n          </div>\r\n          <Card style={divStyle}>\r\n            \r\n            <Card.Body>\r\n              {/* <!-- Nav tabs --> */}\r\n              <div className=\"custom-tab-1\">\r\n                <Tabs\r\n                    id=\"controlled-tab-example\"\r\n                    activeKey={key}\r\n                    onSelect={(k) => setKey(k)}\r\n                    className=\"mb-3\"\r\n                >\r\n                  <Tab eventKey=\"home\" title=\"Checked In Patients\">                   \r\n                    <Dashboard />\r\n                  </Tab>\r\n                                    \r\n                </Tabs>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        \r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl, token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport {format} from 'date-fns';\r\nimport 'react-summernote/dist/react-summernote.css'; // import styles\r\nimport { Spinner } from \"reactstrap\";\r\nimport Select from \"react-select\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}))\r\nlet newDate = new Date()\r\n\r\nconst PostPatient = (props) => {\r\n    const patientObj = props.patientObj;\r\n    //console.log(patientObj)\r\n    const [selectedOption, setSelectedOption] = useState();\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [services, setServices]= useState([]);\r\n    //const [values, setValues] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n\r\n    useEffect(() => {\r\n        ServicesPost()\r\n    }, []);\r\n    ///GET LIST OF Post Services\r\n    async function ServicesPost() {\r\n        axios\r\n            .get(`${baseUrl}patient/vital-sign/post-service`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                const filterService = response.data.filter((x) => x.moduleServiceCode!=='consultation-code')\r\n\r\n                setServices(\r\n                    Object.entries(filterService).map(([key, value]) => ({\r\n                        label: value.moduleServiceName,\r\n                        value: value.moduleServiceCode,\r\n                    })))\r\n\r\n            })\r\n            .catch((error) => {\r\n            });\r\n    }\r\n\r\n    const [postServices, setPostServices]= useState({\r\n        encounterDate:format(new Date(newDate), 'yyyy-MM-dd'),\r\n        facilityId: 1,\r\n        personId:\"\",\r\n        serviceCode:\"\",\r\n        visitId: \"\"\r\n    })\r\n\r\n\r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        setSaving(true);\r\n        let serviceArr = []\r\n        selectedOption.forEach(function (value, index, array) {\r\n            serviceArr.push(value['value'])\r\n        })\r\n        postServices.personId=patientObj.id\r\n        postServices.visitId=patientObj.visitId\r\n        postServices.serviceCode=serviceArr\r\n        axios.post(`${baseUrl}patient/post`, postServices,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n\r\n        )\r\n            .then(response => {\r\n                setSaving(false);\r\n                props.patientObj.commenced=true\r\n                toast.success(\"Service Checkin successful\");\r\n                props.toggle()\r\n                //props.patientsVitalsSigns()\r\n\r\n            })\r\n            .catch(error => {\r\n                setSaving(false);\r\n                toast.error(\"Something went wrong\");\r\n\r\n            });\r\n\r\n    }\r\n\r\n    return (\r\n        <div >\r\n\r\n            <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n                <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                    Post Patient\r\n                    <Button\r\n                        variant=\"\"\r\n                        className=\"btn-close\"\r\n                        onClick={props.toggle}\r\n                    ></Button>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Card >\r\n                        <CardBody>\r\n                            <form >\r\n                                <div className=\"row\">\r\n\r\n                                    <Select\r\n                                        onChange={setSelectedOption}\r\n                                        value={selectedOption}\r\n                                        options={services}\r\n                                        isMulti=\"true\"\r\n                                        noOptionsMessage=\"true\"\r\n                                    />\r\n\r\n                                </div>\r\n\r\n                                {saving ? <Spinner /> : \"\"}\r\n                                <br />\r\n\r\n                                <MatButton\r\n                                    type=\"submit\"\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    className={classes.button}\r\n                                    startIcon={<SaveIcon />}\r\n                                    onClick={handleSubmit}\r\n                                >\r\n                                    {!saving ? (\r\n                                        <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                    ) : (\r\n                                        <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                    )}\r\n                                </MatButton>\r\n\r\n                            </form>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Modal.Body>\r\n\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PostPatient;\r\n","import React, {useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { Button } from 'semantic-ui-react';\r\nimport {Label,} from \"semantic-ui-react\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Col, Row } from \"reactstrap\";\r\n\r\nimport moment from \"moment\";\r\nimport PostPatient from './PostPatient'\r\nimport { Link } from 'react-router-dom'\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { TiArrowBack } from 'react-icons/ti'\r\n\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\nfunction PatientCard(props) {\r\n  const { classes } = props;\r\n  const patientObjs = props.patientObj ? props.patientObj : {}\r\n  console.log(patientObjs)\r\n  const [patientObj, setpatientObj] = useState(patientObjs)\r\n  const [modal, setModal] = useState(false);\r\n  const toggle = () => setModal(!modal);\r\n\r\n\r\n    const calculate_age = dob => {\r\n      var today = new Date();\r\n      var dateParts = dob.split(\"-\");\r\n      var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n      var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n      var age_now = today.getFullYear() - birthDate.getFullYear();\r\n      var m = today.getMonth() - birthDate.getMonth();\r\n          if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                  age_now--;\r\n              }\r\n          if (age_now === 0) {\r\n                  return m + \" month(s)\";\r\n              }\r\n              return age_now + \" year(s)\";\r\n    };\r\n\r\n  \r\n    const CurrentStatus = ()=>{\r\n\r\n        return (  <Label color=\"blue\" size=\"mini\">Active</Label>);\r\n}\r\n\r\n    const getHospitalNumber = (identifier) => {\r\n      const identifiers = identifier;\r\n      const hospitalNumber = identifiers.identifier.find(obj => obj.type == 'HospitalNumber');\r\n      return hospitalNumber ? hospitalNumber.value : '';\r\n    };\r\n\r\n    const getPhoneNumber = (identifier) => {\r\n      const identifiers = identifier;\r\n      const phoneNumber = identifiers.contactPoint.find(obj => obj.type == 'phone');\r\n      return phoneNumber ? phoneNumber.value : '';\r\n    };\r\n\r\n    const getAddress = (identifier) => {\r\n      const identifiers = identifier;\r\n      const address = identifiers.address.find(obj => obj.city);\r\n      return address ? address.city : '';\r\n    };\r\n\r\n    const PostPatientService =(row)=> {\r\n      setpatientObj({...patientObj, ...row});\r\n      setModal(!modal)\r\n    }\r\n\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n        <ExpansionPanel defaultExpanded>\r\n            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n\r\n                <Row>\r\n\r\n\r\n                    <Col md={11}>\r\n                        <Row className={\"mt-1\"}>\r\n                            <Col md={12} className={classes.root2} >\r\n                                <b style={{fontSize: \"25px\", color:'rgb(153, 46, 98)'}}>\r\n                                    {patientObj.surname + \", \" + patientObj.firstName + \" \" + patientObj.otherName}\r\n                                    < span style={{color:'green'}}>\r\n                                             {\": \"+\"Active\"}\r\n                                        </span>\r\n                                </b>\r\n\r\n                            </Col>\r\n                            <Col md={4} className={classes.root2} style={{marginTop:\"10px\"}}>\r\n                                    <span>\r\n                                        {\" \"}\r\n                                        Hospital Number : <b style={{color:'#0B72AA'}}>{getHospitalNumber(patientObj.identifier) }</b>\r\n                                    </span>\r\n                            </Col>\r\n\r\n                            <Col md={4} className={classes.root2} style={{marginTop:\"10px\"}}>\r\n                                    <span>\r\n                                        Date Of Birth : <b style={{color:'#0B72AA'}}>{patientObj.dateOfBirth }</b>\r\n                                    </span>\r\n                            </Col>\r\n                            <Col md={4} className={classes.root2} style={{marginTop:\"10px\"}}>\r\n                                <span>\r\n                                    {\" \"}\r\n                                    Age : <b style={{color:'#0B72AA'}}>{calculate_age(patientObj.dateOfBirth) }</b>\r\n                                </span>\r\n                            </Col>\r\n                            <Col md={4} style={{marginTop:\"10px\"}}>\r\n                                    <span>\r\n                                        {\" \"}\r\n                                        Gender :{\" \"}\r\n                                        <b style={{color:'#0B72AA'}}>{patientObj.gender.display }</b>\r\n                                    </span>\r\n\r\n                            </Col>\r\n                            <Col md={4} className={classes.root2} style={{marginTop:\"10px\"}}>\r\n                                <span>\r\n                                    {\" \"}\r\n                                    Phone Number : <b style={{color:'#0B72AA'}}>{getPhoneNumber(patientObj.contactPoint)}</b>\r\n                                </span>\r\n                            </Col>\r\n                            <Col md={4} className={classes.root2} style={{marginTop:\"10px\"}}>\r\n                                <span>\r\n                                    {\" \"}\r\n                                    Address : <b style={{color:'#0B72AA'}}>{getAddress(patientObj.address)} </b>\r\n                                </span>\r\n\r\n                            </Col>\r\n\r\n\r\n                        </Row>\r\n                    </Col>\r\n                    <div className=\"float-end\" style={{floated:'right'}}>\r\n                        {\" \"}<Link to={\"/\"} >\r\n                        <Button\r\n                            floated='right'\r\n                            style={{padding:'0px'}}\r\n                        >\r\n                            <MatButton\r\n                                variant=\"contained\"\r\n                                floated='right'\r\n                                startIcon={<TiArrowBack  />}\r\n                                style={{backgroundColor:\"rgb(153, 46, 98)\", color:'#fff', height:'35px'}}\r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\" }}>Back</span>\r\n                            </MatButton>\r\n                        </Button>\r\n\r\n                    </Link>\r\n\r\n                                {\" \"}<Button  floated='right'  style={{backgroundColor:\"#014d88\", color:'#fff',height:'35px'}} onClick={() => PostPatientService(patientObj)}>Post Patient</Button>\r\n\r\n\r\n                    </div>\r\n                </Row>\r\n\r\n            </ExpansionPanelSummary>\r\n            <Divider />\r\n            <ExpansionPanelActions expandIcon={<ExpandMoreIcon />}>\r\n\r\n            </ExpansionPanelActions>\r\n        </ExpansionPanel>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            <PostPatient toggle={toggle} showModal={modal} patientObj={patientObj} />\r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, {Fragment, useState, useCallback, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input, InputGroup,InputGroupText} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport {token, url as baseUrl, apiUrl as apiUrl } from \"../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport {format} from \"date-fns\";\r\n\r\nimport 'react-summernote/dist/react-summernote.css'; // import styles\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}));\r\n\r\nconst AddPharmacyOrder = (props) => {\r\n    const patientObj = props.patientObj;\r\n    const [saving, setSaving] = useState(false);\r\n    const classes = useStyles();\r\n    const [drugs, setDrugs] = useState([]);\r\n    const [dosageUnits, setDosageUnits] = useState([]);\r\n    const [durationUnits, setDurationUnits] = useState([]);\r\n\r\n    const [pharmacyOrder, setPharmacyOrder] = useState({\r\n        encounterDateTime: format(new Date(), 'yyyy-MM-dd'),\r\n        drugName: \"\",\r\n        dosageStrength: \"\",\r\n        dosageStrengthUnit: \"\",\r\n        dosageFrequency: \"\",\r\n        startDate: \"\",\r\n        duration: \"\",\r\n        durationUnit: \"\",\r\n        comments: \"\",\r\n        patientId: patientObj.id,\r\n        orderedBy: \"\",\r\n        dateTimePrescribed: \"\",\r\n        visitId: patientObj.visitId\r\n    });\r\n\r\n    const handleInputChangePharmacyOrderDto = e => {\r\n        setPharmacyOrder({...pharmacyOrder, [e.target.name]: e.target.value});\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        try {\r\n            e.preventDefault();\r\n            setSaving(true);\r\n            pharmacyOrder.encounterDateTime = format(new Date(), 'yyyy-MM-dd@hh:mm:ss');\r\n            pharmacyOrder.dateTimePrescribed = format(new Date(), 'yyyy-MM-dd@hh:mm:ss');\r\n\r\n            console.log(pharmacyOrder)\r\n            await axios.post(`${apiUrl}drug-orders`, { \"drugOrders\": [pharmacyOrder] },\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}}).then(resp => {\r\n            console.log(\"drug saved\");\r\n             toast.success(\"Successfully Saved drug order!\", {\r\n                            position: toast.POSITION.TOP_RIGHT\r\n                        });\r\n            });\r\n            setSaving(false);\r\n            props.toggle()\r\n        } catch (e) {\r\n            toast.error(\"An error occurred while saving drug prescription\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n    };\r\n\r\n    const loadDosageUnits = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/DOSE_STRENGTH_UNIT`, { headers: {\"Authorization\" : `Bearer ${token}`}});\r\n            setDosageUnits(response.data);\r\n        } catch (e) {\r\n            toast.error(\"An error occurred while fetching DOSE STRENGTH UNIT\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    const loadDurationUnits = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/AGE_UNIT`, { headers: {\"Authorization\" : `Bearer ${token}`}});\r\n            setDurationUnits(response.data);\r\n        } catch (e) {\r\n            toast.error(\"An error occurred while fetching DOSE STRENGTH UNIT\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    const loadPharmacyDrugs = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${apiUrl}drugs`, { headers: {\"Authorization\" : `Bearer ${token}`}});\r\n            //console.log(\"drugs\", response.data[0].id)\r\n            if (response.data[0].id > 0) {\r\n                 setDrugs(response.data);\r\n            }\r\n        } catch (e) {\r\n            toast.error(\"An error occurred while fetching drugs\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        loadPharmacyDrugs();\r\n        loadDosageUnits();\r\n        loadDurationUnits();\r\n    }, [loadPharmacyDrugs, loadDosageUnits, loadDurationUnits]);\r\n\r\n    let drugRows = null;\r\n    let dosageUnitsRows = null;\r\n    let durationUnitsRows = null;\r\n    if (drugs && drugs.length > 0) {\r\n        //console.log(\"drugs\", drugs);\r\n        drugRows = drugs.map((drug, index) => (\r\n            <option key={drug.name} value={drug.name}>{drug.name}</option>\r\n        ));\r\n    }\r\n    if (dosageUnits && dosageUnits.length > 0) {\r\n        dosageUnitsRows = dosageUnits.map((dosageUnit, index) => (\r\n            <option key={dosageUnit.display} value={dosageUnit.display}>{dosageUnit.display}</option>\r\n        ));\r\n    }\r\n    if (durationUnits && durationUnits.length > 0) {\r\n        durationUnitsRows = durationUnits.map((durationUnit, index) => (\r\n            <option key={durationUnit.display} value={durationUnit.display}>{durationUnit.display}</option>\r\n        ));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n                <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                    Drug Prescription\r\n                    <Button\r\n                        variant=\"\"\r\n                        className=\"btn-close\"\r\n                        onClick={props.toggle}\r\n                    ></Button>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Card >\r\n                        <CardBody>\r\n                            <form>\r\n                                <div className=\"row\">\r\n                                    <div className=\"form-group  mb-3\">\r\n                                        <FormGroup>\r\n                                            <Label>Encounter Date</Label>\r\n                                            <InputGroup>\r\n                                                <Input\r\n                                                    type=\"date\"\r\n                                                    name=\"encounterDateTime\"\r\n                                                    id=\"encounterDateTime\"\r\n                                                    onChange={handleInputChangePharmacyOrderDto}\r\n                                                    value={pharmacyOrder.encounterDateTime}\r\n                                                />\r\n                                            </InputGroup>\r\n\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"row\">\r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                            <Label>Select Drugs</Label>\r\n                                            <InputGroup>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"drugName\"\r\n                                                    id=\"drugName\"\r\n                                                    onChange={handleInputChangePharmacyOrderDto}\r\n                                                    value={pharmacyOrder.drugName}\r\n                                                >\r\n                                                    <option value={\"\"}></option>\r\n                                                    {drugRows}\r\n                                                </Input>\r\n                                            </InputGroup>\r\n                                        </FormGroup>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                            <Label>Dosage Strength</Label>\r\n                                            <InputGroup>\r\n                                                <Input\r\n                                                    type=\"text\"\r\n                                                    name=\"dosageStrength\"\r\n                                                    id=\"dosageStrength\"\r\n                                                    onChange={handleInputChangePharmacyOrderDto}\r\n                                                    value={pharmacyOrder.dosageStrength}\r\n                                                />\r\n\r\n                                            </InputGroup>\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                            <Label>Dosage Unit</Label>\r\n                                            <InputGroup>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"dosageStrengthUnit\"\r\n                                                    id=\"dosageStrengthUnit\"\r\n                                                    onChange={handleInputChangePharmacyOrderDto}\r\n                                                    value={pharmacyOrder.dosageStrengthUnit}\r\n                                                >\r\n                                                    <option value={\"\"}></option>\r\n                                                    {dosageUnitsRows}\r\n                                                </Input>\r\n                                            </InputGroup>\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"row\">\r\n                                    <div className=\"form-group mb-3\">\r\n                                        <FormGroup>\r\n                                            <Label>Drug Brand Name</Label>\r\n                                            <InputGroup>\r\n                                                <Input\r\n                                                    type=\"text\"\r\n                                                    name=\"brand\"\r\n                                                    id=\"brand\"\r\n                                                    onChange={handleInputChangePharmacyOrderDto}\r\n                                                    value={pharmacyOrder.brand}\r\n                                                />\r\n\r\n                                            </InputGroup>\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"row\">\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                            <Label>Dose Frequency</Label>\r\n                                            <InputGroup>\r\n                                                <Input\r\n                                                    type=\"text\"\r\n                                                    name=\"dosageFrequency\"\r\n                                                    id=\"dosageFrequency\"\r\n                                                    onChange={handleInputChangePharmacyOrderDto}\r\n                                                    value={pharmacyOrder.dosageFrequency}\r\n                                                />\r\n\r\n                                            </InputGroup>\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                            <Label>Start Date</Label>\r\n                                            <InputGroup>\r\n                                                <Input\r\n                                                    type=\"date\"\r\n                                                    name=\"startDate\"\r\n                                                    id=\"startDate\"\r\n                                                    onChange={handleInputChangePharmacyOrderDto}\r\n                                                    value={pharmacyOrder.startDate}\r\n                                                />\r\n                                            </InputGroup>\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                            <Label>Duration</Label>\r\n                                            <InputGroup>\r\n                                                <Input\r\n                                                    type=\"text\"\r\n                                                    name=\"duration\"\r\n                                                    id=\"duration\"\r\n                                                    onChange={handleInputChangePharmacyOrderDto}\r\n                                                    value={pharmacyOrder.duration}\r\n                                                />\r\n\r\n                                            </InputGroup>\r\n                                        </FormGroup>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                            <Label>Duration Unit</Label>\r\n                                            <InputGroup>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"durationUnit\"\r\n                                                    id=\"durationUnit\"\r\n                                                    onChange={handleInputChangePharmacyOrderDto}\r\n                                                    value={pharmacyOrder.durationUnit}\r\n                                                >\r\n                                                    <option value={\"\"}></option>\r\n                                                    {durationUnitsRows}\r\n                                                </Input>\r\n                                            </InputGroup>\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"row\">\r\n                                    <div className=\"form-group mb-3\">\r\n                                        <FormGroup>\r\n                                            <Label>Other Instructions</Label>\r\n                                            <InputGroup>\r\n                                                <Input\r\n                                                    type=\"textarea\"\r\n                                                    name=\"comments\"\r\n                                                    id=\"comments\"\r\n                                                    onChange={handleInputChangePharmacyOrderDto}\r\n                                                    value={pharmacyOrder.comments}\r\n                                                />\r\n\r\n                                            </InputGroup>\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n\r\n                                {saving ? <Spinner /> : \"\"}\r\n                                <br />\r\n\r\n                                <MatButton\r\n                                    type=\"submit\"\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    className={classes.button}\r\n                                    startIcon={<SaveIcon />}\r\n                                    onClick={handleSubmit}\r\n                                >\r\n                                    {!saving ? (\r\n                                        <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                    ) : (\r\n                                        <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                    )}\r\n                                </MatButton>\r\n\r\n                                <MatButton\r\n                                    variant=\"contained\"\r\n                                    className={classes.button}\r\n                                    startIcon={<CancelIcon />}\r\n                                    onClick={props.toggle}\r\n                                >\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\r\n                                </MatButton>\r\n\r\n                            </form>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddPharmacyOrder;\r\n","import React, {Fragment, useState, useCallback, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input, InputGroup,InputGroupText} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport {token, url as baseUrl, apiUrl as apiUrl } from \"../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport {format} from \"date-fns\";\r\n\r\nimport 'react-summernote/dist/react-summernote.css'; // import styles\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}));\r\n\r\nconst EditPharmacyOrder = (props) => {\r\n    const patientObj = props.patientObj;\r\n    const pharmacyOrder = props.editPharmacyOrderValue;\r\n    const [saving, setSaving] = useState(false);\r\n    const classes = useStyles();\r\n    const [drugs, setDrugs] = useState([]);\r\n    const [dosageUnits, setDosageUnits] = useState([]);\r\n    const [durationUnits, setDurationUnits] = useState([]);\r\n\r\n    const [pharmacyOrderEdit, setPharmacyOrderEdit] = useState({\r\n       encounterDateTime: \"\",\r\n       drugName: \"\",\r\n       dosageStrength: \"\",\r\n       dosageStrengthUnit: \"\",\r\n       dosageFrequency: \"\",\r\n       startDate: \"\",\r\n       duration: \"\",\r\n       durationUnit: \"\",\r\n       comments: \"\",\r\n       patientId: patientObj.id,\r\n       orderedBy: \"\",\r\n       dateTimePrescribed: \"\",\r\n       visitId: patientObj.visitId\r\n   });\r\n\r\n    const handleInputChangePharmacyOrderDto = e => {\r\n        console.log(e)\r\n        setPharmacyOrderEdit({...pharmacyOrderEdit, [e.target.name]: e.target.value});\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        try {\r\n            e.preventDefault();\r\n            setSaving(true);\r\n\r\n            console.log(pharmacyOrder)\r\n\r\n//            axios.put(`${apiUrl}drug-orders/${pharmacyOrder.id}`, pharmacyOrder,\r\n//            { headers: {\"Authorization\" : `Bearer ${token}`}}).then(resp => {\r\n//                console.log(\"drug updated successfully\", resp );\r\n//                 toast.success(\"Successfully Saved drug order!\", {\r\n//                    position: toast.POSITION.TOP_RIGHT\r\n//                });\r\n//            });\r\n//\r\n\r\n            setSaving(false);\r\n            props.toggle()\r\n        } catch (e) {\r\n            toast.error(\"An error occurred while saving drug prescription\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n    };\r\n\r\n    const loadDosageUnits = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/DOSE_STRENGTH_UNIT`, { headers: {\"Authorization\" : `Bearer ${token}`}});\r\n            setDosageUnits(response.data);\r\n        } catch (e) {\r\n            toast.error(\"An error occurred while fetching DOSE STRENGTH UNIT\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    const loadDurationUnits = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/AGE_UNIT`, { headers: {\"Authorization\" : `Bearer ${token}`}});\r\n            setDurationUnits(response.data);\r\n        } catch (e) {\r\n            toast.error(\"An error occurred while fetching DOSE STRENGTH UNIT\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    const loadPharmacyDrugs = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${apiUrl}drugs`, { headers: {\"Authorization\" : `Bearer ${token}`}});\r\n            //console.log(\"drugs\", response.data[0].id)\r\n            if (response.data[0].id > 0) {\r\n                 setDrugs(response.data);\r\n            }\r\n        } catch (e) {\r\n            toast.error(\"An error occurred while fetching drugs\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        loadPharmacyDrugs();\r\n        loadDosageUnits();\r\n        loadDurationUnits();\r\n    }, [loadPharmacyDrugs, loadDosageUnits, loadDurationUnits]);\r\n\r\n    let drugRows = null;\r\n    let dosageUnitsRows = null;\r\n    let durationUnitsRows = null;\r\n    if (drugs && drugs.length > 0) {\r\n        //console.log(\"drugs\", drugs);\r\n        drugRows = drugs.map((drug, index) => (\r\n            <option key={drug.name} value={drug.name}>{drug.name}</option>\r\n        ));\r\n    }\r\n    if (dosageUnits && dosageUnits.length > 0) {\r\n        dosageUnitsRows = dosageUnits.map((dosageUnit, index) => (\r\n            <option key={dosageUnit.display} value={dosageUnit.display}>{dosageUnit.display}</option>\r\n        ));\r\n    }\r\n    if (durationUnits && durationUnits.length > 0) {\r\n        durationUnitsRows = durationUnits.map((durationUnit, index) => (\r\n            <option key={durationUnit.display} value={durationUnit.display}>{durationUnit.display}</option>\r\n        ));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n                <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                    Patient Drug Prescription\r\n                    <Button\r\n                        variant=\"\"\r\n                        className=\"btn-close\"\r\n                        onClick={props.toggle}\r\n                    ></Button>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Card >\r\n                        <CardBody>\r\n                            <form>\r\n                                <div className=\"row\">\r\n                                    <div className=\"form-group  mb-3\">\r\n                                        <FormGroup>\r\n                                            <Label>Encounter Date</Label>\r\n                                            <InputGroup>\r\n                                                <Input\r\n                                                    type=\"date\"\r\n                                                    name=\"encounterDateTime\"\r\n                                                    id=\"encounterDateTime\"\r\n                                                    onChange={handleInputChangePharmacyOrderDto}\r\n                                                    value={pharmacyOrder.encounterDateTime.substring(0,10)}\r\n                                                />\r\n                                            </InputGroup>\r\n\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"row\">\r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                            <Label>Select Drugs</Label>\r\n                                            <InputGroup>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"drugName\"\r\n                                                    id=\"drugName\"\r\n                                                    onChange={handleInputChangePharmacyOrderDto}\r\n                                                    value={pharmacyOrder.drugName}\r\n                                                >\r\n                                                    <option value={\"\"}></option>\r\n                                                    {drugRows}\r\n                                                </Input>\r\n                                            </InputGroup>\r\n                                        </FormGroup>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                            <Label>Dosage Strength</Label>\r\n                                            <InputGroup>\r\n                                                <Input\r\n                                                    type=\"text\"\r\n                                                    name=\"dosageStrength\"\r\n                                                    id=\"dosageStrength\"\r\n                                                    onChange={handleInputChangePharmacyOrderDto}\r\n                                                    value={pharmacyOrder.dosageStrength}\r\n                                                />\r\n\r\n                                            </InputGroup>\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                            <Label>Dosage Unit</Label>\r\n                                            <InputGroup>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"dosageStrengthUnit\"\r\n                                                    id=\"dosageStrengthUnit\"\r\n                                                    onChange={handleInputChangePharmacyOrderDto}\r\n                                                    value={pharmacyOrder.dosageStrengthUnit}\r\n                                                >\r\n                                                    <option value={\"\"}></option>\r\n                                                    {dosageUnitsRows}\r\n                                                </Input>\r\n                                            </InputGroup>\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"row\">\r\n                                    <div className=\"form-group mb-3\">\r\n                                        <FormGroup>\r\n                                            <Label>Drug Brand Name</Label>\r\n                                            <InputGroup>\r\n                                                <Input\r\n                                                    type=\"text\"\r\n                                                    name=\"brand\"\r\n                                                    id=\"brand\"\r\n                                                    onChange={handleInputChangePharmacyOrderDto}\r\n                                                    value={pharmacyOrder.brand}\r\n                                                />\r\n\r\n                                            </InputGroup>\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"row\">\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                            <Label>Dose Frequency</Label>\r\n                                            <InputGroup>\r\n                                                <Input\r\n                                                    type=\"text\"\r\n                                                    name=\"dosageFrequency\"\r\n                                                    id=\"dosageFrequency\"\r\n                                                    onChange={handleInputChangePharmacyOrderDto}\r\n                                                    value={pharmacyOrder.dosageFrequency}\r\n                                                />\r\n\r\n                                            </InputGroup>\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                            <Label>Start Date</Label>\r\n                                            <InputGroup>\r\n                                                <Input\r\n                                                    type=\"date\"\r\n                                                    name=\"startDate\"\r\n                                                    id=\"startDate\"\r\n                                                    onChange={handleInputChangePharmacyOrderDto}\r\n                                                    value={pharmacyOrder.startDate}\r\n                                                />\r\n                                            </InputGroup>\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                            <Label>Duration</Label>\r\n                                            <InputGroup>\r\n                                                <Input\r\n                                                    type=\"text\"\r\n                                                    name=\"duration\"\r\n                                                    id=\"duration\"\r\n                                                    onChange={handleInputChangePharmacyOrderDto}\r\n                                                    value={pharmacyOrder.duration}\r\n                                                />\r\n\r\n                                            </InputGroup>\r\n                                        </FormGroup>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                            <Label>Duration Unit</Label>\r\n                                            <InputGroup>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"durationUnit\"\r\n                                                    id=\"durationUnit\"\r\n                                                    onChange={handleInputChangePharmacyOrderDto}\r\n                                                    value={pharmacyOrder.durationUnit}\r\n                                                >\r\n                                                    <option value={\"\"}></option>\r\n                                                    {durationUnitsRows}\r\n                                                </Input>\r\n                                            </InputGroup>\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"row\">\r\n                                    <div className=\"form-group mb-3\">\r\n                                        <FormGroup>\r\n                                            <Label>Other Instructions</Label>\r\n                                            <InputGroup>\r\n                                                <Input\r\n                                                    type=\"textarea\"\r\n                                                    name=\"comments\"\r\n                                                    id=\"comments\"\r\n                                                    onChange={handleInputChangePharmacyOrderDto}\r\n                                                    value={pharmacyOrder.comments}\r\n                                                />\r\n\r\n                                            </InputGroup>\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n\r\n                                {saving ? <Spinner /> : \"\"}\r\n                                <br />\r\n\r\n                               {/* <MatButton\r\n                                    type=\"submit\"\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    className={classes.button}\r\n                                    startIcon={<SaveIcon />}\r\n                                    onClick={handleSubmit}\r\n                                >\r\n                                    {!saving ? (\r\n                                        <span style={{ textTransform: \"capitalize\" }}>Update</span>\r\n                                    ) : (\r\n                                        <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                    )}\r\n                                </MatButton>*/}\r\n\r\n                                <MatButton\r\n                                    variant=\"contained\"\r\n                                    className={classes.button}\r\n                                    startIcon={<CancelIcon />}\r\n                                    onClick={props.toggle}\r\n                                >\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\r\n                                </MatButton>\r\n\r\n                            </form>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditPharmacyOrder;\r\n","import React, {Fragment, useState, useCallback, useEffect } from \"react\";\r\nimport { KeyboardDateTimePicker, MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport axios from \"axios\";\r\nimport { toast } from 'react-toastify';\r\nimport {token, url as baseUrl, apiUrl as apiUrl } from \"../../../api\";\r\nimport { Grid, Segment, Label, Icon, List,Button, Card, Feed, Input, Radio } from 'semantic-ui-react';\r\n// Page titie\r\nimport {  Checkbox, Table } from 'semantic-ui-react';\r\nimport {format} from \"date-fns\";\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport ButtonMui from \"@material-ui/core/Button\";\r\nimport AddPharmacyOrder from './AddPharmacyOrder';\r\nimport EditPharmacyOrder from './EditPharmacyOrder';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Accordion,AccordionSummary,AccordionDetails } from '@material-ui/core'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        fontWeight: 'bolder',\r\n    },\r\n}));\r\n\r\nconst Widget = (props) => {\r\n    const classes = useStyles();\r\n    const patientObj = props.patientObj ? props.patientObj : {}\r\n    //console.log(\"po\", patientObj)\r\n    const [isLabEnabled, setIsLabEnabled] = useState(false);\r\n    const [isPharmacyEnabled, setIsPharmacyEnabled] = useState(false);\r\n    const [hasAllergies, setHasAllergies] = useState(false);\r\n    const [pharmacyModal, setPharmacyModal] = useState(false);\r\n    const [pharmacyOrderModal, setPharmacyOrderModal] = useState(false);\r\n    const [otherVisitsVitals, setOtherVisitVitals] = useState([]);\r\n    const [previousConsultation, setPreviousConsultation] = useState([]);\r\n    const [encounterDate, setEncounterDate] = useState(new Date());\r\n    const { handleSubmit, control, getValues, setError, setValue } = useForm();\r\n    const [inputFields, setInputFields] = useState([\r\n        { complaint: '', onsetDate: '', severity: 0, dateResolved: '' }\r\n    ]);\r\n    const [inputFieldsDiagnosis, setInputFieldsDiagnosis] = useState([\r\n        { certainty: '', diagnosis: '', diagnosisOrder: 0 }\r\n    ]);\r\n\r\n    const [inputFieldsLab, setInputFieldsLab] = useState([\r\n            { encounterDate: format(new Date(), 'yyyy-MM-dd'), labOrder: '',\r\n            labTest: '', priority: '', status: '' }\r\n        ]);\r\n\r\n    const history = useHistory();\r\n    const toggle = () => setPharmacyModal(!pharmacyModal);\r\n    const toggleOrder = () => setPharmacyOrderModal(!pharmacyOrderModal);\r\n    const [pharmacyOrder, setPharmacyOrder] = useState([]);\r\n    const [editPharmacyOrderValue, setEditPharmacyOrderValue] = useState({\r\n        encounterDateTime: \"\",\r\n        drugName: \"\",\r\n        dosageStrength: \"\",\r\n        dosageStrengthUnit: \"\",\r\n        dosageFrequency: \"\",\r\n        startDate: \"\",\r\n        duration: \"\",\r\n        durationUnit: \"\",\r\n        comments: \"\",\r\n        patientId: patientObj.id,\r\n        orderedBy: \"\",\r\n        dateTimePrescribed: \"\",\r\n        visitId: patientObj.visitId\r\n    });\r\n\r\n    const pharmacy_by_visitId = useCallback(async () => {\r\n            try {\r\n                const response = await axios.get(`${apiUrl}drug-orders/visits/${patientObj.visitId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}});\r\n\r\n\r\n                if (typeof response.data === 'string') {\r\n                    setPharmacyOrder([]);\r\n                }else {\r\n                    console.log(\"red\",response.data)\r\n                    setPharmacyOrder(response.data);\r\n                }\r\n\r\n\r\n            } catch (e) {\r\n                toast.error(\"An error occurred while fetching pharmacy data\", {\r\n                    position: toast.POSITION.TOP_RIGHT\r\n                });\r\n            }\r\n        }, []);\r\n\r\n    const onSubmit = async (data) => {\r\n        const diagnosisList = [];\r\n        const presentingComplaints = [];\r\n        const labTests = [];\r\n\r\n        for (const inputFieldsDiag of inputFieldsDiagnosis) {\r\n            if (inputFieldsDiag.diagnosis) {\r\n                diagnosisList.push(inputFieldsDiag);\r\n            }\r\n        }\r\n\r\n        for (const inputField of inputFields) {\r\n            if (inputField.complaint) {\r\n                presentingComplaints.push(inputField);\r\n            }\r\n        }\r\n\r\n        for (const inputField of inputFieldsLab) {\r\n\r\n            if (inputField.encounterDate) {\r\n                labTests.push({\r\n                \"description\": inputField.labOrder.slice(2, inputField.labOrder.length),\r\n                \"id\": 0,\r\n                \"labTestGroupId\": inputField.labOrder.slice(0, 1),\r\n                \"labTestId\": inputField.labTest,\r\n                \"labTestOrderStatus\": inputField.status,\r\n                \"orderPriority\": inputField.priority,\r\n//                \"unitMeasurement\": \"\",\r\n//                \"viralLoadIndication\": 0\r\n              });\r\n            }\r\n        }\r\n\r\n        try {\r\n            const InData = {\r\n                \"diagnosisList\": diagnosisList,\r\n                \"encounterDate\": format(new Date(data.encounterDate.toString()), 'yyyy-MM-dd'),\r\n                \"id\": 0,\r\n                \"patientId\": patientObj.id,\r\n                \"presentingComplaints\": presentingComplaints,\r\n                \"visitId\": patientObj.visitId,\r\n                \"visitNotes\": data.visitNote\r\n            };\r\n\r\n            const labOrder = {\r\n                  \"orderDate\": format(new Date(data.encounterDate.toString()), 'yyyy-MM-dd'),\r\n                  \"orderTime\": new Date().toLocaleTimeString('en-US',{hour12: false}),\r\n                  \"patientId\": patientObj.id,\r\n                  \"tests\": labTests,\r\n                  \"visitId\": patientObj.visitId\r\n            }\r\n            //console.log('labOrder', labOrder)\r\n            await axios.post(`${baseUrl}consultations`, InData,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }).then(( resp ) =>{\r\n                console.log(\"diagnosis saved\", resp)\r\n\r\n                axios.post(`${baseUrl}laboratory/orders`, labOrder,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }).then(( resp ) =>{\r\n                    console.log(\"lab served\", resp)\r\n\r\n                    toast.success(\"Successfully Saved Consultation !\", {\r\n                        position: toast.POSITION.TOP_RIGHT\r\n                    });\r\n\r\n                    history.push('/');\r\n                }).catch((err) => {\r\n                     toast.error(`An error occured while saving laboratory test! ${err}`, {\r\n                        position: toast.POSITION.TOP_RIGHT\r\n                    });\r\n                });\r\n\r\n            });\r\n\r\n        } catch (e) {\r\n            toast.error(\"An error occured while saving Consultation !\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n    };\r\n    const OnError = (errors) => {\r\n        console.error(errors);\r\n        toast.error(\"Visit Note Is Required\", {\r\n            position: toast.POSITION.TOP_RIGHT\r\n        });\r\n    };\r\n\r\n    const [labGroups, setLabGroups] = useState([]);\r\n    const [labTests, setLabTests] = useState([]);\r\n    const [priorities, setPriorities] = useState([]);\r\n\r\n    const loadLabCheck = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}modules/check?moduleName=lab`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setIsLabEnabled(response.data);\r\n        } catch (e) {\r\n            toast.error(\"An error occurred while fetching lab\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    const loadPharmacyCheck = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}modules/check?moduleName=pharmacy`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setIsPharmacyEnabled(response.data);\r\n        } catch (e) {\r\n            toast.error(\"An error occurred while fetching pharmacy\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    const loadOtherVisitsVitals = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}patient/vital-sign/person/${patientObj.id}`, { headers: {\"Authorization\" : `Bearer ${token}`}});\r\n            setOtherVisitVitals(response.data);\r\n        } catch (e) {\r\n            toast.error(\"An error occurred while fetching vitals\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    const loadPreviousConsultation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}consultations/consultations-by-patient-id/${patientObj.id}`, { headers: {\"Authorization\" : `Bearer ${token}`}});\r\n            setPreviousConsultation(response.data);\r\n        } catch (e) {\r\n            toast.error(\"An error occurred while fetching previous consultation\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    const loadLabGroup = useCallback(async () => {\r\n            try {\r\n                const response = await axios.get(`${baseUrl}laboratory/labtestgroups`, { headers: {\"Authorization\" : `Bearer ${token}`}});\r\n                setLabGroups(response.data);\r\n            } catch (e) {\r\n                toast.error(\"An error occurred while fetching lap group data\", {\r\n                    position: toast.POSITION.TOP_RIGHT\r\n                });\r\n            }\r\n        }, []);\r\n\r\n    const priority = useCallback(async () => {\r\n            try {\r\n                const response = await axios.get(`${baseUrl}application-codesets/v2/TEST_ORDER_PRIORITY`, { headers: {\"Authorization\" : `Bearer ${token}`}});\r\n                //console.log(\"priority\", response.data);\r\n                setPriorities(response.data);\r\n            } catch (e) {\r\n                toast.error(\"An error occurred while fetching priority data\", {\r\n                    position: toast.POSITION.TOP_RIGHT\r\n                });\r\n            }\r\n        }, []);\r\n\r\n    useEffect(() => {\r\n        loadPharmacyCheck();\r\n        loadLabCheck();\r\n        loadOtherVisitsVitals();\r\n        loadPreviousConsultation();\r\n        loadLabGroup();\r\n        priority();\r\n        pharmacy_by_visitId();\r\n        getLatestVitals();\r\n    }, [loadPharmacyCheck, loadLabCheck, loadOtherVisitsVitals,\r\n    loadPreviousConsultation, loadLabGroup, priority, pharmacy_by_visitId]);\r\n\r\n    const [latestVitals, setVitalSignDto]= useState({})\r\n    ///GET LIST OF Patients\r\n    async function getLatestVitals() {\r\n        axios\r\n            .get(`${baseUrl}patient/vital-sign/visit/${patientObj.visitId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setVitalSignDto(response.data);\r\n            })\r\n            .catch((error) => {\r\n            });\r\n    }\r\n\r\n\r\n    const handleAddFields = () => {\r\n        const values = [...inputFields];\r\n        values.push({ complaint: '', onsetDate: '', severity: 0, dateResolved: '' });\r\n        setInputFields(values);\r\n    };\r\n\r\n    const handleAddDiagFields = () => {\r\n        const values = [...inputFieldsDiagnosis];\r\n        values.push({ certainty: '', diagnosis: '', diagnosisOrder: 0 });\r\n        setInputFieldsDiagnosis(values);\r\n    };\r\n\r\n    const handleAddFieldsLab = () => {\r\n        const values = [...inputFieldsLab];\r\n        values.push({ encounterDate: format(new Date(), 'yyyy-MM-dd'), labOrder: '', labTest: '', priority: '', status: '' });\r\n        setInputFieldsLab(values);\r\n    };\r\n\r\n    const handleInputChange = (index, event) => {\r\n        const values = [...inputFields];\r\n        if (event.target.name === \"complaint\") {\r\n            values[index].complaint = event.target.value;\r\n        } else if (event.target.name === \"onsetDate\") {\r\n            values[index].onsetDate = event.target.value;\r\n        } else if (event.target.name === \"severity\") {\r\n            values[index].severity = event.target.value;\r\n        } else if (event.target.name === \"dateResolved\") {\r\n            values[index].dateResolved = event.target.value;\r\n        }\r\n\r\n        setInputFields(values);\r\n    };\r\n\r\n    const handleInputDiagChange = (index, event) => {\r\n        const values = [...inputFieldsDiagnosis];\r\n        if (event.target.name === \"diagnosis\") {\r\n            values[index].diagnosis = event.target.value;\r\n        } else if (event.target.name === \"certainty\") {\r\n            values[index].certainty = event.target.value;\r\n        } else if (event.target.name === \"diagnosisOrder\") {\r\n            values[index].diagnosisOrder = event.target.value;\r\n        }\r\n\r\n        setInputFieldsDiagnosis(values);\r\n    };\r\n\r\n    const labCascade = id => {\r\n        labGroups.forEach(function (x) {\r\n              if ( x.id == id) {\r\n                setLabTests(x.labTests)\r\n            }\r\n        });\r\n    }\r\n\r\n    const handleInputLabChange = (index, event) => {\r\n            const values = [...inputFieldsLab];\r\n            if (event.target.name === \"labOrder\") {\r\n                const str = event.target.value;\r\n                values[index].labOrder = str;\r\n                labCascade(str.slice(0,1))\r\n            }\r\n            else if (event.target.name === \"labTest\") {\r\n                values[index].labTest = event.target.value;\r\n            } else if (event.target.name === \"priority\") {\r\n                values[index].priority = event.target.value;\r\n            }\r\n            else if (event.target.name === \"status\") {\r\n                values[index].status = event.target.value;\r\n            }\r\n\r\n            setInputFieldsLab(values);\r\n        };\r\n\r\n    const handleAddPharmacyOrder = () => {\r\n        setPharmacyModal(!pharmacyModal);\r\n    };\r\n\r\n     const handleEditPharmacyOrder = (pharmacy) => {\r\n            console.log(pharmacy);\r\n            setEditPharmacyOrderValue(pharmacy);\r\n            setPharmacyOrderModal(!pharmacyOrderModal);\r\n     };\r\n\r\n     const handleDelete = async (id) => {\r\n        console.log(id)\r\n           await axios.delete(`${apiUrl}drug-orders/${id}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}}).then(resp => {\r\n            console.log(\"drug order deleted\");\r\n             toast.success(\"Successfully deleted drug order!\", {\r\n                    position: toast.POSITION.TOP_RIGHT\r\n                });\r\n            });\r\n     }\r\n\r\n    return (\r\n        <Grid columns='equal'>\r\n            <Grid.Column>\r\n                {  Object.keys(latestVitals).length > 0 &&\r\n                    <Segment>\r\n\r\n                        <div className={classes.root}>\r\n                            <Accordion style={{minHeight:'45px',padding:'0px 0px 0px 0px'}} defaultExpanded={true}>\r\n                                <AccordionSummary\r\n                                    expandIcon={<ExpandMoreIcon />}\r\n                                    aria-controls=\"panel1a-content\"\r\n                                    id=\"panel1a-header\"\r\n                                    style={{padding:'0px 0px 0px 2px',borderBottom:'2px solid #eee'}}\r\n                                >\r\n                                    <Label as='a' color='blue'  style={{width:'100%'}}>\r\n                                        <Typography className={classes.heading}>Current Vitals - Date - {latestVitals.encounterDate}</Typography>\r\n                                    </Label>\r\n\r\n                                </AccordionSummary>\r\n                                <AccordionDetails style={{padding:'8px'}}>\r\n                                    <List celled style={{width:'100%'}}>\r\n                                        <List.Item style={{paddingBottom:'10px', paddingTop:'10px',borderTop:'1px solid #fff', marginTop:'-5px' }}>Pulse <span style={{color:'rgb(153, 46, 98)'}} className=\"float-end\"><b>{latestVitals.pulse} bpm</b></span></List.Item>\r\n                                        <List.Item style={{paddingBottom:'10px', paddingTop:'10px'}}>Respiratory Rate <span className=\"float-end\"><b style={{color:'rgb(153, 46, 98)'}}>{latestVitals.respiratoryRate} bpm</b></span></List.Item>\r\n                                        <List.Item style={{paddingBottom:'10px', paddingTop:'10px'}}>Temperature <span className=\"float-end\"><b style={{color:'rgb(153, 46, 98)'}}>{latestVitals.temperature} <sup>0</sup>C</b></span></List.Item>\r\n                                        <List.Item style={{paddingBottom:'10px', paddingTop:'10px'}}>Blood Pressure <span  className=\"float-end\"><b style={{color:'rgb(153, 46, 98)'}}>{latestVitals.systolic}/{latestVitals.diastolic}</b></span></List.Item>\r\n                                        <List.Item style={{paddingBottom:'10px', paddingTop:'10px'}}>Height <span  className=\"float-end\"><b style={{color:'rgb(153, 46, 98)'}}>{latestVitals.height} cm</b></span></List.Item>\r\n                                        <List.Item style={{paddingBottom:'10px', paddingTop:'10px'}}>Weight <span  className=\"float-end\"><b style={{color:'rgb(153, 46, 98)'}}>{latestVitals.bodyWeight} kg</b></span></List.Item>\r\n                                        <List.Item style={{paddingBottom:'10px', paddingTop:'10px'}}>BMI <span  className=\"float-end\"><b style={{color:'rgb(153, 46, 98)'}}>{latestVitals.bodyWeight} kg</b></span></List.Item>\r\n                                    </List>\r\n                                </AccordionDetails>\r\n                            </Accordion>\r\n\r\n                            {otherVisitsVitals && otherVisitsVitals.length > 0 &&\r\n                                otherVisitsVitals.map(vital =>\r\n                                    <Accordion>\r\n                                        <AccordionSummary\r\n                                            expandIcon={<ExpandMoreIcon />}\r\n                                            aria-controls=\"panel2a-content\"\r\n                                            id=\"panel2a-header\"\r\n                                            style={{padding:'0px 0px 0px 10px'}}\r\n                                        >\r\n                                            <Typography className={classes.heading} style={{color:'#014d88'}}>Vitals Collection - Date - {vital.encounterDate}</Typography>\r\n                                        </AccordionSummary>\r\n                                        <AccordionDetails style={{padding:'8px'}}>\r\n                                            <List celled style={{width:'100%'}}>\r\n                                                <List.Item style={{paddingBottom:'10px', paddingTop:'10px',borderTop:'1px solid #fff', marginTop:'-5px' }}>Pulse <span  style={{color:'#014d88'}} className=\"float-end\"><b>{vital.pulse} bpm</b></span></List.Item>\r\n                                                <List.Item style={{paddingBottom:'10px', paddingTop:'10px'}}>Respiratory Rate <span className=\"float-end\" style={{color:'#014d88'}}><b>{vital.respiratoryRate} bpm</b></span></List.Item>\r\n                                                <List.Item style={{paddingBottom:'10px', paddingTop:'10px'}}>Temperature <span className=\"float-end\" style={{color:'#014d88'}}><b>{vital.temperature} <sup>0</sup>C</b></span></List.Item>\r\n                                                <List.Item style={{paddingBottom:'10px', paddingTop:'10px'}}>Blood Pressure <span  className=\"float-end\" style={{color:'#014d88'}}><b>{vital.systolic}/{vital.diastolic}</b></span></List.Item>\r\n                                                <List.Item style={{paddingBottom:'10px', paddingTop:'10px'}}>Height <span  className=\"float-end\" style={{color:'#014d88'}}><b>{vital.height} cm</b></span></List.Item>\r\n                                                <List.Item style={{paddingBottom:'10px', paddingTop:'10px'}}>Weight <span  className=\"float-end\" style={{color:'#014d88'}}><b>{vital.bodyWeight} kg</b></span></List.Item>\r\n                                                <List.Item style={{paddingBottom:'10px', paddingTop:'10px'}}>BMI <span  className=\"float-end\" style={{color:'#014d88'}}><b>{vital.bodyWeight} kg</b></span></List.Item>\r\n                                            </List>\r\n                                        </AccordionDetails>\r\n                                    </Accordion>\r\n                                )\r\n\r\n                            }\r\n\r\n\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                    </Segment>\r\n                }\r\n\r\n                { previousConsultation &&\r\n                    <Segment>\r\n                        <Label as='a' color='black' style={{width:'100%',marginBottom:'10px'}}>\r\n                            Conditions\r\n                        </Label>\r\n                        <br/>\r\n\r\n                        { previousConsultation.map((consultation, i) => (\r\n                            <div>\r\n                                {consultation.diagnosisList.map((diagnosis, j)=> (\r\n                                    <Label as='a'  color='white'  size=\"mini\" pointing>\r\n                                        {diagnosis.diagnosis}\r\n                                    </Label>\r\n                                ))}\r\n                            </div>\r\n                        ))}\r\n                    </Segment>\r\n                }\r\n\r\n                { hasAllergies &&\r\n                    <Segment>\r\n                        <Label as='a' color='red' ribbon>\r\n                            Allergies\r\n                        </Label>\r\n                        <br/><br/>\r\n\r\n                        <Label.Group color='blue'>\r\n                            <Label as='a'  size=\"mini\">dust</Label>\r\n                            <Label as='a'  size=\"mini\">smoke</Label>\r\n                        </Label.Group>\r\n                    </Segment>\r\n                }\r\n            </Grid.Column>\r\n\r\n            <Grid.Column width={9}>\r\n                <form onSubmit={handleSubmit(onSubmit, OnError)}>\r\n                    <Label as='a' color='black' style={{width:'100%',height:'35px',fontSize:'16px'}}>\r\n                        <b>Physical Examination</b>\r\n                    </Label>\r\n\r\n                    <Segment>\r\n                        <div className=\"input-group input-group-sm mb-3\" >\r\n                            <span className=\"input-group-text\" style={{height:'40px',backgroundColor:'#014d88',color:'#fff', fontSize:'14px'}}>Encounter Dates</span>\r\n                            <MuiPickersUtilsProvider utils={DateFnsUtils} >\r\n                                <Controller\r\n                                    name=\"encounterDate\"\r\n                                    control={control}\r\n                                    defaultValue={encounterDate}\r\n                                    rules={{ required: true }}\r\n                                    render={({ field: { ref, ...rest }}) => (\r\n                                        <KeyboardDateTimePicker\r\n                                            style={{height:'40px', border:'1px solid #014d88'}}\r\n                                            disableFuture\r\n                                            format=\"dd/MM/yyyy hh:mm a\"\r\n                                            value={encounterDate}\r\n                                            onChange={setEncounterDate}\r\n                                            className=\"form-control\"\r\n                                            invalidDateMessage={\"Encounter date is required\"}\r\n                                            {...rest}\r\n                                        />\r\n                                    )}\r\n                                    />\r\n                            </MuiPickersUtilsProvider>\r\n                        </div>\r\n\r\n                        <div className=\"input-group input-group-sm \" >\r\n                            <span className=\"input-group-text\" style={{height:'300px',backgroundColor:'#014d88',color:'#fff', fontSize:'14px'}}>Visit Note</span>\r\n                            <Controller\r\n                                name=\"visitNote\"\r\n                                control={control}\r\n                                rules={{ required: true }}\r\n                                render={({ field: { ref, ...rest }}) => (\r\n                                    <textarea  style={{ minHeight: 300,border:'1px solid #014d88' }} className=\"form-control\" {...rest} ></textarea>\r\n                                )}\r\n                            />\r\n                        </div>\r\n                        <br/>\r\n                        <Label as='a'  style={{backgroundColor:'#014d88', color:'#fff',width:'100%',height:'35px',fontSize:'16px'}}>\r\n                            Presenting Complaints\r\n                        </Label>\r\n                        <Table style={{color:'#014d88',borderColor:'#014d88'}} celled >\r\n                            <Table.Header>\r\n                                <Table.Row>\r\n                                    <Table.Cell style={{ fontWeight: 'bold'}}>Complaints</Table.Cell>\r\n                                    <Table.Cell style={{ fontWeight: 'bold'}}>Onset Date</Table.Cell>\r\n                                    <Table.Cell style={{ fontWeight: 'bold'}}>Severity</Table.Cell>\r\n                                    <Table.Cell style={{ fontWeight: 'bold'}}>Date Resolved</Table.Cell>\r\n                                </Table.Row>\r\n                            </Table.Header>\r\n\r\n                            <Table.Body>\r\n                                    {inputFields.map((inputField, index) => (\r\n                                        <Fragment key={`${inputField}~${index}`}>\r\n                                            <Table.Row>\r\n                                            <Table.Cell>\r\n                                                <Input\r\n                                                    id=\"complaint\"\r\n                                                    name=\"complaint\"\r\n                                                    type=\"text\"\r\n                                                    fluid\r\n                                                    placeholder='Enter Presenting Complaints'\r\n                                                    value={inputField.complaint}\r\n                                                    onChange={event => handleInputChange(index, event)}\r\n                                                />\r\n                                            </Table.Cell>\r\n                                            <Table.Cell>\r\n                                                <Input\r\n                                                    id=\"onsetDate\"\r\n                                                    name=\"onsetDate\"\r\n                                                    type=\"date\"\r\n                                                    fluid\r\n                                                    placeholder='Onset Date'\r\n                                                    value={inputField.onsetDate}\r\n                                                    onChange={event => handleInputChange(index, event)}\r\n                                                />\r\n                                            </Table.Cell>\r\n                                            <Table.Cell>\r\n                                                <select\r\n                                                    class=\"ui fluid selection dropdown\"\r\n                                                    value={inputField.severity}\r\n                                                    onChange={event => handleInputChange(index, event)}\r\n                                                    name=\"severity\"\r\n                                                    id=\"severity\">\r\n                                                    <option>Select</option>\r\n                                                    <option value=\"0\">0</option>\r\n                                                    <option value=\"1\">1</option>\r\n                                                    <option value=\"2\">2</option>\r\n                                                    <option value=\"3\">3</option>\r\n                                                    <option value=\"4\">4</option>\r\n                                                    <option value=\"5\">5</option>\r\n                                                    <option value=\"6\">6</option>\r\n                                                    <option value=\"7\">7</option>\r\n                                                    <option value=\"8\">8</option>\r\n                                                    <option value=\"9\">9</option>\r\n                                                    <option value=\"10\">10</option>\r\n                                                </select>\r\n                                            </Table.Cell>\r\n                                            <Table.Cell>\r\n                                                <Input\r\n                                                    id=\"dateResolved\"\r\n                                                    name=\"dateResolved\"\r\n                                                    type=\"date\"\r\n                                                    fluid\r\n                                                    placeholder='Date Resolved'\r\n                                                    value={inputField.dateResolved}\r\n                                                    onChange={event => handleInputChange(index, event)}\r\n                                                />\r\n                                            </Table.Cell>\r\n                                            </Table.Row>\r\n                                        </Fragment>\r\n                                    ))}\r\n\r\n                            </Table.Body>\r\n\r\n                            <Table.Footer>\r\n                                <Table.Row>\r\n                                    <Table.HeaderCell>\r\n                                        <Button color=\"blue\" size=\"tiny\" type=\"button\" onClick={() => handleAddFields()}>\r\n                                            <Icon name='plus' /> Add More\r\n                                        </Button>\r\n                                    </Table.HeaderCell>\r\n                                </Table.Row>\r\n                            </Table.Footer>\r\n                        </Table>\r\n                        <br/>\r\n                        <Label as='a' style={{backgroundColor:'#992E62', color:'#fff', width:'100%',height:'35px',fontSize:'16px'}}>\r\n                            Clinical Diagnosis\r\n                        </Label>\r\n                        <Table style={{color:'#992E62',borderColor:'#992E62'}} celled>\r\n                            <Table.Header>\r\n                                <Table.Row>\r\n                                    <Table.Cell style={{ fontWeight: 'bold'}}>Condition</Table.Cell>\r\n                                    <Table.Cell style={{ fontWeight: 'bold'}}>Order</Table.Cell>\r\n                                    <Table.Cell style={{ fontWeight: 'bold'}}>Certainty</Table.Cell>\r\n                                    <Table.Cell style={{ fontWeight: 'bold'}}></Table.Cell>\r\n                                </Table.Row>\r\n                            </Table.Header>\r\n\r\n                            <Table.Body>\r\n                                {inputFieldsDiagnosis.map((diagInputField, diagIndex) => (\r\n                                    <Fragment key={`${diagInputField}~${diagIndex}`}>\r\n                                        <Table.Row>\r\n                                            <Table.Cell>\r\n                                                <Input\r\n                                                    id=\"diagnosis\"\r\n                                                    name=\"diagnosis\"\r\n                                                    type=\"text\"\r\n                                                    fluid\r\n                                                    placeholder='Condition'\r\n                                                    value={diagInputField.diagnosis}\r\n                                                    onChange={event => handleInputDiagChange(diagIndex, event)}\r\n                                                />\r\n                                            </Table.Cell>\r\n                                            <Table.Cell>\r\n                                                <select\r\n                                                    className=\"ui fluid selection dropdown\"\r\n                                                    value={diagInputField.diagnosisOrder}\r\n                                                    onChange={event => handleInputDiagChange(diagIndex, event)}\r\n                                                    name=\"diagnosisOrder\"\r\n                                                    id=\"diagnosisOrder\">\r\n                                                    <option>Select</option>\r\n                                                    <option value=\"1\">Primary</option>\r\n                                                    <option value=\"2\">Secondary</option>\r\n                                                </select>\r\n                                            </Table.Cell>\r\n                                            <Table.Cell>\r\n                                                <select\r\n                                                    className=\"ui fluid selection dropdown\"\r\n                                                    value={diagInputField.certainty}\r\n                                                    onChange={event => handleInputDiagChange(diagIndex, event)}\r\n                                                    name=\"certainty\"\r\n                                                    id=\"certainty\">\r\n                                                    <option>Select</option>\r\n                                                    <option value=\"1\">Presumed</option>\r\n                                                    <option value=\"2\">Confirmed</option>\r\n                                                </select>\r\n                                            </Table.Cell>\r\n                                            <Table.Cell></Table.Cell>\r\n                                        </Table.Row>\r\n                                    </Fragment>\r\n                                ))}\r\n                            </Table.Body>\r\n\r\n                            <Table.Footer>\r\n                                <Table.Row>\r\n                                    <Table.HeaderCell>\r\n\r\n                                        <Button style={{backgroundColor:'#992E62',color:'#fff'}} size=\"tiny\" type=\"button\" onClick={() => handleAddDiagFields()}>\r\n                                            <Icon name='plus' /> Add More\r\n                                        </Button>\r\n                                    </Table.HeaderCell>\r\n\r\n                                </Table.Row>\r\n                            </Table.Footer>\r\n                        </Table>\r\n                        <br/>\r\n                        { isLabEnabled && <div>\r\n                            <Label as='a' color='teal' style={{width:'100%',height:'35px',fontSize:'16px'}}>\r\n                                Lab Test\r\n                            </Label>\r\n\r\n                            <Table color=\"teal\" celled>\r\n                                <Table.Header>\r\n                                    <Table.Row>\r\n                                        <Table.Cell style={{ fontWeight: 'bold'}}>Lab Test Group</Table.Cell>\r\n                                        <Table.Cell style={{ fontWeight: 'bold'}}>Lab Test</Table.Cell>\r\n                                        <Table.Cell style={{ fontWeight: 'bold'}}>Priority</Table.Cell>\r\n                                        <Table.Cell style={{ fontWeight: 'bold'}}>Status</Table.Cell>\r\n                                    </Table.Row>\r\n                                </Table.Header>\r\n\r\n                                <Table.Body>\r\n                                   {inputFieldsLab.map((labInputField, labIndex) => (\r\n                                        <Fragment key={`${labInputField}~${labIndex}`}>\r\n                                            <Table.Row>\r\n                                                <Table.Cell>\r\n                                                    <select\r\n                                                        className=\"ui fluid selection dropdown\"\r\n                                                        value={labInputField.labOrder}\r\n                                                        onChange={ e => handleInputLabChange(labIndex, e)}\r\n                                                        name=\"labOrder\"\r\n                                                        id=\"labOrder\">\r\n                                                        <option>Select</option>\r\n                                                        {\r\n                                                            labGroups.map((d)=> (\r\n                                                                <option key={d.id} value={`${d.id}-${d.groupName}`}>\r\n                                                                    {d.groupName}\r\n                                                                </option>\r\n                                                            ))\r\n                                                        }\r\n                                                    </select>\r\n\r\n                                                </Table.Cell>\r\n                                                <Table.Cell>\r\n                                                    <select\r\n                                                        className=\"ui fluid selection dropdown\"\r\n                                                        value={labInputField.labTest}\r\n                                                        onChange={e => handleInputLabChange(labIndex, e)}\r\n                                                        name=\"labTest\"\r\n                                                        id=\"labTest\">\r\n                                                        <option>Select</option>\r\n                                                             {\r\n                                                                labTests.map((d)=> (\r\n                                                                    <option key={d.id} value={d.id}>\r\n                                                                        {d.labTestName}\r\n                                                                    </option>\r\n                                                                ))\r\n                                                            }\r\n                                                    </select>\r\n\r\n                                                </Table.Cell>\r\n                                                <Table.Cell>\r\n                                                <select\r\n                                                    className=\"ui fluid selection dropdown\"\r\n                                                    value={labInputField.priority}\r\n                                                    onChange={e => handleInputLabChange(labIndex, e)}\r\n                                                    name=\"priority\"\r\n                                                    id=\"priority\">\r\n                                                    <option>Select</option>\r\n                                                       {\r\n                                                            priorities.map((d)=> (\r\n                                                                <option key={d.id} value={d.id}>\r\n                                                                    {d.display}\r\n                                                                </option>\r\n                                                            ))\r\n                                                        }\r\n                                                </select>\r\n\r\n                                                </Table.Cell>\r\n                                                <Table.Cell>\r\n                                                    <select\r\n                                                        className=\"ui fluid selection dropdown\"\r\n                                                        value={labInputField.status}\r\n                                                        onChange={e => handleInputLabChange(labIndex, e)}\r\n                                                        name=\"status\"\r\n                                                        id=\"status\">\r\n                                                        <option>Select</option>\r\n                                                        <option value=\"0\">Pending Collection</option>\r\n                                                        <option value=\"1\">Sample Collected</option>\r\n                                                        <option value=\"2\">Sample Transferred</option>\r\n                                                        <option value=\"3\">Sample Verified</option>\r\n                                                        <option value=\"4\">Sample Rejected</option>\r\n                                                        <option value=\"5\">Result Available</option>\r\n                                                    </select>\r\n                                                </Table.Cell>\r\n                                            </Table.Row>\r\n                                        </Fragment>\r\n                                    ))}\r\n                                </Table.Body>\r\n\r\n                                <Table.Footer>\r\n                                    <Table.Row>\r\n                                        <Table.HeaderCell>\r\n\r\n                                            <Label as='a' color=\"blue\" size=\"tiny\" onClick={() => handleAddFieldsLab()}>\r\n                                                <Icon name='plus' /> Add Test\r\n                                            </Label>\r\n                                        </Table.HeaderCell>\r\n\r\n                                    </Table.Row>\r\n                                </Table.Footer>\r\n                            </Table>\r\n                        </div>}\r\n                        <br/>\r\n                        <Label as='a' color='purple' style={{width:'100%',height:'35px',fontSize:'16px'}}>\r\n                            Pharmacy Order\r\n                        </Label>\r\n                        <br/>\r\n                        <br/>\r\n                        <>\r\n                        {\r\n                           pharmacyOrder.length > 0 ? pharmacyOrder.map((pharmacy, i) => (\r\n                            <div className=\"page-header\" key={i}>\r\n                                  <p><b>{pharmacy.drugName}</b>\r\n                                  <br /> Start at {pharmacy.startDate} for {pharmacy.dosageFrequency} to be taken {pharmacy.duration} time(s) a day\r\n                                  <br />\r\n                                  Instructions: {pharmacy.comments}  <br />\r\n                                  Date Ordered: {pharmacy.dateTimePrescribed}</p>\r\n                                  <p>\r\n                                    <Label as='a' color=\"blue\" size=\"tiny\" onClick={() => handleEditPharmacyOrder(pharmacy)}>\r\n                                    <Icon name='eye' /> View</Label>\r\n                                    {\" \"}\r\n                                    <Label as='a' color=\"red\" size=\"tiny\" onClick={() => handleDelete(pharmacy.id)}>\r\n                                                                    <Icon name='delete' /> Delete</Label>\r\n                                  </p>\r\n                                  <br/>\r\n                            </div>\r\n                            )) :\r\n                            <p>No previous pharmacy record for this patient</p>\r\n                        }\r\n\r\n                        </>\r\n                        <br/>\r\n                        { isPharmacyEnabled &&\r\n                            <div>\r\n                                <ButtonMui\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    className=\"ms-2\"\r\n                                    onClick={() => handleAddPharmacyOrder()}\r\n                                >\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Add Pharmacy Order</span>\r\n                                </ButtonMui>\r\n                            </div>\r\n                        }\r\n                    </Segment>\r\n                    <Button type={\"submit\"} variant=\"contained\" color={\"primary\"}>Submit</Button>\r\n                </form>\r\n          </Grid.Column>\r\n          <Grid.Column>\r\n            <Segment>\r\n\r\n            <List>\r\n                  <List.Item>\r\n                      <Link\r\n                          to={{\r\n                              pathname: \"/patient-consultations-history\",\r\n                              state: { patientObj: patientObj  }\r\n                          }}>\r\n                          <Button icon labelPosition='right'  style={{width:'100%',backgroundColor:'#992E62',color:\"#fff\", padding:'15px'}}  fluid>\r\n                              <Icon name='eye' />\r\n                              View Consultation History\r\n                          </Button>\r\n                      </Link>\r\n                  </List.Item>\r\n                  <List.Item>\r\n                  <Button icon labelPosition='right' color='blue' fluid>\r\n                      <Icon name='calendar alternate' />\r\n                        Appointment\r\n                    </Button>\r\n                  </List.Item>\r\n            </List>\r\n                { previousConsultation &&\r\n                    <Card style={{width:'100%'}}>\r\n                        <Card.Content style={{padding:'5px'}}>\r\n                            <Label as='a'   style={{width:'100%',backgroundColor:'#014d88',color:\"#fff\", padding:'10px'}}>\r\n                                <Typography className={classes.heading}><b>Previous Clinical Notes</b></Typography>\r\n                            </Label>\r\n\r\n                        </Card.Content>\r\n                        <Card.Content style={{padding:'5px'}}>\r\n                            <Feed>\r\n                                {previousConsultation && previousConsultation.length > 0 &&\r\n                                    previousConsultation.map(consultation =>\r\n                                        <Accordion>\r\n                                            <AccordionSummary\r\n                                                expandIcon={<ExpandMoreIcon style={{color:'#fff'}} />}\r\n                                                aria-controls=\"panel2a-content\"\r\n                                                id=\"panel2a-header\"\r\n                                                style={{padding:'0px 0px 0px 10px',backgroundColor:'#1678c2',border:'2px solid #ddd',color:'#fff'}}\r\n                                            >\r\n                                                <Typography className={classes.heading} >Consultation -Date - {consultation.encounterDate}</Typography>\r\n                                            </AccordionSummary>\r\n                                            <AccordionDetails style={{padding:'10px 5px',minHeight:100,border:'2px solid #ddd', marginTop:'-10px'}}>\r\n                                                {consultation.visitNotes}\r\n                                            </AccordionDetails>\r\n                                        </Accordion>\r\n                                    )\r\n\r\n                                }\r\n\r\n                                { previousConsultation.map((consultation, i) => (\r\n                                    <div>\r\n                                        <Feed.Event>\r\n                                            <Feed.Content>\r\n                                                <Feed.Date content={consultation.encounterDate} />\r\n                                                <Feed.Summary>\r\n                                                    {consultation.visitNotes}\r\n                                                </Feed.Summary>\r\n                                            </Feed.Content>\r\n                                        </Feed.Event>\r\n                                        <hr/>\r\n                                    </div>\r\n                                )) }\r\n                            </Feed>\r\n                        </Card.Content>\r\n                    </Card>\r\n                }\r\n            </Segment>\r\n          </Grid.Column>\r\n            <AddPharmacyOrder toggle={toggle} patientObj={patientObj} showModal={pharmacyModal} />\r\n            <EditPharmacyOrder toggle={toggleOrder} patientObj={patientObj}\r\n             showModal={pharmacyOrderModal} editPharmacyOrderValue={editPharmacyOrderValue}/>\r\n        </Grid>\r\n    );\r\n  };\r\n\r\nexport default Widget;\r\n","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n/*import { Link } from 'react-router-dom'\r\nimport ButtonMui from \"@material-ui/core/Button\";*/\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport PatientCardDetail from './PatientCard'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {   Tab, Tabs, } from \"react-bootstrap\";\r\nimport RecentHistory from './../History/RecentHistory';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: '100%',\r\n    },\r\n    heading: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n    },\r\n    secondaryHeading: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n      color: theme.palette.text.secondary,\r\n    },\r\n    icon: {\r\n      verticalAlign: 'bottom',\r\n      height: 20,\r\n      width: 20,\r\n    },\r\n    details: {\r\n      alignItems: 'center',\r\n    },\r\n    column: {\r\n      flexBasis: '20.33%',\r\n    },\r\n    helper: {\r\n      borderLeft: `2px solid ${theme.palette.divider}`,\r\n      padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n    },\r\n    link: {\r\n      color: theme.palette.primary.main,\r\n      textDecoration: 'none',\r\n      '&:hover': {\r\n        textDecoration: 'underline',\r\n      },\r\n    }\r\n}));\r\n\r\n\r\nfunction PatientDetails(props) {\r\n  console.log('here we are 3')\r\n    let history = useHistory();\r\n    const [key, setKey] = useState('home');\r\n    const { classes } = props;\r\n    const patientObj = history.location && history.location.state ? history.location.state.patientObj : {}\r\n\r\n    //console.log(\"p-details \",patientObj);\r\n\r\n  return (\r\n    /*<div className={classes.root}>*/\r\n    <div>\r\n      <Card >\r\n        <CardContent>\r\n            <PatientCardDetail patientObj={patientObj}/>\r\n            <RecentHistory patientObj={patientObj} />\r\n         </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default PatientDetails;\r\n","import React, {Fragment} from 'react';\r\nimport {FormControl, FormGroup} from \"@material-ui/core\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport {Button, Icon, Input, List, Table} from \"semantic-ui-react\";\r\n\r\nfunction PatientConsultationHistoryCard({visit}) {\r\n    return (\r\n        <div>\r\n            <Paper elevation={1} style={{maxHeight: 250, overflow: 'auto',padding:'10px', backgroundColor:'#039be5'}}>\r\n                <h3 style={{color:'#fff '}}> {visit.encounterDate} --- Consultation</h3>\r\n            </Paper>\r\n\r\n            <h3 style={{color:'#992E62'}}>Clinical Notes</h3>\r\n            <Divider />\r\n            <Paper elevation={1} style={{minHeight:200, maxHeight: 350, scrollbarWidth:'10', overflow: 'auto',border:'1px solid #A5E2FF', marginTop:'5px'}}>\r\n                <div style={{border:'10px solid #fff'}}>\r\n                    <Typography variant=\"body1\" style={{fontFamily:'Trebuchet'}}>\r\n                        {visit.visitNotes}\r\n                    </Typography>\r\n                </div>\r\n            </Paper>\r\n\r\n            <h3 style={{color:'#014d88'}}>Presenting Complaints</h3>\r\n            <Divider />\r\n            <Paper elevation={1} style={{minHeight:100, overflow: 'auto',border:'1px solid #A5E2FF', marginTop:'5px'}}>\r\n                <div style={{border:'5px solid #fff'}}>\r\n                    <Table style={{color:'#014d88',borderColor:'#ddd'}} celled >\r\n                        <Table.Header style={{backgroundColor:'#014d88',color:'#fff',borderColor:'#014d88'}}>\r\n                            <Table.Row>\r\n                                <Table.Cell style={{ fontWeight: 'bold'}}>Complaints</Table.Cell>\r\n                                <Table.Cell style={{ fontWeight: 'bold'}}>Onset Date</Table.Cell>\r\n                                <Table.Cell style={{ fontWeight: 'bold'}}>Severity</Table.Cell>\r\n                                <Table.Cell style={{ fontWeight: 'bold'}}>Date Resolved</Table.Cell>\r\n                            </Table.Row>\r\n                        </Table.Header>\r\n\r\n                        <Table.Body>\r\n                            {visit.presentingComplaints.map((presentingComplaint, index) => (\r\n                                <Fragment key={`${presentingComplaint.id}~${index}`}>\r\n                                    <Table.Row>\r\n                                        <Table.Cell>\r\n                                            {presentingComplaint.complaint}\r\n                                        </Table.Cell>\r\n                                        <Table.Cell>\r\n                                            {presentingComplaint.onsetDate}\r\n                                        </Table.Cell>\r\n                                        <Table.Cell>\r\n                                            {presentingComplaint.severity}\r\n                                        </Table.Cell>\r\n                                        <Table.Cell>\r\n                                            {presentingComplaint.dateResolved}\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                </Fragment>\r\n                            ))}\r\n                        </Table.Body>\r\n                    </Table>\r\n                </div>\r\n            </Paper>\r\n\r\n            <h3 style={{color:'#992E62'}}>Clinical Diagnosis</h3>\r\n            <Divider />\r\n            <Paper elevation={1} style={{minHeight:100,border:'5px solid #f7f7f7', marginTop:'5px'}}>\r\n                <div style={{border:'5px solid #fff'}}>\r\n                    <Table style={{color:'#014d88',borderColor:'#ddd'}} celled >\r\n                        <Table.Header style={{backgroundColor:'#992E62',color:'#fff',borderColor:'#ddd'}}>\r\n                            <Table.Row>\r\n                                <Table.Cell style={{ fontWeight: 'bold'}}>Condition</Table.Cell>\r\n                                <Table.Cell style={{ fontWeight: 'bold'}}>Order</Table.Cell>\r\n                                <Table.Cell style={{ fontWeight: 'bold'}}>Certainty</Table.Cell>\r\n                                <Table.Cell style={{ fontWeight: 'bold'}}></Table.Cell>\r\n                            </Table.Row>\r\n                        </Table.Header>\r\n\r\n                        <Table.Body>\r\n                            {visit.diagnosisList.map((diagnosis, index) => (\r\n                                <Fragment key={`${diagnosis.id}~${index}`}>\r\n                                    <Table.Row>\r\n                                        <Table.Cell>\r\n                                            {diagnosis.diagnosis}\r\n                                        </Table.Cell>\r\n                                        <Table.Cell>\r\n                                            {diagnosis.order}\r\n                                        </Table.Cell>\r\n                                        <Table.Cell>\r\n                                            {diagnosis.certainty}\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                </Fragment>\r\n                            ))}\r\n                        </Table.Body>\r\n                    </Table>\r\n                </div>\r\n            </Paper>\r\n\r\n\r\n            <h3 style={{color:'teal'}}>Laboratory Test</h3>\r\n            <Divider />\r\n            <Paper elevation={1} style={{minHeight:100,border:'5px solid #f7f7f7', marginTop:'5px'}}>\r\n                <div style={{border:'5px solid #fff'}}>\r\n                    <Table style={{color:'#014d88',borderColor:'#ddd'}} celled >\r\n                        <Table.Header style={{backgroundColor:'teal',color:'#fff',borderColor:'#ddd'}}>\r\n                            <Table.Row>\r\n                                <Table.Cell style={{ fontWeight: 'bold'}}>Condition</Table.Cell>\r\n                                <Table.Cell style={{ fontWeight: 'bold'}}>Order</Table.Cell>\r\n                                <Table.Cell style={{ fontWeight: 'bold'}}>Certainty</Table.Cell>\r\n                                <Table.Cell style={{ fontWeight: 'bold'}}></Table.Cell>\r\n                            </Table.Row>\r\n                        </Table.Header>\r\n\r\n                        <Table.Body>\r\n                            {visit.diagnosisList.map((diagnosis, index) => (\r\n                                <Fragment key={`${diagnosis.id}~${index}`}>\r\n                                    <Table.Row>\r\n                                        <Table.Cell>\r\n                                            {diagnosis.diagnosis}\r\n                                        </Table.Cell>\r\n                                        <Table.Cell>\r\n                                            {diagnosis.order}\r\n                                        </Table.Cell>\r\n                                        <Table.Cell>\r\n                                            {diagnosis.certainty}\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                </Fragment>\r\n                            ))}\r\n                        </Table.Body>\r\n                    </Table>\r\n                </div>\r\n            </Paper>\r\n\r\n\r\n            <h3 style={{color:'purple '}}>Pharmacy Order</h3>\r\n            <Divider />\r\n            <Paper elevation={1} style={{minHeight:100,border:'5px solid #f7f7f7', marginTop:'5px'}}>\r\n                <div style={{border:'10px solid #fff'}}>\r\n                    <Table style={{color:'#014d88',borderColor:'#ddd'}} celled >\r\n                        <Table.Header style={{backgroundColor:'purple',color:'#fff',borderColor:'#ddd'}}>\r\n                            <Table.Row>\r\n                                <Table.Cell style={{ fontWeight: 'bold'}}>Condition</Table.Cell>\r\n                                <Table.Cell style={{ fontWeight: 'bold'}}>Order</Table.Cell>\r\n                                <Table.Cell style={{ fontWeight: 'bold'}}>Certainty</Table.Cell>\r\n                                <Table.Cell style={{ fontWeight: 'bold'}}></Table.Cell>\r\n                            </Table.Row>\r\n                        </Table.Header>\r\n\r\n                        <Table.Body>\r\n                            {visit.diagnosisList.map((diagnosis, index) => (\r\n                                <Fragment key={`${diagnosis.id}~${index}`}>\r\n                                    <Table.Row>\r\n                                        <Table.Cell>\r\n                                            {diagnosis.diagnosis}\r\n                                        </Table.Cell>\r\n                                        <Table.Cell>\r\n                                            {diagnosis.order}\r\n                                        </Table.Cell>\r\n                                        <Table.Cell>\r\n                                            {diagnosis.certainty}\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                </Fragment>\r\n                            ))}\r\n                        </Table.Body>\r\n                    </Table>\r\n                </div>\r\n            </Paper>\r\n\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PatientConsultationHistoryCard;","import React, { useEffect, useState, useCallback } from 'react';\r\nimport { useHistory, Link  } from \"react-router-dom\";\r\nimport MaterialTable, { MTableToolbar, cellStyle, headerStyle } from 'material-table';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport { Grid,Container, Segment, Label, Icon, List,Button, Feed, Input, Radio } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport \"@reach/menu-button/styles.css\";\r\nimport ButtonMui from \"@material-ui/core/Button\";\r\nimport { toast } from 'react-toastify';\r\nimport Box from '@mui/material/Box';\r\nimport Card from \"@mui/material/Card\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport PatientCardDetail from \"../Patient/PatientCard\";\r\nimport RecentHistory from \"./RecentHistory\";\r\nimport PatientConsultationHistoryCard from \"./PatientConsulationHistoryCard\";\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        width: '100%',\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n    gridItem:{\r\n        padding:'30px'\r\n    }\r\n}));\r\n\r\nconst PatientConsultationHistory = (props) => {\r\n    const classes =useStyles();\r\n    let history = useHistory();\r\n    const [patientList, setPatientList] = useState([]);\r\n    const patientObj = history.location && history.location.state ? history.location.state.patientObj : {};\r\n    const[selectedVisit,setSelectedVisit] = useState();\r\n\r\n    ///GET LIST OF Patients\r\n    const patientConsultations = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}consultations/consultations-by-patient-id/${patientObj.id}`, {headers: {\"Authorization\": `Bearer ${token}`}});\r\n            setPatientList(response.data);\r\n            if(response.data.length > 0 ){\r\n                setSelectedVisit(response.data[0]);\r\n            }\r\n        } catch (e) {\r\n            toast.error(\"An error occured while fetching consultation !\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        patientConsultations()\r\n    }, [patientConsultations]);\r\n\r\n    const formatDiagnosis = diagnosisList => {\r\n        return diagnosisList.map(obj => obj.diagnosis) + \" ,\";\r\n    };\r\n    const formatPresentingComplaints = presentingComplaintsList => {\r\n        return presentingComplaintsList.map(obj => obj.complaint) + \" ,\";\r\n    };\r\n    const loadConsultationDetails = (row)=>{\r\n        setSelectedVisit(row);\r\n        console.log(row);\r\n    }\r\n    return (\r\n        <Container style={{width:'100%'}}>\r\n            <br/><br/>\r\n            <Link to={\"/\"} >\r\n                <ButtonMui\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className=\" float-end ms-2\"\r\n                >\r\n                    <span style={{ textTransform: \"capitalize\" }}>Back</span>\r\n                </ButtonMui>\r\n            </Link>\r\n            <br/><br/>\r\n\r\n            <Card >\r\n                <CardContent>\r\n                    <Grid  columns='equal'  divided>\r\n                        <Grid.Column width={4}  style={{padding:'5px'}} item>\r\n                            <MaterialTable\r\n                                icons={tableIcons}\r\n                                /*title=\"Patient Consultations\"*/\r\n                                title=\"\"\r\n                                columns={[\r\n                                    // { title: \" ID\", field: \"Id\" },\r\n                                    {\r\n                                        title: \"Consultation Visits\", field: \"date\",\r\n                                        /*                                           cellStyle: {\r\n                                                                                       backgroundColor: '#039be5',\r\n                                                                                       color: '#FFF'\r\n                                                                                   },*/\r\n                                        cellStyle:{\r\n                                            padding:'10px 5px'\r\n                                        },\r\n                                        headerStyle: {\r\n                                            backgroundColor: '#014d88',\r\n                                        }\r\n                                    },\r\n                                    /*                                        { title: \"Visit Notes\", field: \"visitNotes\", filtering: false },\r\n                                                                            { title: \"Diagnosis List\", field: \"diagnosisList\", filtering: false },\r\n                                                                            { title: \"Presenting Complaints\", field: \"presentingComplaints\", filtering: false },\r\n                                                                            { title: \"Actions\", field: \"actions\", filtering: false },*/\r\n                                ]}\r\n                                data={ patientList.map((row) => ({\r\n                                    //Id: manager.id,\r\n                                    date:\r\n                                        <div>\r\n\r\n                                            <Button\r\n                                                basic\r\n                                                className=\" float-end ms-2\"\r\n                                                style={{width:'100%',border:'1px dotted #eee'}}\r\n                                                onClick={()=>loadConsultationDetails(row)}\r\n                                            >\r\n                                                <span style={{padding:'10px 0px', fontSize:'16px', color: '#014d88', fontWeight:'bolder',float:'left'}}>{row.encounterDate} -- Status --- (Closed)</span>\r\n                                            </Button>\r\n                                        </div>\r\n                                    /*                                        date:row.encounterDate,\r\n                                                                            visitNotes:row.visitNotes,\r\n                                                                            diagnosisList:formatDiagnosis(row.diagnosisList),\r\n                                                                            presentingComplaints:formatPresentingComplaints(row.presentingComplaints),\r\n                                                                            actions:\r\n                                                                                <div>\r\n                                                                                    <Link\r\n                                                                                        to={{\r\n                                                                                            pathname: \"/patient-consultation\",\r\n                                                                                            state: { patientObj: row  }\r\n                                                                                        }}>\r\n                                                                                        <Button\r\n                                                                                            icon\r\n                                                                                            inverted\r\n                                                                                            color='blue'\r\n                                                                                            className=\" float-end ms-2\"\r\n                                                                                        >\r\n                                                                                            <Icon name='eye' />\r\n                                                                                        </Button>\r\n                                                                                    </Link>\r\n                                                                                </div>*/\r\n\r\n                                }))}\r\n\r\n                                options={{\r\n                                    headerStyle: {\r\n                                        backgroundColor: \"#014d88\",\r\n                                        color: \"#fff\",\r\n                                        fontSize:'16px',\r\n                                        padding:'10px',\r\n                                        fontWeight:'bolder'\r\n                                    },\r\n                                    searchFieldStyle: {\r\n                                        width : '100%',\r\n                                    },\r\n                                    toolbar: false,\r\n                                    search: false,\r\n                                    filtering: false,\r\n                                    exportButton: false,\r\n                                    /*searchFieldAlignment: 'left',*/\r\n                                    pageSizeOptions:[10,20,100],\r\n                                    pageSize:10,\r\n                                    debounceInterval: 400\r\n                                }}\r\n                            />\r\n                        </Grid.Column>\r\n                        <Grid.Column style={{padding:'0px 10px'}} item>\r\n                            {selectedVisit &&\r\n                                <Card >\r\n                                    <CardContent style={{width:'100%',padding:'5px'}}>\r\n                                        <PatientConsultationHistoryCard visit={selectedVisit} />\r\n                                    </CardContent>\r\n                                </Card>\r\n                            }\r\n\r\n                        </Grid.Column>\r\n                    </Grid>\r\n                </CardContent>\r\n            </Card>\r\n\r\n\r\n\r\n\r\n            {/*                        <MaterialTable\r\n                            icons={tableIcons}\r\n                            title=\"Patient Consultationsz\"\r\n                            columns={[\r\n                                // { title: \" ID\", field: \"Id\" },\r\n                                {\r\n                                  title: \"Encounter Date\", field: \"date\",\r\n                                    cellStyle: {\r\n                                          backgroundColor: '#039be5',\r\n                                          color: '#FFF'\r\n                                        },\r\n                                        headerStyle: {\r\n                                          backgroundColor: '#039be5',\r\n                                        }\r\n                                },\r\n                                { title: \"Visit Notes\", field: \"visitNotes\", filtering: false },\r\n                                { title: \"Diagnosis List\", field: \"diagnosisList\", filtering: false },\r\n                                { title: \"Presenting Complaints\", field: \"presentingComplaints\", filtering: false },\r\n                                { title: \"Actions\", field: \"actions\", filtering: false },\r\n                            ]}\r\n                            data={ patientList.map((row) => ({\r\n                                //Id: manager.id,\r\n                                date:row.encounterDate,\r\n                                visitNotes:row.visitNotes,\r\n                                diagnosisList:formatDiagnosis(row.diagnosisList),\r\n                                presentingComplaints:formatPresentingComplaints(row.presentingComplaints),\r\n                                actions:\r\n                                    <div>\r\n                                        <Link\r\n                                            to={{\r\n                                                pathname: \"/patient-consultation\",\r\n                                                state: { patientObj: row  }\r\n                                            }}>\r\n                                             <Button\r\n                                                icon\r\n                                                inverted\r\n                                                color='blue'\r\n                                                className=\" float-end ms-2\"\r\n                                             >\r\n                                             <Icon name='eye' />\r\n                                            </Button>\r\n                                        </Link>\r\n                                    </div>\r\n\r\n                            }))}\r\n\r\n                            options={{\r\n                                headerStyle: {\r\n                                    backgroundColor: \"#01579b\",\r\n                                    color: \"#ccc\",\r\n                                },\r\n                                searchFieldStyle: {\r\n                                    width : '200%',\r\n                                    margingLeft: '250px',\r\n                                },\r\n                                filtering: false,\r\n                                exportButton: false,\r\n                                searchFieldAlignment: 'left',\r\n                                pageSizeOptions:[10,20,100],\r\n                                pageSize:10,\r\n                                debounceInterval: 400\r\n                            }}\r\n                        />*/}\r\n        </Container>\r\n\r\n    );\r\n};\r\n\r\nexport default PatientConsultationHistory;\r\n","import React, {Fragment, useState, useCallback, useEffect } from \"react\";\r\nimport { KeyboardDateTimePicker, MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport axios from \"axios\";\r\nimport { toast } from 'react-toastify';\r\nimport {token, url as baseUrl, apiUrl as apiUrl } from \"../../../api\";\r\nimport { Grid, Segment, Label, Icon, List,Button, Card, Feed, Input, Radio } from 'semantic-ui-react';\r\nimport {  Checkbox, Table } from 'semantic-ui-react';\r\nimport {format} from \"date-fns\";\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport ButtonMui from \"@material-ui/core/Button\";\r\n\r\nconst Widget = (props) => {\r\n    let history = useHistory();\r\n    const patientObj = history.location && history.location.state ? history.location.state.patientObj : {}\r\n    //console.log(\"pb\",patientObj)\r\n    const [patient, setPatient] = useState({});\r\n    const [isLabEnabled, setIsLabEnabled] = useState(false);\r\n    const [isPharmacyEnabled, setIsPharmacyEnabled] = useState(false);\r\n    const [hasAllergies, setHasAllergies] = useState(false);\r\n    const [pharmacyModal, setPharmacyModal] = useState(false);\r\n    const [latestVitals, setLatestVitals] = useState([]);\r\n    const [previousConsultation, setPreviousConsultation] = useState([]);\r\n    const [encounterDate, setEncounterDate] = useState(new Date());\r\n    const { handleSubmit, control, getValues, setError, setValue } = useForm();\r\n    const [inputFields, setInputFields] = useState(patientObj.presentingComplaints);\r\n    const [inputFieldsDiagnosis, setInputFieldsDiagnosis] = useState(patientObj.diagnosisList);\r\n    const [inputFieldsLab, setInputFieldsLab] = useState([\r\n            { encounterDate: format(new Date(), 'yyyy-MM-dd'), labOrder: '',\r\n            labTest: '', priority: '', status: '' }\r\n        ]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [drugs, setDrugs] = useState([]);\r\n    const [dosageUnits, setDosageUnits] = useState([]);\r\n    const [durationUnits, setDurationUnits] = useState([]);\r\n    const [editPharmacyOrder, setEditPharmacyOrder] = useState({\r\n        encounterDateTime: \"\",\r\n        drugName: \"\",\r\n        dosageStrength: \"\",\r\n        dosageStrengthUnit: \"\",\r\n        dosageFrequency: \"\",\r\n        startDate: \"\",\r\n        duration: \"\",\r\n        durationUnit: \"\",\r\n        comments: \"\",\r\n        orderedBy: \"\",\r\n        dateTimePrescribed: \"\"\r\n    });\r\n\r\n    const toggle = () => setPharmacyModal(!pharmacyModal);\r\n\r\n    const onSubmit = async (data) => {\r\n        const diagnosisList = [];\r\n        const presentingComplaints = [];\r\n        const labTests = [];\r\n\r\n        for (const inputFieldsDiag of inputFieldsDiagnosis) {\r\n            if (inputFieldsDiag.diagnosis) {\r\n                diagnosisList.push(inputFieldsDiag);\r\n            }\r\n        }\r\n\r\n        for (const inputField of inputFields) {\r\n            if (inputField.complaint) {\r\n                presentingComplaints.push(inputField);\r\n            }\r\n        }\r\n\r\n        try {\r\n            const InData = {\r\n                \"diagnosisList\": diagnosisList,\r\n                \"encounterDate\": patientObj.encounterDate,\r\n                \"patientId\": patientObj.patientId,\r\n                \"id\": patientObj.id,\r\n                \"presentingComplaints\": presentingComplaints,\r\n                \"visitId\": patientObj.visitId,\r\n                \"visitNotes\": patientObj.visitNotes\r\n            };\r\n\r\n            await axios.put(`${baseUrl}consultations/${patientObj.id}`, InData,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }).then(( resp ) => {\r\n                console.log(\"diagnosis updated successfully\", resp)\r\n            });\r\n\r\n            for (const inputField of inputFieldsLab) {\r\n            //console.log(\"input\",inputField)\r\n                if (inputField.id) {\r\n                    labTests.push({\r\n                    \"id\": inputField.id,\r\n                    \"labTestGroupId\": inputField.labOrder,\r\n                    \"labTestId\": inputField.labTest,\r\n                    \"labTestOrderStatus\": inputField.status,\r\n                    \"orderPriority\": inputField.priority,\r\n                  });\r\n                }\r\n            }\r\n\r\n            const labOrder = {\r\n                  \"id\": inputFieldsLab[0].id,\r\n                  \"orderDate\": inputFieldsLab[0].orderDate,\r\n                  \"patientId\": patientObj.patientId,\r\n                  \"tests\": labTests,\r\n                  \"visitId\": patientObj.visitId\r\n            }\r\n\r\n            console.log(\"lb\", labOrder)\r\n\r\n            axios.put(`${baseUrl}laboratory/orders/${inputFieldsLab[0].orderId}`, labOrder,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }).then(( resp ) => {\r\n               console.log(\"lab updated successfully\", resp)\r\n                for (const pharm of editPharmacyOrder) {\r\n                    console.log(\"pharm\", pharm)\r\n                    axios.put(`${apiUrl}drug-orders/${pharm.id}`, pharm,\r\n                       { headers: {\"Authorization\" : `Bearer ${token}`}}).then(resp => {\r\n                           console.log(\"drug updated successfully\", resp );\r\n                       });\r\n               }\r\n            });\r\n\r\n            toast.success(\"Successfully updated patient consultation!\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n           history.push('/');\r\n\r\n        } catch (e) {\r\n            toast.error(\"An error occured while saving Consultation !\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n    };\r\n\r\n    const OnError = (errors) => {\r\n        console.error(errors);\r\n        toast.error(\"Visit Note Is Required\", {\r\n            position: toast.POSITION.TOP_RIGHT\r\n        });\r\n    };\r\n\r\n    const [labGroups, setLabGroups] = useState([]);\r\n    const [labTests, setLabTests] = useState([]);\r\n    const [priorities, setPriorities] = useState([]);\r\n\r\n    const loadLabCheck = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}modules/check?moduleName=lab`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setIsLabEnabled(response.data);\r\n        } catch (e) {\r\n            toast.error(\"An error occurred while fetching lab\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    const loadPharmacyCheck = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}modules/check?moduleName=pharmacy`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setIsPharmacyEnabled(response.data);\r\n        } catch (e) {\r\n            toast.error(\"An error occurred while fetching pharmacy\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    const loadLatestVitals = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}patient/vital-sign/person/${patientObj.patientId}`, { headers: {\"Authorization\" : `Bearer ${token}`}});\r\n            setLatestVitals(response.data);\r\n        } catch (e) {\r\n            toast.error(\"An error occurred while fetching vitals\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    const loadLabGroup = useCallback(async () => {\r\n            try {\r\n                const response = await axios.get(`${baseUrl}laboratory/labtestgroups`, { headers: {\"Authorization\" : `Bearer ${token}`}});\r\n                setLabGroups(response.data);\r\n            } catch (e) {\r\n                toast.error(\"An error occurred while fetching lap group data\", {\r\n                    position: toast.POSITION.TOP_RIGHT\r\n                });\r\n            }\r\n        }, []);\r\n\r\n    const priority = useCallback(async () => {\r\n            try {\r\n                const response = await axios.get(`${baseUrl}application-codesets/v2/TEST_ORDER_PRIORITY`, { headers: {\"Authorization\" : `Bearer ${token}`}});\r\n                //console.log(\"priority\", response.data);\r\n                setPriorities(response.data);\r\n            } catch (e) {\r\n                toast.error(\"An error occurred while fetching priority data\", {\r\n                    position: toast.POSITION.TOP_RIGHT\r\n                });\r\n            }\r\n        }, []);\r\n\r\n    const pharmacy_by_visitId = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${apiUrl}drug-orders/visits/${patientObj.visitId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}});\r\n\r\n            if (typeof response.data === 'string') {\r\n                setEditPharmacyOrder([]);\r\n            }else {\r\n                setEditPharmacyOrder(response.data);\r\n            }\r\n        } catch (e) {\r\n            toast.error(\"An error occurred while fetching pharmacy data\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    const labtest_by_visitId = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}laboratory/orders/visits/${patientObj.visitId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}});\r\n\r\n            const labTests = [];\r\n\r\n            for (const lab of response.data) {\r\n\r\n                for (const data of lab.labOrder.tests) {\r\n                    let labId = data.id;\r\n                    let labTestDesc = data.description;\r\n                    let labTestGroup = data.labTestGroupId;\r\n                    let labTestId = data.labTestId;\r\n                    let orderPriority = data.orderPriority;\r\n                    let labTestOrderStatus = data.labTestOrderStatus;\r\n\r\n                    let labdata = {\r\n                      labOrder: labTestGroup,\r\n                      labTest: labTestId,\r\n                      priority: orderPriority,\r\n                      status: labTestOrderStatus,\r\n                      id: labId,\r\n                      orderId: lab.labOrder.id,\r\n                      orderDate: lab.labOrder.orderDate\r\n                      };\r\n\r\n                    labTests.push(labdata)\r\n                }\r\n            }\r\n\r\n             setInputFieldsLab(labTests);\r\n        } catch (e) {\r\n            toast.error(\"An error occurred while fetching lab tests order data\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    let drugRows = null;\r\n    let dosageUnitsRows = null;\r\n    let durationUnitsRows = null;\r\n\r\n    const loadDosageUnits = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/DOSE_STRENGTH_UNIT`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}});\r\n            setDosageUnits(response.data);\r\n        } catch (e) {\r\n            toast.error(\"An error occurred while fetching DOSE STRENGTH UNIT\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    const loadDurationUnits = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/AGE_UNIT`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}});\r\n            setDurationUnits(response.data);\r\n        } catch (e) {\r\n            toast.error(\"An error occurred while fetching DOSE STRENGTH UNIT\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    const loadPharmacyDrugs = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${apiUrl}drugs`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}});\r\n            setDrugs(response.data);\r\n        } catch (e) {\r\n            toast.error(\"An error occurred while fetching drugs\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        loadPharmacyCheck();\r\n        loadLabCheck();\r\n        loadLatestVitals();\r\n        loadLabGroup();\r\n        priority();\r\n        labtest_by_visitId();\r\n        pharmacy_by_visitId();\r\n        loadDosageUnits();\r\n        loadDurationUnits();\r\n        loadPharmacyDrugs();\r\n    }, [loadPharmacyCheck, loadLabCheck, loadLatestVitals,\r\n    loadLabGroup, priority, labtest_by_visitId, pharmacy_by_visitId,\r\n    loadDosageUnits, loadDurationUnits, loadPharmacyDrugs]);\r\n\r\n    const handleAddFields = () => {\r\n        const values = [...inputFields];\r\n        values.push({ complaint: '', onsetDate: '', severity: 0, dateResolved: '' });\r\n        setInputFields(values);\r\n    };\r\n\r\n    const handleAddDiagFields = () => {\r\n        const values = [...inputFieldsDiagnosis];\r\n        values.push({ certainty: '', diagnosis: '', diagnosisOrder: 0 });\r\n        setInputFieldsDiagnosis(values);\r\n    };\r\n\r\n    const handleAddFieldsLab = () => {\r\n        const values = [...inputFieldsLab];\r\n        values.push({ encounterDate: format(new Date(), 'yyyy-MM-dd'), labOrder: '', labTest: '', priority: '', status: '' });\r\n        setInputFieldsLab(values);\r\n    };\r\n\r\n    const handleInputChange = (index, event) => {\r\n        const values = [...inputFields];\r\n        if (event.target.name === \"complaint\") {\r\n            values[index].complaint = event.target.value;\r\n        } else if (event.target.name === \"onsetDate\") {\r\n            values[index].onsetDate = event.target.value;\r\n        } else if (event.target.name === \"severity\") {\r\n            values[index].severity = event.target.value;\r\n        } else if (event.target.name === \"dateResolved\") {\r\n            values[index].dateResolved = event.target.value;\r\n        }\r\n        setInputFields(values);\r\n    };\r\n\r\n    const handleInputDiagChange = (index, event) => {\r\n        const values = [...inputFieldsDiagnosis];\r\n        if (event.target.name === \"diagnosis\") {\r\n            values[index].diagnosis = event.target.value;\r\n        } else if (event.target.name === \"certainty\") {\r\n            values[index].certainty = event.target.value;\r\n        } else if (event.target.name === \"diagnosisOrder\") {\r\n            values[index].diagnosisOrder = event.target.value;\r\n        }\r\n        setInputFieldsDiagnosis(values);\r\n    };\r\n\r\n    const labCascade = id => {\r\n        labGroups.forEach(function (x) {\r\n              if ( x.id == id) {\r\n                setLabTests(x.labTests)\r\n            }\r\n        });\r\n    }\r\n\r\n    const handleInputLabChange = (index, event) => {\r\n            const values = [...inputFieldsLab];\r\n            if (event.target.name === \"labOrder\") {\r\n                const str = event.target.value;\r\n                values[index].labOrder = str;\r\n                labCascade(str.slice(0,1))\r\n            }\r\n            else if (event.target.name === \"labTest\") {\r\n                values[index].labTest = event.target.value;\r\n            } else if (event.target.name === \"priority\") {\r\n                values[index].priority = event.target.value;\r\n            }\r\n            else if (event.target.name === \"status\") {\r\n                values[index].status = event.target.value;\r\n            }\r\n\r\n            setInputFieldsLab(values);\r\n        };\r\n\r\n    const handleInputChangePharmacyOrderDto = (index, e) => {\r\n        const values = [...editPharmacyOrder];\r\n        if (e.target.name === \"encounterDateTime\") {\r\n            values[index].encounterDateTime = e.target.value;\r\n        }\r\n        else if (e.target.name === \"drugName\") {\r\n            values[index].drugName = e.target.value;\r\n        }\r\n        else if (e.target.name === \"dosageStrength\") {\r\n            values[index].dosageStrength = e.target.value;\r\n        }\r\n        else if (e.target.name === \"dosageStrengthUnit\") {\r\n            values[index].dosageStrengthUnit = e.target.value;\r\n        }\r\n        else if (e.target.name === \"dosageFrequency\") {\r\n            values[index].dosageFrequency = e.target.value;\r\n        }\r\n        else if (e.target.name === \"startDate\") {\r\n            values[index].startDate = e.target.value;\r\n        }\r\n        else if (e.target.name === \"duration\") {\r\n            values[index].duration = e.target.value;\r\n        }\r\n        else if (e.target.name === \"durationUnit\") {\r\n            values[index].durationUnit = e.target.value;\r\n        }\r\n        else if (e.target.name === \"comments\") {\r\n            values[index].comments = e.target.value;\r\n        }\r\n        else if (e.target.name === \"orderedBy\") {\r\n            values[index].orderedBy = e.target.value;\r\n        }\r\n        else if (e.target.name === \"dateTimePrescribed\") {\r\n            values[index].dateTimePrescribed = e.target.value;\r\n        }\r\n        setEditPharmacyOrder(values);\r\n    };\r\n\r\n    const handleAddPharmacyOrder = () => {\r\n        setPharmacyModal(!pharmacyModal);\r\n    };\r\n\r\n    if (drugs && drugs.length > 0) {\r\n        drugRows = drugs.map((drug, index) => (\r\n            <option key={drug.name} value={drug.name}>{drug.name}</option>\r\n        ));\r\n    }\r\n    if (dosageUnits && dosageUnits.length > 0) {\r\n        dosageUnitsRows = dosageUnits.map((dosageUnit, index) => (\r\n            <option key={dosageUnit.display} value={dosageUnit.display}>{dosageUnit.display}</option>\r\n        ));\r\n    }\r\n    if (durationUnits && durationUnits.length > 0) {\r\n        durationUnitsRows = durationUnits.map((durationUnit, index) => (\r\n            <option key={durationUnit.display} value={durationUnit.display}>{durationUnit.display}</option>\r\n        ));\r\n    }\r\n\r\n    return (\r\n        <Grid columns='equal'>\r\n            <Grid.Column>\r\n                { latestVitals && latestVitals.length > 0 &&\r\n                    <Segment>\r\n                        <Label as='a' color='blue' ribbon>\r\n                            Recent Vitals\r\n                        </Label>\r\n                        <br/>\r\n                        <List celled>\r\n                            <List.Item>Pulse <span className=\"float-end\"><b>{latestVitals[latestVitals.length - 1].pulse}bpm</b></span></List.Item>\r\n                            <List.Item>Respiratory Rate <span className=\"float-end\"><b>{latestVitals[latestVitals.length - 1].respiratoryRate}bpm</b></span></List.Item>\r\n                            <List.Item>Temperature <span className=\"float-end\"><b>{latestVitals[latestVitals.length - 1].temperature}<sup>0</sup>C</b></span></List.Item>\r\n                            <List.Item>Blood Presure <span  className=\"float-end\"><b>{latestVitals[latestVitals.length - 1].systolic}/{latestVitals[latestVitals.length - 1].diastolic}</b></span></List.Item>\r\n                            <List.Item>Height <span  className=\"float-end\"><b>{latestVitals[latestVitals.length - 1].height}m</b></span></List.Item>\r\n                            <List.Item>Weight <span  className=\"float-end\"><b>{latestVitals[latestVitals.length - 1].bodyWeight}kg</b></span></List.Item>\r\n                        </List>\r\n                    </Segment>\r\n                }\r\n\r\n                { previousConsultation &&\r\n                    <Segment>\r\n                        <Label as='a' color='black' ribbon>\r\n                            Conditions\r\n                        </Label>\r\n                        <br/>\r\n\r\n                        { previousConsultation.map((consultation, i) => (\r\n                            <div>\r\n                                {consultation.diagnosisList.map((diagnosis, j)=> (\r\n                                    <Label as='a'  color='white'  size=\"mini\" pointing>\r\n                                        {diagnosis.diagnosis}\r\n                                    </Label>\r\n                                ))}\r\n                            </div>\r\n                        ))}\r\n                    </Segment>\r\n                }\r\n\r\n\r\n                { hasAllergies &&\r\n                    <Segment>\r\n                        <Label as='a' color='red' ribbon>\r\n                            Allergies\r\n                        </Label>\r\n                        <br/><br/>\r\n\r\n                        <Label.Group color='blue'>\r\n                            <Label as='a'  size=\"mini\">dust</Label>\r\n                            <Label as='a'  size=\"mini\">smoke</Label>\r\n                        </Label.Group>\r\n                    </Segment>\r\n                }\r\n            </Grid.Column>\r\n\r\n            <Grid.Column width={10}>\r\n                <form onSubmit={handleSubmit(onSubmit, OnError)}>\r\n                    <Label as='a' color='black' ribbon>\r\n                        <b>Physical Examination</b>\r\n                    </Label>\r\n\r\n                    <Segment>\r\n                        <div className=\"input-group input-group-sm mb-3\">\r\n                            <span className=\"input-group-text\">Encounter Date</span>\r\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                <Controller\r\n                                    name=\"encounterDate\"\r\n                                    control={control}\r\n                                    defaultValue={encounterDate}\r\n                                    rules={{ required: true }}\r\n                                    render={({ field: { ref, ...rest }}) => (\r\n                                        <KeyboardDateTimePicker\r\n                                            disableFuture\r\n                                            format=\"dd/MM/yyyy hh:mm a\"\r\n                                            value={patientObj.encounterDate}\r\n                                            onChange={setEncounterDate}\r\n                                            className=\"form-control\"\r\n                                            invalidDateMessage={\"Encounter date is required\"}\r\n                                            {...rest}\r\n                                        />\r\n                                    )}\r\n                                    />\r\n                            </MuiPickersUtilsProvider>\r\n                        </div>\r\n\r\n                        <div className=\"input-group input-group-sm mb-3\">\r\n                            <span className=\"input-group-text\">Visit Note</span>\r\n                            <Controller\r\n                                name=\"visitNote\"\r\n                                control={control}\r\n                                rules={{ required: false }}\r\n                                render={({ field: { ref, ...rest }}) => (\r\n                                    <textarea\r\n                                    className=\"form-control\"\r\n                                    style={{ minHeight: 100, fontSize: 14 }}\r\n                                    {...rest}\r\n                                    >{patientObj.visitNotes}</textarea>\r\n                                )}\r\n                            />\r\n                        </div>\r\n                        <br/>\r\n                        <Label as='a' color='red' ribbon>\r\n                            Presenting Complaints\r\n                        </Label>\r\n                        <Table color=\"red\" celled>\r\n                            <Table.Header>\r\n                                <Table.Row>\r\n                                    <Table.Cell style={{ fontWeight: 'bold'}}>Complaints</Table.Cell>\r\n                                    <Table.Cell style={{ fontWeight: 'bold'}}>Onset Date</Table.Cell>\r\n                                    <Table.Cell style={{ fontWeight: 'bold'}}>Severity</Table.Cell>\r\n                                    <Table.Cell style={{ fontWeight: 'bold'}}>Date Resolved</Table.Cell>\r\n                                </Table.Row>\r\n                            </Table.Header>\r\n\r\n                            <Table.Body>\r\n                                    {inputFields && inputFields.map((inputField, index) => (\r\n                                        <Fragment key={`${inputField}~${index}`}>\r\n                                            <Table.Row>\r\n                                            <Table.Cell>\r\n                                                <Input\r\n                                                    id=\"complaint\"\r\n                                                    name=\"complaint\"\r\n                                                    type=\"text\"\r\n                                                    fluid\r\n                                                    placeholder='Enter Presenting Complaints'\r\n                                                    value={inputField.complaint}\r\n                                                    onChange={event => handleInputChange(index, event)}\r\n                                                />\r\n                                            </Table.Cell>\r\n                                            <Table.Cell>\r\n                                                <Input\r\n                                                    id=\"onsetDate\"\r\n                                                    name=\"onsetDate\"\r\n                                                    type=\"date\"\r\n                                                    fluid\r\n                                                    placeholder='Onset Date'\r\n                                                    value={inputField.onsetDate}\r\n                                                    onChange={event => handleInputChange(index, event)}\r\n                                                />\r\n                                            </Table.Cell>\r\n                                            <Table.Cell>\r\n                                                <select\r\n                                                    class=\"ui fluid selection dropdown\"\r\n                                                    value={inputField.severity}\r\n                                                    onChange={event => handleInputChange(index, event)}\r\n                                                    name=\"severity\"\r\n                                                    id=\"severity\">\r\n                                                    <option value=\"0\">0</option>\r\n                                                    <option value=\"1\">1</option>\r\n                                                    <option value=\"2\">2</option>\r\n                                                    <option value=\"3\">3</option>\r\n                                                    <option value=\"4\">4</option>\r\n                                                    <option value=\"5\">5</option>\r\n                                                    <option value=\"6\">6</option>\r\n                                                    <option value=\"7\">7</option>\r\n                                                    <option value=\"8\">8</option>\r\n                                                    <option value=\"9\">9</option>\r\n                                                    <option value=\"10\">10</option>\r\n                                                </select>\r\n                                            </Table.Cell>\r\n                                            <Table.Cell>\r\n                                                <Input\r\n                                                    id=\"dateResolved\"\r\n                                                    name=\"dateResolved\"\r\n                                                    type=\"date\"\r\n                                                    fluid\r\n                                                    placeholder='Date Resolved'\r\n                                                    value={inputField.dateResolved}\r\n                                                    onChange={event => handleInputChange(index, event)}\r\n                                                />\r\n                                            </Table.Cell>\r\n                                            </Table.Row>\r\n                                        </Fragment>\r\n                                    ))}\r\n\r\n                            </Table.Body>\r\n\r\n                            <Table.Footer>\r\n                                <Table.Row>\r\n                                    <Table.HeaderCell>\r\n                                        <Button color=\"blue\" size=\"tiny\" type=\"button\" onClick={() => handleAddFields()}>\r\n                                            <Icon name='plus' /> Add More\r\n                                        </Button>\r\n                                    </Table.HeaderCell>\r\n                                </Table.Row>\r\n                            </Table.Footer>\r\n                        </Table>\r\n                        <br/>\r\n                        <Label as='a' color='pink' ribbon>\r\n                            Clinical Diagnosis\r\n                        </Label>\r\n                        <Table color=\"pink\" celled>\r\n                            <Table.Header>\r\n                                <Table.Row>\r\n                                    <Table.Cell style={{ fontWeight: 'bold'}}>Condition</Table.Cell>\r\n                                    <Table.Cell style={{ fontWeight: 'bold'}}>Order</Table.Cell>\r\n                                    <Table.Cell style={{ fontWeight: 'bold'}}>Certainty</Table.Cell>\r\n                                    <Table.Cell style={{ fontWeight: 'bold'}}></Table.Cell>\r\n                                </Table.Row>\r\n                            </Table.Header>\r\n\r\n                            <Table.Body>\r\n                                {inputFieldsDiagnosis && inputFieldsDiagnosis.map((diagInputField, diagIndex) => (\r\n                                    <Fragment key={`${diagInputField}~${diagIndex}`}>\r\n                                        <Table.Row>\r\n                                            <Table.Cell>\r\n                                                <Input\r\n                                                    id=\"diagnosis\"\r\n                                                    name=\"diagnosis\"\r\n                                                    type=\"text\"\r\n                                                    fluid\r\n                                                    placeholder='Condition'\r\n                                                    value={diagInputField.diagnosis}\r\n                                                    onChange={event => handleInputDiagChange(diagIndex, event)}\r\n                                                />\r\n                                            </Table.Cell>\r\n                                            <Table.Cell>\r\n                                                <select\r\n                                                    className=\"ui fluid selection dropdown\"\r\n                                                    value={diagInputField.diagnosisOrder}\r\n                                                    onChange={event => handleInputDiagChange(diagIndex, event)}\r\n                                                    name=\"diagnosisOrder\"\r\n                                                    id=\"diagnosisOrder\">\r\n                                                    <option></option>\r\n                                                    <option value=\"1\">Primary</option>\r\n                                                    <option value=\"2\">Secondary</option>\r\n                                                </select>\r\n                                            </Table.Cell>\r\n                                            <Table.Cell>\r\n                                                <select\r\n                                                    className=\"ui fluid selection dropdown\"\r\n                                                    value={diagInputField.certainty}\r\n                                                    onChange={event => handleInputDiagChange(diagIndex, event)}\r\n                                                    name=\"certainty\"\r\n                                                    id=\"certainty\">\r\n                                                    <option></option>\r\n                                                    <option value=\"1\">Presumed</option>\r\n                                                    <option value=\"2\">Confirmed</option>\r\n                                                </select>\r\n                                            </Table.Cell>\r\n                                            <Table.Cell></Table.Cell>\r\n                                        </Table.Row>\r\n                                    </Fragment>\r\n                                ))}\r\n                            </Table.Body>\r\n\r\n                            <Table.Footer>\r\n                                <Table.Row>\r\n                                    <Table.HeaderCell>\r\n\r\n                                        <Button color=\"blue\" size=\"tiny\" type=\"button\" onClick={() => handleAddDiagFields()}>\r\n                                            <Icon name='plus' /> Add More\r\n                                        </Button>\r\n                                    </Table.HeaderCell>\r\n\r\n                                </Table.Row>\r\n                            </Table.Footer>\r\n                        </Table>\r\n                        <br/>\r\n                        { isLabEnabled && <div>\r\n                            <Label as='a' color='teal' ribbon>\r\n                                Lab Test\r\n                            </Label>\r\n\r\n                            <Table color=\"teal\" celled>\r\n                                <Table.Header>\r\n                                    <Table.Row>\r\n                                        <Table.Cell style={{ fontWeight: 'bold'}}>Lab Test Group</Table.Cell>\r\n                                        <Table.Cell style={{ fontWeight: 'bold'}}>Lab Test</Table.Cell>\r\n                                        <Table.Cell style={{ fontWeight: 'bold'}}>Priority</Table.Cell>\r\n                                        <Table.Cell style={{ fontWeight: 'bold'}}>Status</Table.Cell>\r\n                                    </Table.Row>\r\n                                </Table.Header>\r\n\r\n                                <Table.Body>\r\n                                   {inputFieldsLab && inputFieldsLab.map((labInputField, labIndex) => (\r\n                                        <Fragment key={`${labInputField}~${labIndex}`}>\r\n                                            <Table.Row>\r\n                                                <Table.Cell>\r\n                                                    <select\r\n                                                        className=\"ui fluid selection dropdown\"\r\n                                                        value={labInputField.labOrder}\r\n                                                        onChange={ e => handleInputLabChange(labIndex, e)}\r\n                                                        name=\"labOrder\"\r\n                                                        id=\"labOrder\">\r\n                                                        <option></option>\r\n                                                        {\r\n                                                            labGroups.map((d)=> (\r\n                                                                <option key={d.id} value={`${d.id}-${d.groupName}`}>\r\n                                                                    {d.groupName}\r\n                                                                </option>\r\n                                                            ))\r\n                                                        }\r\n                                                    </select>\r\n\r\n                                                </Table.Cell>\r\n                                                <Table.Cell>\r\n                                                    <select\r\n                                                        className=\"ui fluid selection dropdown\"\r\n                                                        value={labInputField.labTest}\r\n                                                        onChange={e => handleInputLabChange(labIndex, e)}\r\n                                                        name=\"labTest\"\r\n                                                        id=\"labTest\">\r\n                                                        <option></option>\r\n                                                             {\r\n                                                                labTests.map((d)=> (\r\n                                                                    <option key={d.id} value={d.id}>\r\n                                                                        {d.labTestName}\r\n                                                                    </option>\r\n                                                                ))\r\n                                                            }\r\n                                                    </select>\r\n\r\n                                                </Table.Cell>\r\n                                                <Table.Cell>\r\n                                                <select\r\n                                                    className=\"ui fluid selection dropdown\"\r\n                                                    value={labInputField.priority}\r\n                                                    onChange={e => handleInputLabChange(labIndex, e)}\r\n                                                    name=\"priority\"\r\n                                                    id=\"priority\">\r\n                                                    <option></option>\r\n                                                       {\r\n                                                            priorities.map((d)=> (\r\n                                                                <option key={d.id} value={d.id}>\r\n                                                                    {d.display}\r\n                                                                </option>\r\n                                                            ))\r\n                                                        }\r\n                                                </select>\r\n\r\n                                                </Table.Cell>\r\n                                                <Table.Cell>\r\n                                                    <select\r\n                                                        className=\"ui fluid selection dropdown\"\r\n                                                        value={labInputField.status}\r\n                                                        onChange={e => handleInputLabChange(labIndex, e)}\r\n                                                        name=\"status\"\r\n                                                        id=\"status\">\r\n                                                        <option></option>\r\n                                                          <option value=\"0\">Pending Collection</option>\r\n                                                            <option value=\"1\">Sample Collected</option>\r\n                                                            <option value=\"2\">Sample Transferred</option>\r\n                                                            <option value=\"3\">Sample Verified</option>\r\n                                                            <option value=\"4\">Sample Rejected</option>\r\n                                                            <option value=\"5\">Result Available</option>\r\n\r\n                                                    </select>\r\n                                                </Table.Cell>\r\n                                            </Table.Row>\r\n                                        </Fragment>\r\n                                    ))}\r\n                                </Table.Body>\r\n\r\n                                <Table.Footer>\r\n                                    <Table.Row>\r\n                                        <Table.HeaderCell>\r\n\r\n                                            <Label as='a' color=\"blue\" size=\"tiny\" onClick={() => handleAddFieldsLab()}>\r\n                                                <Icon name='plus' /> Add Test\r\n                                            </Label>\r\n                                        </Table.HeaderCell>\r\n\r\n                                    </Table.Row>\r\n                                </Table.Footer>\r\n                            </Table>\r\n                        </div>}\r\n                        <br/>\r\n                        <Label as='a' color='purple' ribbon>\r\n                            Pharmacy Order\r\n                        </Label>\r\n                        <br/>\r\n                        <br/>\r\n\r\n                           {   editPharmacyOrder.length > 0 ?\r\n                               editPharmacyOrder.map((d, index)=> (\r\n                                  <Fragment key={index}>\r\n                                      <div className=\"row\">\r\n                                          <div className=\"col-md-6\">\r\n                                                <Input\r\n                                                   label=\"Order Date\"\r\n                                                   type=\"date\"\r\n                                                   name=\"encounterDateTime\"\r\n                                                   id=\"encounterDateTime\"\r\n                                                   fluid\r\n                                                   onChange={e => handleInputChangePharmacyOrderDto(index, e)}\r\n                                                   value={d.encounterDateTime.substring(0,10)}\r\n                                               />\r\n                                          </div>\r\n                                          <div className=\"col-md-6\">\r\n                                              <select\r\n                                                  label=\"Drug Name\"\r\n                                                  className=\"ui fluid selection dropdown\"\r\n                                                  onChange={e => handleInputChangePharmacyOrderDto(index, e)}\r\n                                                  value={d.drugName}\r\n                                                  name=\"drugName\"\r\n                                                  id=\"drugName\">\r\n                                                  <option></option>\r\n                                                  {drugRows}\r\n                                              </select>\r\n                                          </div>\r\n                                     </div>\r\n                                     <br />\r\n                                     <div className=\"row\">\r\n                                        <div className=\"col-md-6\">\r\n                                             <Input\r\n                                                 label=\"Dosage Strength\"\r\n                                                 type=\"text\"\r\n                                                 name=\"dosageStrength\"\r\n                                                 id=\"dosageStrength\"\r\n                                                 fluid\r\n                                                 onChange={e => handleInputChangePharmacyOrderDto(index, e)}\r\n                                                 value={d.dosageStrength}\r\n                                             />\r\n                                        </div>\r\n                                         <div className=\"col-md-6\">\r\n                                          <select\r\n                                              className=\"ui fluid selection dropdown\"\r\n                                              name=\"dosageStrengthUnit\"\r\n                                              id=\"dosageStrengthUnit\"\r\n                                              onChange={e => handleInputChangePharmacyOrderDto(index, e)}\r\n                                              value={d.dosageStrengthUnit}\r\n                                              >\r\n                                              <option></option>\r\n                                              {dosageUnitsRows}\r\n                                          </select>\r\n                                       </div>\r\n                                     </div>\r\n                                     <br/>\r\n                                     <div className=\"row\">\r\n\r\n                                         <div className=\"col-md-6\">\r\n                                           <Input\r\n                                              label=\"Drug Brand\"\r\n                                              type=\"text\"\r\n                                              name=\"brand\"\r\n                                              id=\"brand\"\r\n                                              fluid\r\n                                              onChange={e => handleInputChangePharmacyOrderDto(index, e)}\r\n                                              value={d.brand}\r\n                                           />\r\n                                         </div>\r\n                                         <div className=\"col-md-6\">\r\n                                              <Input\r\n                                                  label=\"Dosage Frequency\"\r\n                                                  type=\"text\"\r\n                                                  name=\"dosageFrequency\"\r\n                                                  id=\"dosageFrequency\"\r\n                                                  fluid\r\n                                                  onChange={e => handleInputChangePharmacyOrderDto(index, e)}\r\n                                                  value={d.dosageFrequency}\r\n                                              />\r\n                                         </div>\r\n                                    </div>\r\n                                    <br/>\r\n                                       <div className=\"row\">\r\n                                           <div className=\"col-md-4\">\r\n                                                <Input\r\n                                                    label=\"Start Date\"\r\n                                                    type=\"date\"\r\n                                                    name=\"startDate\"\r\n                                                    id=\"startDate\"\r\n                                                    fluid\r\n                                                    onChange={e => handleInputChangePharmacyOrderDto(index, e)}\r\n                                                    value={d.startDate}\r\n                                                />\r\n                                           </div>\r\n                                           <div className=\"col-md-4\">\r\n                                                 <Input\r\n                                                    label=\"Duration\"\r\n                                                    type=\"text\"\r\n                                                    name=\"duration\"\r\n                                                    id=\"duration\"\r\n                                                    fluid\r\n                                                    onChange={e => handleInputChangePharmacyOrderDto(index, e)}\r\n                                                    value={d.duration}\r\n                                                />\r\n                                           </div>\r\n                                           <div className=\"col-md-4\">\r\n                                               <select\r\n\r\n                                                     className=\"ui fluid selection dropdown\"\r\n                                                     name=\"durationUnit\"\r\n                                                     id=\"durationUnit\"\r\n                                                     onChange={e => handleInputChangePharmacyOrderDto(index, e)}\r\n                                                     value={d.durationUnit}\r\n                                                     >\r\n                                                     <option></option>\r\n                                                     {durationUnitsRows}\r\n                                                 </select>\r\n                                           </div>\r\n                                      </div>\r\n                                      <br/>\r\n                                      <div className=\"row\">\r\n                                       <Input\r\n                                             label=\"Comments\"\r\n                                             type=\"text\"\r\n                                             name=\"comments\"\r\n                                             id=\"comments\"\r\n                                             onChange={e => handleInputChangePharmacyOrderDto(index, e)}\r\n                                             value={d.comments}\r\n                                         />\r\n                                     </div>\r\n                                     <hr/>\r\n                                     </Fragment>\r\n                                  )) : \"No pharmacy order for patient.\"\r\n                           }\r\n\r\n                    </Segment>\r\n                    <Button type={\"submit\"} variant=\"contained\" color={\"primary\"}>Submit</Button>\r\n                </form>\r\n          </Grid.Column>\r\n          <Grid.Column>\r\n            <Segment>\r\n            <List>\r\n                  <List.Item>\r\n                      <Link\r\n                          to={{\r\n                              pathname: \"/\",\r\n                              state: { patientObj: patientObj  }\r\n                          }}>\r\n                          <Button icon labelPosition='right' color='green' fluid>\r\n                              <Icon name='angle double left' />\r\n                              Back\r\n                          </Button>\r\n                      </Link>\r\n                  </List.Item>\r\n                  <List.Item>\r\n                  <Button icon labelPosition='right' color='blue' fluid>\r\n                      <Icon name='calendar alternate' />\r\n                        Appointment\r\n                    </Button>\r\n                  </List.Item>\r\n            </List>\r\n                { previousConsultation &&\r\n                    <Card>\r\n                        <Card.Content>\r\n                            <b>Previous Clinical Notes</b>\r\n                        </Card.Content>\r\n                        <Card.Content>\r\n                            <Feed>\r\n                                { previousConsultation.map((consultation, i) => (\r\n                                    <div>\r\n                                        <Feed.Event>\r\n                                            <Feed.Content>\r\n                                                <Feed.Date content={consultation.encounterDate} />\r\n                                                <Feed.Summary>\r\n                                                    {consultation.visitNotes}\r\n                                                </Feed.Summary>\r\n                                            </Feed.Content>\r\n                                        </Feed.Event>\r\n                                        <hr/>\r\n                                    </div>\r\n                                )) }\r\n                            </Feed>\r\n                        </Card.Content>\r\n                    </Card>\r\n                }\r\n            </Segment>\r\n          </Grid.Column>\r\n        </Grid>\r\n    );\r\n  };\r\n\r\nexport default Widget;\r\n","import React from \"react\";\r\nimport {\r\n  MemoryRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nimport { ToastContainer} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport \"./main/webapp/vendor/bootstrap-select/dist/css/bootstrap-select.min.css\";\r\nimport \"./../src/main/webapp/css/style.css\";\r\n\r\nimport Home from './main/webapp/jsx/components/Home';\r\nimport PatientDetails from \"./main/webapp/jsx/components/Patient/PatientDetails\";\r\nimport PatientConsultationHistory from './main/webapp/jsx/components/History/PatientConsultationHistory';\r\nimport ViewPatientHistory from './main/webapp/jsx/components/History/ViewPatientHistory'\r\n//import PatientEditDetail from './main/webapp/jsx/components/Patient/PatientEditDetail';\r\n\r\nexport default function App() {\r\n  return (\r\n      <Router>\r\n          <div>\r\n              <ToastContainer />\r\n              {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n              <Switch>\r\n                  <Route path=\"/patient-consultation\">\r\n                      <ViewPatientHistory />\r\n                  </Route>\r\n\r\n                  <Route path=\"/patient-consultations-history\">\r\n                    <PatientConsultationHistory />\r\n                  </Route>\r\n\r\n                  <Route path=\"/patient-history\">\r\n                      <PatientDetails/>\r\n                  </Route>\r\n                  {/*\r\n          <Route path=\"/edit-patient\">\r\n            <EditPatient />\r\n          </Route> */}\r\n                  <Route path=\"/\">\r\n                      <Home />\r\n                  </Route>\r\n\r\n\r\n              </Switch>\r\n          </div>\r\n      </Router>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","let direction = 'ltr';\r\n\r\nexport const dezThemeSet = [\r\n\t{ /* Default */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"full\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{ /* Demo Theme 1 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tprimary: \"color_5\",\r\n\t\theaderBg: \"color_5\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tdirection: direction\r\n\t},\r\n\t { /* Demo Theme 2 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_11\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_11\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_11\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 3 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"dark\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_3\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 4 */\t\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t\t\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 5 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"horizontal\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_9\",\r\n\t\tsidebarStyle: \"modern\",\r\n\t\tsidebarPosition: \"static\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_9\",\r\n\t\tdirection: direction\r\n\t},\r\n\t/* {\r\n\t\t//Demo Theme 6\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"mini\",\r\n\t\tsidebarBg: \"color_10\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 7 \r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"compact\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_6\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 8 *\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"icon-hover\",\r\n\t\tsidebarBg: \"color_15\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t} */\r\n];\r\n\t","import React, { createContext, useEffect, useState } from \"react\";\r\nimport {dezThemeSet} from './ThemeDemo';\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nconst ThemeContextProvider = (props) => {\r\n\tconst [sideBarStyle, setSideBarStyle] = useState({ value: \"full\", label: \"Full\",});\r\n\tconst [sidebarposition, setSidebarposition] = useState({ value: \"fixed\",\tlabel: \"Fixed\",});\r\n    const [headerposition, setHeaderposition] = useState({ value: \"fixed\", label: \"Fixed\", });\r\n    const [sidebarLayout, setSidebarLayout] = useState({ value: \"vertical\", label: \"Vertical\",});\r\n\tconst [direction, setDirection] = useState({ value: \"ltr\", label: \"LTR\" });\r\n\tconst [primaryColor, setPrimaryColor] = useState(\"color_1\");\r\n\tconst [navigationHader, setNavigationHader] = useState(\"color_1\");\r\n\tconst [haderColor, setHaderColor] = useState(\"color_1\");\r\n\tconst [sidebarColor, setSidebarColor] = useState(\"color_1\");\r\n\tconst [iconHover, setIconHover] = useState(false);\r\n\tconst [menuToggle, setMenuToggle] = useState(false);\r\n\tconst [background, setBackground] = useState({ value: \"light\",\tlabel: \"Light\",});\r\n\tconst [containerPosition_, setcontainerPosition_] = useState({value: \"wide-boxed\", label: \"Wide Boxed\",});\r\n    const body = document.querySelector(\"body\");\r\n    const [windowWidth, setWindowWidth] = useState(0);\r\n    const [windowHeight, setWindowHeight] = useState(0);\r\n\r\n  // layout\r\n  const layoutOption = [\r\n    { value: \"vertical\", label: \"Vertical\" },\r\n    { value: \"horizontal\", label: \"Horizontal\" },\r\n  ];\r\n  const sideBarOption = [\r\n    { value: \"compact\", label: \"Compact\" },\r\n    { value: \"full\", label: \"Full\" },\r\n    { value: \"mini\", label: \"Mini\" },\r\n    { value: \"modern\", label: \"Modern\" },\r\n    { value: \"overlay\", label: \"Overlay\" },\r\n    { value: \"icon-hover\", label: \"Icon-hover\" },\r\n  ];\r\n  const backgroundOption = [\r\n    { value: \"light\", label: \"Light\" },\r\n    { value: \"dark\", label: \"Dark\" },\r\n  ];\r\n  const sidebarpositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const headerPositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const containerPosition = [\r\n    { value: \"wide-boxed\", label: \"Wide Boxed\" },\r\n    { value: \"boxed\", label: \"Boxed\" },\r\n    { value: \"wide\", label: \"Wide\" },\r\n  ];\r\n  const colors = [\r\n    \"color_1\",\r\n    \"color_2\",\r\n    \"color_3\",\r\n    \"color_4\",\r\n    \"color_5\",\r\n    \"color_6\",\r\n    \"color_7\",\r\n    \"color_8\",\r\n    \"color_9\",\r\n    \"color_10\",\r\n    \"color_11\",\r\n    \"color_12\",\r\n    \"color_13\",\r\n    \"color_14\",\r\n    \"color_15\",\r\n  ];\r\n  const directionPosition = [\r\n    { value: \"ltr\", label: \"LTR\" },\r\n    { value: \"rtl\", label: \"RTL\" },\r\n  ];\r\n  const fontFamily = [\r\n    { value: \"poppins\", label: \"Poppins\" },\r\n    { value: \"roboto\", label: \"Roboto\" },\r\n    { value: \"cairo\", label: \"Cairo\" },\r\n    { value: \"opensans\", label: \"Open Sans\" },\r\n    { value: \"HelveticaNeue\", label: \"HelveticaNeue\" },\r\n  ];\r\n  const changePrimaryColor = (name) => {\r\n\tsetPrimaryColor(name);\r\n    body.setAttribute(\"data-primary\", name);\r\n  };\r\n  const changeNavigationHader = (name) => {\r\n    setNavigationHader(name);\r\n    body.setAttribute(\"data-nav-headerbg\", name);\r\n  };\r\n  const chnageHaderColor = (name) => {\r\n    setHaderColor(name);\r\n    body.setAttribute(\"data-headerbg\", name);\r\n  };\r\n  const chnageSidebarColor = (name) => {\r\n    setSidebarColor(name);\r\n    body.setAttribute(\"data-sibebarbg\", name);\r\n  };\r\n  const changeSideBarPostion = (name) => {\r\n    setSidebarposition(name);\r\n    body.setAttribute(\"data-sidebar-position\", name.value);\r\n  };\r\n  const changeDirectionLayout = (name) => {\r\n    setDirection(name);\r\n    body.setAttribute(\"direction\", name.value);\r\n    let html = document.querySelector(\"html\");\r\n    html.setAttribute(\"dir\", name.value);\r\n    html.className = name.value;\r\n  };\r\n  const changeSideBarLayout = (name) => {\r\n    if (name.value === \"horizontal\") {\r\n      if (sideBarStyle.value === \"overlay\") {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n        setSideBarStyle({ value: \"full\", label: \"Full\" });\r\n        body.setAttribute(\"data-sidebar-style\", \"full\");\r\n      } else {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n      }\r\n    } else {\r\n      setSidebarLayout(name);\r\n      body.setAttribute(\"data-layout\", name.value);\r\n    }\r\n  };\r\n  const changeSideBarStyle = (name) => {\r\n    if (sidebarLayout.value === \"horizontal\") {\r\n      if (name.value === \"overlay\") {\r\n        alert(\"Sorry! Overlay is not possible in Horizontal layout.\");\r\n      } else {\r\n        setSideBarStyle(name);\r\n        setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n        body.setAttribute(\"data-sidebar-style\", name.value);\r\n      }\r\n    } else {\r\n      setSideBarStyle(name);\r\n      setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n      body.setAttribute(\"data-sidebar-style\", name.value);\r\n    }\r\n  };\r\n\r\n  const changeHeaderPostion = (name) => {\r\n    setHeaderposition(name);\r\n    body.setAttribute(\"data-header-position\", name.value);\r\n  };\r\n\r\n  const openMenuToggle = () => {\r\n    sideBarStyle.value === \"overly\"\r\n      ? setMenuToggle(true)\r\n      : setMenuToggle(false);\r\n  };\r\n\r\n  const changeBackground = (name) => {\r\n    body.setAttribute(\"data-theme-version\", name.value);\r\n    setBackground(name);\r\n  };\r\n\r\n  const changeContainerPosition = (name) => {\r\n    setcontainerPosition_(name);\r\n    body.setAttribute(\"data-container\", name.value);\r\n    name.value === \"boxed\" &&\r\n      changeSideBarStyle({ value: \"overlay\", label: \"Overlay\" });\r\n  };\r\n  \r\n  const setDemoTheme = (theme,direction) => {\r\n\r\n\tvar setAttr = {};\t\r\n\t\r\n\t\r\n\tvar themeSettings = dezThemeSet[theme];\t\r\n\t\t\r\n\tbody.setAttribute(\"data-typography\", themeSettings.typography);\r\n \r\n\tsetAttr.value = themeSettings.version;\r\n\tchangeBackground(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.layout;\r\n\tchangeSideBarLayout(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.primary;\r\n\tchangePrimaryColor(themeSettings.primary);\r\n\t\r\n//setAttr.value = themeSettings.navheaderBg;\r\n\tchangeNavigationHader(themeSettings.navheaderBg);\r\n\t\r\n//setAttr.value = themeSettings.headerBg;\r\n\tchnageHaderColor(themeSettings.headerBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarStyle;\r\n\tchangeSideBarStyle(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.sidebarBg;\r\n\tchnageSidebarColor(themeSettings.sidebarBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarPosition;\r\n\tchangeSideBarPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.headerPosition;\r\n\tchangeHeaderPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.containerLayout;\r\n\tchangeContainerPosition(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.direction;\r\n\tsetAttr.value = direction;\r\n\tchangeDirectionLayout(setAttr); \r\n\t\r\n\t};\r\n\r\n  useEffect(() => {\r\n\tconst body = document.querySelector(\"body\");\r\n    body.setAttribute(\"data-typography\", \"poppins\");\r\n    body.setAttribute(\"data-theme-version\", \"light\");\r\n    body.setAttribute(\"data-layout\", \"vertical\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-nav-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-style\", \"overlay\");\r\n    body.setAttribute(\"data-sibebarbg\", \"color_1\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-position\", \"fixed\");\r\n    body.setAttribute(\"data-header-position\", \"fixed\");\r\n    body.setAttribute(\"data-container\", \"wide\");\r\n    body.setAttribute(\"direction\", \"ltr\");\r\n\t\tlet resizeWindow = () => {\r\n\t\t\tsetWindowWidth(window.innerWidth);\r\n\t\t\tsetWindowHeight(window.innerHeight);\r\n\t\t\twindow.innerWidth >= 768 && window.innerWidth < 1024\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"mini\")\r\n\t\t\t: window.innerWidth <= 768\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"overlay\")\r\n\t\t\t: body.setAttribute(\"data-sidebar-style\", \"full\");\r\n\t\t};\r\n    resizeWindow();\r\n    window.addEventListener(\"resize\", resizeWindow);\r\n    return () => window.removeEventListener(\"resize\", resizeWindow);\r\n  }, []);\r\n\r\n  return (\r\n    <ThemeContext.Provider\r\n      value={{\r\n        body,\r\n        sideBarOption,\r\n        layoutOption,\r\n        backgroundOption,\r\n        sidebarposition,\r\n        headerPositions,\r\n        containerPosition,\r\n        directionPosition,\r\n        fontFamily,\r\n\t\tprimaryColor,\r\n        navigationHader,\r\n\t\twindowWidth,\r\n\t\twindowHeight,\r\n        changePrimaryColor,\r\n        changeNavigationHader,\r\n        changeSideBarStyle,\r\n        sideBarStyle,\r\n        changeSideBarPostion,\r\n        sidebarpositions,\r\n        changeHeaderPostion,\r\n        headerposition,\r\n        changeSideBarLayout,\r\n        sidebarLayout,\r\n        changeDirectionLayout,\r\n        changeContainerPosition,\r\n        direction,\r\n        colors,\r\n        haderColor,\r\n        chnageHaderColor,\r\n        chnageSidebarColor,\r\n        sidebarColor,\r\n        iconHover,\r\n        menuToggle,\r\n        openMenuToggle,\r\n        changeBackground,\r\n        background,\r\n        containerPosition_,\r\n\t\tsetDemoTheme,\r\n\t}}\r\n    >\r\n      {props.children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeContextProvider;\r\n\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\r\n\r\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\r\nimport SimpleReactLightbox from \"simple-react-lightbox\";\r\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\"; \r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\r\n            <SimpleReactLightbox>\r\n                <BrowserRouter basename='/'>\r\n                    <ThemeContext>\r\n                        <App />\r\n                    </ThemeContext>  \r\n                </BrowserRouter>\r\n            </SimpleReactLightbox>\r\n\r\n\t</React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nreportWebVitals();\r\n"],"sourceRoot":""}