{"version":3,"sources":["main/webapp/api.js","main/webapp/jsx/components/Patient/PatientList.js","main/webapp/jsx/components/Home.js","main/webapp/jsx/components/Patient/PostPatient.js","main/webapp/jsx/components/Patient/PatientCard.js","main/webapp/jsx/components/History/AddPharmacyOrder.js","main/webapp/jsx/components/History/EditPharmacyOrder.js","main/webapp/jsx/components/History/RecentHistory.js","main/webapp/jsx/components/Patient/PatientDetail.js","main/webapp/jsx/components/History/PatientConsultationHistory.js","main/webapp/jsx/components/History/ViewPatientHistory.js","App.js","main/webapp/reportWebVitals.js","main/webapp/context/ThemeDemo.js","main/webapp/context/ThemeContext.js","index.js"],"names":["url","apiUrl","token","tableIcons","Add","forwardRef","props","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","Patients","makeStyles","theme","card","margin","spacing","display","flexDirection","alignItems","form","width","marginTop","submit","cardBottom","marginBottom","Select","height","button","root","input","error","color","fontSize","success","useState","patientList","setPatientList","axios","get","baseUrl","headers","then","response","data","catch","toast","position","POSITION","TOP_RIGHT","useEffect","patients","calculate_age","dob","today","Date","dateParts","split","dateObject","birthDate","age_now","getFullYear","m","getMonth","getDate","getHospitalNumber","identifier","hospitalNumber","find","obj","type","value","CardBody","icons","title","columns","field","filtering","map","row","name","firstName","surname","hospital_number","gender","age","dateOfBirth","undefined","moment","format","actions","style","backgroundColor","border","borderRadius","to","pathname","state","patientObj","size","options","headerStyle","searchFieldStyle","margingLeft","exportButton","searchFieldAlignment","pageSizeOptions","pageSize","debounceInterval","divStyle","Home","key","setKey","Row","Col","xl","Card","Body","className","Tabs","id","activeKey","onSelect","k","Tab","eventKey","useStyles","newDate","PostPatient","selectedOption","setSelectedOption","classes","useHistory","services","setServices","saving","setSaving","filterService","filter","x","moduleServiceCode","Object","entries","label","moduleServiceName","ServicesPost","encounterDate","facilityId","personId","serviceCode","visitId","postServices","Modal","show","showModal","toggle","Header","variant","onClick","onChange","isMulti","noOptionsMessage","Spinner","startIcon","e","preventDefault","serviceArr","forEach","index","array","push","post","commenced","textTransform","withStyles","heading","typography","pxToRem","secondaryHeading","palette","text","secondary","icon","verticalAlign","details","column","flexBasis","helper","borderLeft","divider","padding","unit","link","primary","main","textDecoration","patientObjs","console","log","setpatientObj","modal","setModal","ExpansionPanel","defaultExpanded","ExpansionPanelSummary","expandicon","md","root2","phoneNumber","contactPoint","getPhoneNumber","address","city","getAddress","Label","Button","floated","ExpansionPanelDetails","content","basic","pointing","as","Divider","ExpansionPanelActions","expandIcon","AddPharmacyOrder","drugs","setDrugs","dosageUnits","setDosageUnits","durationUnits","setDurationUnits","encounterDateTime","drugName","dosageStrength","dosageStrengthUnit","dosageFrequency","startDate","duration","durationUnit","comments","patientId","orderedBy","dateTimePrescribed","pharmacyOrder","setPharmacyOrder","handleInputChangePharmacyOrderDto","target","handleSubmit","resp","loadDosageUnits","useCallback","loadDurationUnits","loadPharmacyDrugs","drugRows","dosageUnitsRows","durationUnitsRows","length","drug","dosageUnit","FormGroup","InputGroup","brand","EditPharmacyOrder","editPharmacyOrderValue","pharmacyOrderEdit","setPharmacyOrderEdit","substring","Widget","isLabEnabled","setIsLabEnabled","isPharmacyEnabled","setIsPharmacyEnabled","hasAllergies","pharmacyModal","setPharmacyModal","pharmacyOrderModal","setPharmacyOrderModal","latestVitals","setLatestVitals","previousConsultation","setPreviousConsultation","setEncounterDate","useForm","control","getValues","setError","setValue","complaint","onsetDate","severity","dateResolved","inputFields","setInputFields","certainty","diagnosis","diagnosisOrder","inputFieldsDiagnosis","setInputFieldsDiagnosis","labOrder","labTest","priority","status","inputFieldsLab","setInputFieldsLab","history","setEditPharmacyOrderValue","pharmacy_by_visitId","onSubmit","diagnosisList","presentingComplaints","labTests","inputFieldsDiag","inputField","slice","InData","toString","visitNote","toLocaleTimeString","hour12","err","labGroups","setLabGroups","setLabTests","priorities","setPriorities","loadLabCheck","loadPharmacyCheck","loadLatestVitals","loadPreviousConsultation","loadLabGroup","handleInputChange","event","values","handleInputDiagChange","handleInputLabChange","str","handleDelete","delete","Grid","Column","Segment","ribbon","List","celled","Item","pulse","respiratoryRate","temperature","systolic","diastolic","bodyWeight","consultation","i","j","Group","errors","utils","DateFnsUtils","defaultValue","rules","required","render","rest","disableFuture","invalidDateMessage","minHeight","Table","Cell","fontWeight","Input","fluid","placeholder","class","Footer","HeaderCell","handleAddFields","Icon","diagInputField","diagIndex","handleAddDiagFields","labInputField","labIndex","d","groupName","labTestName","handleAddFieldsLab","pharmacy","handleEditPharmacyOrder","labelPosition","Content","Feed","Event","Summary","visitNotes","location","CardContent","RecentHistory","PatientConsultationHistory","patientConsultations","Container","cellStyle","date","presentingComplaintsList","inverted","editPharmacyOrder","setEditPharmacyOrder","put","orderDate","orderId","pharm","labtest_by_visitId","lab","tests","labId","description","labTestGroup","labTestGroupId","labTestId","orderPriority","labTestOrderStatus","labdata","App","path","ViewPatientHistory","PatientDetail","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","direction","dezThemeSet","version","layout","headerBg","navheaderBg","sidebarBg","sidebarStyle","sidebarPosition","headerPosition","containerLayout","ThemeContext","createContext","ThemeContextProvider","sideBarStyle","setSideBarStyle","sidebarposition","setSidebarposition","headerposition","setHeaderposition","sidebarLayout","setSidebarLayout","setDirection","primaryColor","setPrimaryColor","navigationHader","setNavigationHader","haderColor","setHaderColor","sidebarColor","setSidebarColor","iconHover","setIconHover","menuToggle","setMenuToggle","background","setBackground","containerPosition_","setcontainerPosition_","body","document","querySelector","windowWidth","setWindowWidth","windowHeight","setWindowHeight","changePrimaryColor","setAttribute","changeNavigationHader","chnageHaderColor","chnageSidebarColor","changeSideBarPostion","changeDirectionLayout","html","changeSideBarLayout","changeSideBarStyle","alert","changeHeaderPostion","changeBackground","changeContainerPosition","resizeWindow","window","innerWidth","innerHeight","addEventListener","removeEventListener","Provider","sideBarOption","layoutOption","backgroundOption","headerPositions","containerPosition","directionPosition","fontFamily","sidebarpositions","colors","openMenuToggle","setDemoTheme","setAttr","themeSettings","children","ReactDOM","StrictMode","basename","getElementById"],"mappings":"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","file":"static/js/main.3584ad01.chunk.js","sourcesContent":["//export const  token = (new URLSearchParams(window.location.search)).get(\"jwt\")\r\n// export const url = '/api/'\r\nexport const url =  'http://localhost:8282/api/v1/';\r\nexport const apiUrl =  'http://localhost:8282/api/';\r\nexport const  token = 'eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJndWVzdEBsYW1pc3BsdXMub3JnIiwiYXV0aCI6IlN1cGVyIEFkbWluIiwibmFtZSI6Ikd1ZXN0IEd1ZXN0IiwiZXhwIjoxNjU4MzkzNjgyfQ.x4U3muSmmYrMGwudLCM42sUHxvFiWuFaB1wk1SjVZL51B9DJ3bRqmX1dtb1DqZ2QP1Ew_CVFIJrVtLxpxIB5hw';\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl, token } from \"./../../../api\";\r\n\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport {  Card,CardBody,} from 'reactstrap';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport {Menu,MenuList,MenuButton,MenuItem,} from \"@reach/menu-button\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport moment from \"moment\";\r\nimport {toast} from \"react-toastify\";\r\n\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}))\r\n\r\n\r\nconst Patients = (props) => {\r\n\r\n    const [patientList, setPatientList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n    }, []);\r\n    ///GET LIST OF Patients\r\n    async function patients() {\r\n        axios\r\n            .get(`${baseUrl}patient/checked-in-by-service/consultation-code`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setPatientList(response.data);\r\n            })\r\n            .catch((error) => {\r\n                toast.error(\"An error occurred while fetching checked-in patients\", {\r\n                    position: toast.POSITION.TOP_RIGHT\r\n                });\r\n            });\r\n    }\r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n        if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n            age_now--;\r\n        }\r\n        if (age_now === 0) {\r\n            return m + \" month(s)\";\r\n        }\r\n        return age_now + \" year(s)\";\r\n    };\r\n\r\n    const getHospitalNumber = (identifier) => {\r\n        const identifiers = identifier;\r\n        const hospitalNumber = identifiers.identifier.find(obj => obj.type == 'HospitalNumber');\r\n        return hospitalNumber ? hospitalNumber.value : '';\r\n    };\r\n\r\n    //console.log(patientList)\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <CardBody>\r\n\r\n\r\n                    <MaterialTable\r\n                        icons={tableIcons}\r\n                        title=\"Find Patient \"\r\n                        columns={[\r\n                            // { title: \" ID\", field: \"Id\" },\r\n                            {\r\n                                title: \"Patient Name\",\r\n                                field: \"name\",\r\n                            },\r\n                            { title: \"Hospital Number\", field: \"hospital_number\", filtering: false },\r\n                            { title: \"Gender\", field: \"gender\", filtering: false },\r\n                            { title: \"Age\", field: \"age\", filtering: false },\r\n                            { title: \"Actions\", field: \"actions\", filtering: false },\r\n                        ]}\r\n                        data={ patientList.map((row) => ({\r\n\r\n                            name:row.firstName + \" \" + row.surname,\r\n                            hospital_number: getHospitalNumber(row.identifier),\r\n                            gender:row.gender.display,\r\n                            age: (row.dateOfBirth === 0 ||\r\n                                row.dateOfBirth === undefined ||\r\n                                row.dateOfBirth === null ||\r\n                                row.dateOfBirth === \"\" )\r\n                                ? 0\r\n                                : calculate_age(moment(row.dateOfBirth).format(\"DD-MM-YYYY\")),\r\n\r\n                            actions:\r\n\r\n                                <div>\r\n                                    <Menu>\r\n                                        <MenuButton style={{ backgroundColor:\"#3F51B5\", color:\"#fff\", border:\"2px solid #3F51B5\", borderRadius:\"4px\", }}>\r\n                                            Actions <span aria-hidden>▾</span>\r\n                                        </MenuButton>\r\n                                        <MenuList style={{ color:\"#000000 !important\"}} >\r\n\r\n                                            <MenuItem style={{ color:\"#000 !important\"}}>\r\n                                                <Link\r\n                                                    to={{\r\n                                                        pathname: \"/patient-history\",\r\n                                                        state: { patientObj: row  }\r\n                                                    }}>\r\n                                                    <MdDashboard size=\"15\" color=\"black\" />{\" \"}<span style={{color: '#000'}}>Patient Dashboard</span>\r\n                                                </Link>\r\n                                            </MenuItem>\r\n\r\n                                        </MenuList>\r\n                                    </Menu>\r\n                                </div>\r\n\r\n                        }))}\r\n\r\n                        options={{\r\n                            headerStyle: {\r\n                                //backgroundColor: \"#9F9FA5\",\r\n                                color: \"#000\",\r\n                            },\r\n                            searchFieldStyle: {\r\n                                width : '200%',\r\n                                margingLeft: '250px',\r\n                            },\r\n                            filtering: false,\r\n                            exportButton: false,\r\n                            searchFieldAlignment: 'left',\r\n                            pageSizeOptions:[10,20,100],\r\n                            pageSize:10,\r\n                            debounceInterval: 400\r\n                        }}\r\n                    />\r\n\r\n                </CardBody>\r\n            </Card>\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Patients;\r\n\r\n\r\n","import React, {useState, Fragment } from \"react\";\r\nimport { Row, Col, Card,  Tab, Tabs, } from \"react-bootstrap\";\r\nimport Dashboard from './Patient/PatientList'\r\n\r\n\r\nconst divStyle = {\r\n  borderRadius: \"2px\",\r\n  fontSize: 14,\r\n};\r\n\r\nconst Home = () => {\r\n    const [key, setKey] = useState('home');\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n     \r\n      <Row>\r\n       \r\n        <Col xl={12}>\r\n          <Card style={divStyle}>\r\n            \r\n            <Card.Body>\r\n              {/* <!-- Nav tabs --> */}\r\n              <div className=\"custom-tab-1\">\r\n                <Tabs\r\n                    id=\"controlled-tab-example\"\r\n                    activeKey={key}\r\n                    onSelect={(k) => setKey(k)}\r\n                    className=\"mb-3\"\r\n                >\r\n                  <Tab eventKey=\"home\" title=\"Checked In Patients\">                   \r\n                    <Dashboard />\r\n                  </Tab>\r\n                                    \r\n                </Tabs>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        \r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl, token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport {format} from 'date-fns';\r\nimport 'react-summernote/dist/react-summernote.css'; // import styles\r\nimport { Spinner } from \"reactstrap\";\r\nimport Select from \"react-select\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}))\r\nlet newDate = new Date()\r\n\r\nconst PostPatient = (props) => {\r\n    const patientObj = props.patientObj;\r\n    //console.log(patientObj)\r\n    const [selectedOption, setSelectedOption] = useState();\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [services, setServices]= useState([]);\r\n    //const [values, setValues] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n\r\n    useEffect(() => {\r\n        ServicesPost()\r\n    }, []);\r\n    ///GET LIST OF Post Services\r\n    async function ServicesPost() {\r\n        axios\r\n            .get(`${baseUrl}patient/vital-sign/post-service`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                const filterService = response.data.filter((x) => x.moduleServiceCode!=='consultation-code')\r\n\r\n                setServices(\r\n                    Object.entries(filterService).map(([key, value]) => ({\r\n                        label: value.moduleServiceName,\r\n                        value: value.moduleServiceCode,\r\n                    })))\r\n\r\n            })\r\n            .catch((error) => {\r\n            });\r\n    }\r\n\r\n    const [postServices, setPostServices]= useState({\r\n        encounterDate:format(new Date(newDate), 'yyyy-MM-dd'),\r\n        facilityId: 1,\r\n        personId:\"\",\r\n        serviceCode:\"\",\r\n        visitId: \"\"\r\n    })\r\n\r\n\r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        setSaving(true);\r\n        let serviceArr = []\r\n        selectedOption.forEach(function (value, index, array) {\r\n            serviceArr.push(value['value'])\r\n        })\r\n        postServices.personId=patientObj.id\r\n        postServices.visitId=patientObj.visitId\r\n        postServices.serviceCode=serviceArr\r\n        axios.post(`${baseUrl}patient/post`, postServices,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n\r\n        )\r\n            .then(response => {\r\n                setSaving(false);\r\n                props.patientObj.commenced=true\r\n                toast.success(\"Service Checkin successful\");\r\n                props.toggle()\r\n                //props.patientsVitalsSigns()\r\n\r\n            })\r\n            .catch(error => {\r\n                setSaving(false);\r\n                toast.error(\"Something went wrong\");\r\n\r\n            });\r\n\r\n    }\r\n\r\n    return (\r\n        <div >\r\n\r\n            <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n                <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                    Post Patient\r\n                    <Button\r\n                        variant=\"\"\r\n                        className=\"btn-close\"\r\n                        onClick={props.toggle}\r\n                    ></Button>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Card >\r\n                        <CardBody>\r\n                            <form >\r\n                                <div className=\"row\">\r\n\r\n                                    <Select\r\n                                        onChange={setSelectedOption}\r\n                                        value={selectedOption}\r\n                                        options={services}\r\n                                        isMulti=\"true\"\r\n                                        noOptionsMessage=\"true\"\r\n                                    />\r\n\r\n                                </div>\r\n\r\n                                {saving ? <Spinner /> : \"\"}\r\n                                <br />\r\n\r\n                                <MatButton\r\n                                    type=\"submit\"\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    className={classes.button}\r\n                                    startIcon={<SaveIcon />}\r\n                                    onClick={handleSubmit}\r\n                                >\r\n                                    {!saving ? (\r\n                                        <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                    ) : (\r\n                                        <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                    )}\r\n                                </MatButton>\r\n\r\n                            </form>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Modal.Body>\r\n\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PostPatient;\r\n","import React, {useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { Button } from 'semantic-ui-react';\r\nimport {Label,} from \"semantic-ui-react\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Col, Row } from \"reactstrap\";\r\nimport Moment from \"moment\";\r\nimport moment from \"moment\";\r\nimport PostPatient from './PostPatient'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\nfunction PatientCard(props) {\r\n  const { classes } = props;\r\n  const patientObjs = props.patientObj ? props.patientObj : {}\r\n  console.log(patientObjs)\r\n  const [patientObj, setpatientObj] = useState(patientObjs)\r\n  const [modal, setModal] = useState(false);\r\n  const toggle = () => setModal(!modal);\r\n\r\n\r\n    const calculate_age = dob => {\r\n      var today = new Date();\r\n      var dateParts = dob.split(\"-\");\r\n      var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n      var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n      var age_now = today.getFullYear() - birthDate.getFullYear();\r\n      var m = today.getMonth() - birthDate.getMonth();\r\n          if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                  age_now--;\r\n              }\r\n          if (age_now === 0) {\r\n                  return m + \" month(s)\";\r\n              }\r\n              return age_now + \" year(s)\";\r\n    };\r\n\r\n  \r\n    const CurrentStatus = ()=>{\r\n\r\n        return (  <Label color=\"blue\" size=\"mini\">Active</Label>);\r\n}\r\n\r\n    const getHospitalNumber = (identifier) => {\r\n      const identifiers = identifier;\r\n      const hospitalNumber = identifiers.identifier.find(obj => obj.type == 'HospitalNumber');\r\n      return hospitalNumber ? hospitalNumber.value : '';\r\n    };\r\n\r\n    const getPhoneNumber = (identifier) => {\r\n      const identifiers = identifier;\r\n      const phoneNumber = identifiers.contactPoint.find(obj => obj.type == 'phone');\r\n      return phoneNumber ? phoneNumber.value : '';\r\n    };\r\n\r\n    const getAddress = (identifier) => {\r\n      const identifiers = identifier;\r\n      const address = identifiers.address.find(obj => obj.city);\r\n      return address ? address.city : '';\r\n    };\r\n\r\n    const PostPatientService =(row)=> {\r\n      setpatientObj({...patientObj, ...row});\r\n      setModal(!modal)\r\n    }\r\n\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n       <ExpansionPanel defaultExpanded>\r\n                <ExpansionPanelSummary expandicon={<ExpandMoreIcon />}>\r\n                \r\n                <Row>\r\n                    \r\n                    <Col md={11}>\r\n                    <Row className={\"mt-1\"}>\r\n                    <Col md={12} className={classes.root2}>\r\n                        <b style={{fontSize: \"25px\"}}>\r\n                        {patientObj.firstName + \" \" + patientObj.surname }\r\n                        </b>\r\n                        \r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Patient ID : <b>{getHospitalNumber(patientObj.identifier) }</b>\r\n                    </span>\r\n                    </Col>\r\n\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        Date Of Birth : <b>{patientObj.dateOfBirth }</b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Age : <b>{calculate_age(moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\"))}</b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Gender :{\" \"}\r\n                        <b>{patientObj.gender.display }</b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Phone Number : <b>{getPhoneNumber(patientObj.contactPoint)}</b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Address : <b>{getAddress(patientObj.address)} </b>\r\n                    </span>\r\n                    </Col>\r\n\r\n                    <Col md={12}>\r\n                    {/* {HIVStatus(patientObj)} */}\r\n                    <span>\r\n                        {\" \"}\r\n                        <b>Status : </b> {CurrentStatus()}\r\n                      </span>\r\n                      \r\n                    </Col>\r\n                    </Row>\r\n                    </Col>\r\n                    <div className=\"float-end\">\r\n                      {\" \"}<Button secondary floated='right'  onClick={() => PostPatientService(patientObj)}>Post Patient</Button>\r\n                      <Link to={\"/\"} >\r\n                       <Button primary floated='right'>Back</Button>\r\n                      </Link>\r\n                    </div>\r\n                </Row>\r\n            \r\n                </ExpansionPanelSummary>\r\n                <ExpansionPanelDetails className={classes.details}>\r\n                \r\n                    <Button\r\n                      color='red'\r\n                      content='Blood Presure'\r\n                      //icon='heart'\r\n                      label={{ basic: true, color: 'red', pointing: 'left', content: '11/22' }}\r\n                    />\r\n                                  \r\n                    <Button\r\n                        basic\r\n                        color='blue'\r\n                        content='Height'\r\n                        icon='fork'\r\n                        label={{\r\n                            as: 'a',\r\n                            basic: true,\r\n                            color: 'blue',\r\n                            pointing: 'left',\r\n                            content: '74.5 in',\r\n                        }}\r\n                      />              \r\n                      <Button\r\n                        basic\r\n                        color='blue'\r\n                        content='Weight'\r\n                        icon='fork'\r\n                        label={{\r\n                            as: 'a',\r\n                            basic: true,\r\n                            color: 'blue',\r\n                            pointing: 'left',\r\n                            content: '74.5 in',\r\n                        }}\r\n                        />\r\n                               \r\n                 \r\n                </ExpansionPanelDetails>\r\n                <Divider />\r\n                <ExpansionPanelActions expandIcon={<ExpandMoreIcon />}>\r\n                \r\n                </ExpansionPanelActions>\r\n            </ExpansionPanel>\r\n            <PostPatient toggle={toggle} showModal={modal} patientObj={patientObj} />\r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, {Fragment, useState, useCallback, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input, InputGroup,InputGroupText} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport {token, url as baseUrl, apiUrl as apiUrl } from \"../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport {format} from \"date-fns\";\r\n\r\nimport 'react-summernote/dist/react-summernote.css'; // import styles\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}));\r\n\r\nconst AddPharmacyOrder = (props) => {\r\n    const patientObj = props.patientObj;\r\n    const [saving, setSaving] = useState(false);\r\n    const classes = useStyles();\r\n    const [drugs, setDrugs] = useState([]);\r\n    const [dosageUnits, setDosageUnits] = useState([]);\r\n    const [durationUnits, setDurationUnits] = useState([]);\r\n\r\n    const [pharmacyOrder, setPharmacyOrder] = useState({\r\n        encounterDateTime: format(new Date(), 'yyyy-MM-dd'),\r\n        drugName: \"\",\r\n        dosageStrength: \"\",\r\n        dosageStrengthUnit: \"\",\r\n        dosageFrequency: \"\",\r\n        startDate: \"\",\r\n        duration: \"\",\r\n        durationUnit: \"\",\r\n        comments: \"\",\r\n        patientId: patientObj.id,\r\n        orderedBy: \"\",\r\n        dateTimePrescribed: \"\",\r\n        visitId: patientObj.visitId\r\n    });\r\n\r\n    const handleInputChangePharmacyOrderDto = e => {\r\n        setPharmacyOrder({...pharmacyOrder, [e.target.name]: e.target.value});\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        try {\r\n            e.preventDefault();\r\n            setSaving(true);\r\n            pharmacyOrder.encounterDateTime = format(new Date(), 'yyyy-MM-dd@hh:mm:ss');\r\n            pharmacyOrder.dateTimePrescribed = format(new Date(), 'yyyy-MM-dd@hh:mm:ss');\r\n\r\n            console.log(pharmacyOrder)\r\n            await axios.post(`${apiUrl}drug-orders`, { \"drugOrders\": [pharmacyOrder] },\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}}).then(resp => {\r\n            console.log(\"drug saved\");\r\n             toast.success(\"Successfully Saved drug order!\", {\r\n                            position: toast.POSITION.TOP_RIGHT\r\n                        });\r\n            });\r\n            setSaving(false);\r\n            props.toggle()\r\n        } catch (e) {\r\n            toast.error(\"An error occurred while saving drug prescription\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n    };\r\n\r\n    const loadDosageUnits = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/DOSE_STRENGTH_UNIT`, { headers: {\"Authorization\" : `Bearer ${token}`}});\r\n            setDosageUnits(response.data);\r\n        } catch (e) {\r\n            toast.error(\"An error occurred while fetching DOSE STRENGTH UNIT\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    const loadDurationUnits = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/AGE_UNIT`, { headers: {\"Authorization\" : `Bearer ${token}`}});\r\n            setDurationUnits(response.data);\r\n        } catch (e) {\r\n            toast.error(\"An error occurred while fetching DOSE STRENGTH UNIT\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    const loadPharmacyDrugs = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${apiUrl}drugs`, { headers: {\"Authorization\" : `Bearer ${token}`}});\r\n            //console.log(\"drugs\", response.data[0].id)\r\n            if (response.data[0].id > 0) {\r\n                 setDrugs(response.data);\r\n            }\r\n        } catch (e) {\r\n            toast.error(\"An error occurred while fetching drugs\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        loadPharmacyDrugs();\r\n        loadDosageUnits();\r\n        loadDurationUnits();\r\n    }, [loadPharmacyDrugs, loadDosageUnits, loadDurationUnits]);\r\n\r\n    let drugRows = null;\r\n    let dosageUnitsRows = null;\r\n    let durationUnitsRows = null;\r\n    if (drugs && drugs.length > 0) {\r\n        //console.log(\"drugs\", drugs);\r\n        drugRows = drugs.map((drug, index) => (\r\n            <option key={drug.name} value={drug.name}>{drug.name}</option>\r\n        ));\r\n    }\r\n    if (dosageUnits && dosageUnits.length > 0) {\r\n        dosageUnitsRows = dosageUnits.map((dosageUnit, index) => (\r\n            <option key={dosageUnit.display} value={dosageUnit.display}>{dosageUnit.display}</option>\r\n        ));\r\n    }\r\n    if (durationUnits && durationUnits.length > 0) {\r\n        durationUnitsRows = durationUnits.map((durationUnit, index) => (\r\n            <option key={durationUnit.display} value={durationUnit.display}>{durationUnit.display}</option>\r\n        ));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n                <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                    Drug Prescription\r\n                    <Button\r\n                        variant=\"\"\r\n                        className=\"btn-close\"\r\n                        onClick={props.toggle}\r\n                    ></Button>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Card >\r\n                        <CardBody>\r\n                            <form>\r\n                                <div className=\"row\">\r\n                                    <div className=\"form-group  mb-3\">\r\n                                        <FormGroup>\r\n                                            <Label>Encounter Date</Label>\r\n                                            <InputGroup>\r\n                                                <Input\r\n                                                    type=\"date\"\r\n                                                    name=\"encounterDateTime\"\r\n                                                    id=\"encounterDateTime\"\r\n                                                    onChange={handleInputChangePharmacyOrderDto}\r\n                                                    value={pharmacyOrder.encounterDateTime}\r\n                                                />\r\n                                            </InputGroup>\r\n\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"row\">\r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                            <Label>Select Drugs</Label>\r\n                                            <InputGroup>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"drugName\"\r\n                                                    id=\"drugName\"\r\n                                                    onChange={handleInputChangePharmacyOrderDto}\r\n                                                    value={pharmacyOrder.drugName}\r\n                                                >\r\n                                                    <option value={\"\"}></option>\r\n                                                    {drugRows}\r\n                                                </Input>\r\n                                            </InputGroup>\r\n                                        </FormGroup>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                            <Label>Dosage Strength</Label>\r\n                                            <InputGroup>\r\n                                                <Input\r\n                                                    type=\"text\"\r\n                                                    name=\"dosageStrength\"\r\n                                                    id=\"dosageStrength\"\r\n                                                    onChange={handleInputChangePharmacyOrderDto}\r\n                                                    value={pharmacyOrder.dosageStrength}\r\n                                                />\r\n\r\n                                            </InputGroup>\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                            <Label>Dosage Unit</Label>\r\n                                            <InputGroup>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"dosageStrengthUnit\"\r\n                                                    id=\"dosageStrengthUnit\"\r\n                                                    onChange={handleInputChangePharmacyOrderDto}\r\n                                                    value={pharmacyOrder.dosageStrengthUnit}\r\n                                                >\r\n                                                    <option value={\"\"}></option>\r\n                                                    {dosageUnitsRows}\r\n                                                </Input>\r\n                                            </InputGroup>\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"row\">\r\n                                    <div className=\"form-group mb-3\">\r\n                                        <FormGroup>\r\n                                            <Label>Drug Brand Name</Label>\r\n                                            <InputGroup>\r\n                                                <Input\r\n                                                    type=\"text\"\r\n                                                    name=\"brand\"\r\n                                                    id=\"brand\"\r\n                                                    onChange={handleInputChangePharmacyOrderDto}\r\n                                                    value={pharmacyOrder.brand}\r\n                                                />\r\n\r\n                                            </InputGroup>\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"row\">\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                            <Label>Dose Frequency</Label>\r\n                                            <InputGroup>\r\n                                                <Input\r\n                                                    type=\"text\"\r\n                                                    name=\"dosageFrequency\"\r\n                                                    id=\"dosageFrequency\"\r\n                                                    onChange={handleInputChangePharmacyOrderDto}\r\n                                                    value={pharmacyOrder.dosageFrequency}\r\n                                                />\r\n\r\n                                            </InputGroup>\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                            <Label>Start Date</Label>\r\n                                            <InputGroup>\r\n                                                <Input\r\n                                                    type=\"date\"\r\n                                                    name=\"startDate\"\r\n                                                    id=\"startDate\"\r\n                                                    onChange={handleInputChangePharmacyOrderDto}\r\n                                                    value={pharmacyOrder.startDate}\r\n                                                />\r\n                                            </InputGroup>\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                            <Label>Duration</Label>\r\n                                            <InputGroup>\r\n                                                <Input\r\n                                                    type=\"text\"\r\n                                                    name=\"duration\"\r\n                                                    id=\"duration\"\r\n                                                    onChange={handleInputChangePharmacyOrderDto}\r\n                                                    value={pharmacyOrder.duration}\r\n                                                />\r\n\r\n                                            </InputGroup>\r\n                                        </FormGroup>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                            <Label>Duration Unit</Label>\r\n                                            <InputGroup>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"durationUnit\"\r\n                                                    id=\"durationUnit\"\r\n                                                    onChange={handleInputChangePharmacyOrderDto}\r\n                                                    value={pharmacyOrder.durationUnit}\r\n                                                >\r\n                                                    <option value={\"\"}></option>\r\n                                                    {durationUnitsRows}\r\n                                                </Input>\r\n                                            </InputGroup>\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"row\">\r\n                                    <div className=\"form-group mb-3\">\r\n                                        <FormGroup>\r\n                                            <Label>Other Instructions</Label>\r\n                                            <InputGroup>\r\n                                                <Input\r\n                                                    type=\"textarea\"\r\n                                                    name=\"comments\"\r\n                                                    id=\"comments\"\r\n                                                    onChange={handleInputChangePharmacyOrderDto}\r\n                                                    value={pharmacyOrder.comments}\r\n                                                />\r\n\r\n                                            </InputGroup>\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n\r\n                                {saving ? <Spinner /> : \"\"}\r\n                                <br />\r\n\r\n                                <MatButton\r\n                                    type=\"submit\"\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    className={classes.button}\r\n                                    startIcon={<SaveIcon />}\r\n                                    onClick={handleSubmit}\r\n                                >\r\n                                    {!saving ? (\r\n                                        <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                    ) : (\r\n                                        <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                    )}\r\n                                </MatButton>\r\n\r\n                                <MatButton\r\n                                    variant=\"contained\"\r\n                                    className={classes.button}\r\n                                    startIcon={<CancelIcon />}\r\n                                    onClick={props.toggle}\r\n                                >\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\r\n                                </MatButton>\r\n\r\n                            </form>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddPharmacyOrder;\r\n","import React, {Fragment, useState, useCallback, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input, InputGroup,InputGroupText} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport {token, url as baseUrl, apiUrl as apiUrl } from \"../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport {format} from \"date-fns\";\r\n\r\nimport 'react-summernote/dist/react-summernote.css'; // import styles\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}));\r\n\r\nconst EditPharmacyOrder = (props) => {\r\n    const patientObj = props.patientObj;\r\n    const pharmacyOrder = props.editPharmacyOrderValue;\r\n    const [saving, setSaving] = useState(false);\r\n    const classes = useStyles();\r\n    const [drugs, setDrugs] = useState([]);\r\n    const [dosageUnits, setDosageUnits] = useState([]);\r\n    const [durationUnits, setDurationUnits] = useState([]);\r\n\r\n    const [pharmacyOrderEdit, setPharmacyOrderEdit] = useState({\r\n       encounterDateTime: \"\",\r\n       drugName: \"\",\r\n       dosageStrength: \"\",\r\n       dosageStrengthUnit: \"\",\r\n       dosageFrequency: \"\",\r\n       startDate: \"\",\r\n       duration: \"\",\r\n       durationUnit: \"\",\r\n       comments: \"\",\r\n       patientId: patientObj.id,\r\n       orderedBy: \"\",\r\n       dateTimePrescribed: \"\",\r\n       visitId: patientObj.visitId\r\n   });\r\n\r\n    const handleInputChangePharmacyOrderDto = e => {\r\n        console.log(e)\r\n        setPharmacyOrderEdit({...pharmacyOrderEdit, [e.target.name]: e.target.value});\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        try {\r\n            e.preventDefault();\r\n            setSaving(true);\r\n\r\n            console.log(pharmacyOrder)\r\n\r\n//            axios.put(`${apiUrl}drug-orders/${pharmacyOrder.id}`, pharmacyOrder,\r\n//            { headers: {\"Authorization\" : `Bearer ${token}`}}).then(resp => {\r\n//                console.log(\"drug updated successfully\", resp );\r\n//                 toast.success(\"Successfully Saved drug order!\", {\r\n//                    position: toast.POSITION.TOP_RIGHT\r\n//                });\r\n//            });\r\n//\r\n\r\n            setSaving(false);\r\n            props.toggle()\r\n        } catch (e) {\r\n            toast.error(\"An error occurred while saving drug prescription\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n    };\r\n\r\n    const loadDosageUnits = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/DOSE_STRENGTH_UNIT`, { headers: {\"Authorization\" : `Bearer ${token}`}});\r\n            setDosageUnits(response.data);\r\n        } catch (e) {\r\n            toast.error(\"An error occurred while fetching DOSE STRENGTH UNIT\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    const loadDurationUnits = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/AGE_UNIT`, { headers: {\"Authorization\" : `Bearer ${token}`}});\r\n            setDurationUnits(response.data);\r\n        } catch (e) {\r\n            toast.error(\"An error occurred while fetching DOSE STRENGTH UNIT\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    const loadPharmacyDrugs = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${apiUrl}drugs`, { headers: {\"Authorization\" : `Bearer ${token}`}});\r\n            //console.log(\"drugs\", response.data[0].id)\r\n            if (response.data[0].id > 0) {\r\n                 setDrugs(response.data);\r\n            }\r\n        } catch (e) {\r\n            toast.error(\"An error occurred while fetching drugs\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        loadPharmacyDrugs();\r\n        loadDosageUnits();\r\n        loadDurationUnits();\r\n    }, [loadPharmacyDrugs, loadDosageUnits, loadDurationUnits]);\r\n\r\n    let drugRows = null;\r\n    let dosageUnitsRows = null;\r\n    let durationUnitsRows = null;\r\n    if (drugs && drugs.length > 0) {\r\n        //console.log(\"drugs\", drugs);\r\n        drugRows = drugs.map((drug, index) => (\r\n            <option key={drug.name} value={drug.name}>{drug.name}</option>\r\n        ));\r\n    }\r\n    if (dosageUnits && dosageUnits.length > 0) {\r\n        dosageUnitsRows = dosageUnits.map((dosageUnit, index) => (\r\n            <option key={dosageUnit.display} value={dosageUnit.display}>{dosageUnit.display}</option>\r\n        ));\r\n    }\r\n    if (durationUnits && durationUnits.length > 0) {\r\n        durationUnitsRows = durationUnits.map((durationUnit, index) => (\r\n            <option key={durationUnit.display} value={durationUnit.display}>{durationUnit.display}</option>\r\n        ));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n                <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                    Patient Drug Prescription\r\n                    <Button\r\n                        variant=\"\"\r\n                        className=\"btn-close\"\r\n                        onClick={props.toggle}\r\n                    ></Button>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Card >\r\n                        <CardBody>\r\n                            <form>\r\n                                <div className=\"row\">\r\n                                    <div className=\"form-group  mb-3\">\r\n                                        <FormGroup>\r\n                                            <Label>Encounter Date</Label>\r\n                                            <InputGroup>\r\n                                                <Input\r\n                                                    type=\"date\"\r\n                                                    name=\"encounterDateTime\"\r\n                                                    id=\"encounterDateTime\"\r\n                                                    onChange={handleInputChangePharmacyOrderDto}\r\n                                                    value={pharmacyOrder.encounterDateTime.substring(0,10)}\r\n                                                />\r\n                                            </InputGroup>\r\n\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"row\">\r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                            <Label>Select Drugs</Label>\r\n                                            <InputGroup>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"drugName\"\r\n                                                    id=\"drugName\"\r\n                                                    onChange={handleInputChangePharmacyOrderDto}\r\n                                                    value={pharmacyOrder.drugName}\r\n                                                >\r\n                                                    <option value={\"\"}></option>\r\n                                                    {drugRows}\r\n                                                </Input>\r\n                                            </InputGroup>\r\n                                        </FormGroup>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                            <Label>Dosage Strength</Label>\r\n                                            <InputGroup>\r\n                                                <Input\r\n                                                    type=\"text\"\r\n                                                    name=\"dosageStrength\"\r\n                                                    id=\"dosageStrength\"\r\n                                                    onChange={handleInputChangePharmacyOrderDto}\r\n                                                    value={pharmacyOrder.dosageStrength}\r\n                                                />\r\n\r\n                                            </InputGroup>\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                            <Label>Dosage Unit</Label>\r\n                                            <InputGroup>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"dosageStrengthUnit\"\r\n                                                    id=\"dosageStrengthUnit\"\r\n                                                    onChange={handleInputChangePharmacyOrderDto}\r\n                                                    value={pharmacyOrder.dosageStrengthUnit}\r\n                                                >\r\n                                                    <option value={\"\"}></option>\r\n                                                    {dosageUnitsRows}\r\n                                                </Input>\r\n                                            </InputGroup>\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"row\">\r\n                                    <div className=\"form-group mb-3\">\r\n                                        <FormGroup>\r\n                                            <Label>Drug Brand Name</Label>\r\n                                            <InputGroup>\r\n                                                <Input\r\n                                                    type=\"text\"\r\n                                                    name=\"brand\"\r\n                                                    id=\"brand\"\r\n                                                    onChange={handleInputChangePharmacyOrderDto}\r\n                                                    value={pharmacyOrder.brand}\r\n                                                />\r\n\r\n                                            </InputGroup>\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"row\">\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                            <Label>Dose Frequency</Label>\r\n                                            <InputGroup>\r\n                                                <Input\r\n                                                    type=\"text\"\r\n                                                    name=\"dosageFrequency\"\r\n                                                    id=\"dosageFrequency\"\r\n                                                    onChange={handleInputChangePharmacyOrderDto}\r\n                                                    value={pharmacyOrder.dosageFrequency}\r\n                                                />\r\n\r\n                                            </InputGroup>\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                            <Label>Start Date</Label>\r\n                                            <InputGroup>\r\n                                                <Input\r\n                                                    type=\"date\"\r\n                                                    name=\"startDate\"\r\n                                                    id=\"startDate\"\r\n                                                    onChange={handleInputChangePharmacyOrderDto}\r\n                                                    value={pharmacyOrder.startDate}\r\n                                                />\r\n                                            </InputGroup>\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                            <Label>Duration</Label>\r\n                                            <InputGroup>\r\n                                                <Input\r\n                                                    type=\"text\"\r\n                                                    name=\"duration\"\r\n                                                    id=\"duration\"\r\n                                                    onChange={handleInputChangePharmacyOrderDto}\r\n                                                    value={pharmacyOrder.duration}\r\n                                                />\r\n\r\n                                            </InputGroup>\r\n                                        </FormGroup>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                            <Label>Duration Unit</Label>\r\n                                            <InputGroup>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"durationUnit\"\r\n                                                    id=\"durationUnit\"\r\n                                                    onChange={handleInputChangePharmacyOrderDto}\r\n                                                    value={pharmacyOrder.durationUnit}\r\n                                                >\r\n                                                    <option value={\"\"}></option>\r\n                                                    {durationUnitsRows}\r\n                                                </Input>\r\n                                            </InputGroup>\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"row\">\r\n                                    <div className=\"form-group mb-3\">\r\n                                        <FormGroup>\r\n                                            <Label>Other Instructions</Label>\r\n                                            <InputGroup>\r\n                                                <Input\r\n                                                    type=\"textarea\"\r\n                                                    name=\"comments\"\r\n                                                    id=\"comments\"\r\n                                                    onChange={handleInputChangePharmacyOrderDto}\r\n                                                    value={pharmacyOrder.comments}\r\n                                                />\r\n\r\n                                            </InputGroup>\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n\r\n                                {saving ? <Spinner /> : \"\"}\r\n                                <br />\r\n\r\n                               {/* <MatButton\r\n                                    type=\"submit\"\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    className={classes.button}\r\n                                    startIcon={<SaveIcon />}\r\n                                    onClick={handleSubmit}\r\n                                >\r\n                                    {!saving ? (\r\n                                        <span style={{ textTransform: \"capitalize\" }}>Update</span>\r\n                                    ) : (\r\n                                        <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                    )}\r\n                                </MatButton>*/}\r\n\r\n                                <MatButton\r\n                                    variant=\"contained\"\r\n                                    className={classes.button}\r\n                                    startIcon={<CancelIcon />}\r\n                                    onClick={props.toggle}\r\n                                >\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\r\n                                </MatButton>\r\n\r\n                            </form>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditPharmacyOrder;\r\n","import React, {Fragment, useState, useCallback, useEffect } from \"react\";\r\nimport { KeyboardDateTimePicker, MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport axios from \"axios\";\r\nimport { toast } from 'react-toastify';\r\nimport {token, url as baseUrl, apiUrl as apiUrl } from \"../../../api\";\r\nimport { Grid, Segment, Label, Icon, List,Button, Card, Feed, Input, Radio } from 'semantic-ui-react';\r\n// Page titie\r\nimport {  Checkbox, Table } from 'semantic-ui-react';\r\nimport {format} from \"date-fns\";\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport ButtonMui from \"@material-ui/core/Button\";\r\nimport AddPharmacyOrder from './AddPharmacyOrder';\r\nimport EditPharmacyOrder from './EditPharmacyOrder';\r\n\r\nconst Widget = (props) => {\r\n    const patientObj = props.patientObj ? props.patientObj : {}\r\n    //console.log(\"po\", patientObj)\r\n    const [isLabEnabled, setIsLabEnabled] = useState(false);\r\n    const [isPharmacyEnabled, setIsPharmacyEnabled] = useState(false);\r\n    const [hasAllergies, setHasAllergies] = useState(false);\r\n    const [pharmacyModal, setPharmacyModal] = useState(false);\r\n    const [pharmacyOrderModal, setPharmacyOrderModal] = useState(false);\r\n    const [latestVitals, setLatestVitals] = useState([]);\r\n    const [previousConsultation, setPreviousConsultation] = useState([]);\r\n    const [encounterDate, setEncounterDate] = useState(new Date());\r\n    const { handleSubmit, control, getValues, setError, setValue } = useForm();\r\n    const [inputFields, setInputFields] = useState([\r\n        { complaint: '', onsetDate: '', severity: 0, dateResolved: '' }\r\n    ]);\r\n    const [inputFieldsDiagnosis, setInputFieldsDiagnosis] = useState([\r\n        { certainty: '', diagnosis: '', diagnosisOrder: 0 }\r\n    ]);\r\n\r\n    const [inputFieldsLab, setInputFieldsLab] = useState([\r\n            { encounterDate: format(new Date(), 'yyyy-MM-dd'), labOrder: '',\r\n            labTest: '', priority: '', status: '' }\r\n        ]);\r\n\r\n    const history = useHistory();\r\n    const toggle = () => setPharmacyModal(!pharmacyModal);\r\n    const toggleOrder = () => setPharmacyOrderModal(!pharmacyOrderModal);\r\n    const [pharmacyOrder, setPharmacyOrder] = useState([]);\r\n    const [editPharmacyOrderValue, setEditPharmacyOrderValue] = useState({\r\n        encounterDateTime: \"\",\r\n        drugName: \"\",\r\n        dosageStrength: \"\",\r\n        dosageStrengthUnit: \"\",\r\n        dosageFrequency: \"\",\r\n        startDate: \"\",\r\n        duration: \"\",\r\n        durationUnit: \"\",\r\n        comments: \"\",\r\n        patientId: patientObj.id,\r\n        orderedBy: \"\",\r\n        dateTimePrescribed: \"\",\r\n        visitId: patientObj.visitId\r\n    });\r\n\r\n    const pharmacy_by_visitId = useCallback(async () => {\r\n            try {\r\n                const response = await axios.get(`${apiUrl}drug-orders/visits/${patientObj.visitId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}});\r\n\r\n                console.log(\"red\",response.data)\r\n\r\n                if (typeof response.data === 'string') {\r\n                    setPharmacyOrder([]);\r\n                }else {\r\n                    setPharmacyOrder(response.data);\r\n                }\r\n\r\n\r\n            } catch (e) {\r\n                toast.error(\"An error occurred while fetching pharmacy data\", {\r\n                    position: toast.POSITION.TOP_RIGHT\r\n                });\r\n            }\r\n        }, []);\r\n\r\n    const onSubmit = async (data) => {\r\n        const diagnosisList = [];\r\n        const presentingComplaints = [];\r\n        const labTests = [];\r\n\r\n        for (const inputFieldsDiag of inputFieldsDiagnosis) {\r\n            if (inputFieldsDiag.diagnosis) {\r\n                diagnosisList.push(inputFieldsDiag);\r\n            }\r\n        }\r\n\r\n        for (const inputField of inputFields) {\r\n            if (inputField.complaint) {\r\n                presentingComplaints.push(inputField);\r\n            }\r\n        }\r\n\r\n        for (const inputField of inputFieldsLab) {\r\n\r\n            if (inputField.encounterDate) {\r\n                labTests.push({\r\n                \"description\": inputField.labOrder.slice(2, inputField.labOrder.length),\r\n                \"id\": 0,\r\n                \"labTestGroupId\": inputField.labOrder.slice(0, 1),\r\n                \"labTestId\": inputField.labTest,\r\n                \"labTestOrderStatus\": inputField.status,\r\n                \"orderPriority\": inputField.priority,\r\n//                \"unitMeasurement\": \"\",\r\n//                \"viralLoadIndication\": 0\r\n              });\r\n            }\r\n        }\r\n\r\n        try {\r\n            const InData = {\r\n                \"diagnosisList\": diagnosisList,\r\n                \"encounterDate\": format(new Date(data.encounterDate.toString()), 'yyyy-MM-dd'),\r\n                \"id\": 0,\r\n                \"patientId\": patientObj.id,\r\n                \"presentingComplaints\": presentingComplaints,\r\n                \"visitId\": patientObj.visitId,\r\n                \"visitNotes\": data.visitNote\r\n            };\r\n\r\n            const labOrder = {\r\n                  \"orderDate\": format(new Date(data.encounterDate.toString()), 'yyyy-MM-dd'),\r\n                  \"orderTime\": new Date().toLocaleTimeString('en-US',{hour12: false}),\r\n                  \"patientId\": patientObj.id,\r\n                  \"tests\": labTests,\r\n                  \"visitId\": patientObj.visitId\r\n            }\r\n            //console.log('labOrder', labOrder)\r\n            await axios.post(`${baseUrl}consultations`, InData,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }).then(( resp ) =>{\r\n                console.log(\"diagnosis saved\", resp)\r\n\r\n                axios.post(`${baseUrl}laboratory/orders`, labOrder,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }).then(( resp ) =>{\r\n                    console.log(\"lab served\", resp)\r\n\r\n                    toast.success(\"Successfully Saved Consultation !\", {\r\n                        position: toast.POSITION.TOP_RIGHT\r\n                    });\r\n\r\n                    history.push('/');\r\n                }).catch((err) => {\r\n                     toast.error(`An error occured while saving laboratory test! ${err}`, {\r\n                        position: toast.POSITION.TOP_RIGHT\r\n                    });\r\n                });\r\n\r\n            });\r\n\r\n        } catch (e) {\r\n            toast.error(\"An error occured while saving Consultation !\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n    };\r\n    const OnError = (errors) => {\r\n        console.error(errors);\r\n        toast.error(\"Visit Note Is Required\", {\r\n            position: toast.POSITION.TOP_RIGHT\r\n        });\r\n    };\r\n\r\n    const [labGroups, setLabGroups] = useState([]);\r\n    const [labTests, setLabTests] = useState([]);\r\n    const [priorities, setPriorities] = useState([]);\r\n\r\n    const loadLabCheck = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}modules/check?moduleName=lab`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setIsLabEnabled(response.data);\r\n        } catch (e) {\r\n            toast.error(\"An error occurred while fetching lab\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    const loadPharmacyCheck = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}modules/check?moduleName=pharmacy`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setIsPharmacyEnabled(response.data);\r\n        } catch (e) {\r\n            toast.error(\"An error occurred while fetching pharmacy\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    const loadLatestVitals = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}patient/vital-sign/person/${patientObj.id}`, { headers: {\"Authorization\" : `Bearer ${token}`}});\r\n            setLatestVitals(response.data);\r\n        } catch (e) {\r\n            toast.error(\"An error occurred while fetching vitals\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    const loadPreviousConsultation = useCallback(async () => {\r\n        try {\r\n            //const response = await axios.get(`${baseUrl}consultations/consultations-by-patient-id/${patientObj.id}`, { headers: {\"Authorization\" : `Bearer ${token}`}});\r\n            setPreviousConsultation([]);\r\n        } catch (e) {\r\n            toast.error(\"An error occurred while fetching previous consultation\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    const loadLabGroup = useCallback(async () => {\r\n            try {\r\n                const response = await axios.get(`${baseUrl}laboratory/labtestgroups`, { headers: {\"Authorization\" : `Bearer ${token}`}});\r\n                setLabGroups(response.data);\r\n            } catch (e) {\r\n                toast.error(\"An error occurred while fetching lap group data\", {\r\n                    position: toast.POSITION.TOP_RIGHT\r\n                });\r\n            }\r\n        }, []);\r\n\r\n    const priority = useCallback(async () => {\r\n            try {\r\n                const response = await axios.get(`${baseUrl}application-codesets/v2/TEST_ORDER_PRIORITY`, { headers: {\"Authorization\" : `Bearer ${token}`}});\r\n                //console.log(\"priority\", response.data);\r\n                setPriorities(response.data);\r\n            } catch (e) {\r\n                toast.error(\"An error occurred while fetching priority data\", {\r\n                    position: toast.POSITION.TOP_RIGHT\r\n                });\r\n            }\r\n        }, []);\r\n\r\n    useEffect(() => {\r\n        loadPharmacyCheck();\r\n        loadLabCheck();\r\n        loadLatestVitals();\r\n        loadPreviousConsultation();\r\n        loadLabGroup();\r\n        priority();\r\n        pharmacy_by_visitId();\r\n    }, [loadPharmacyCheck, loadLabCheck, loadLatestVitals,\r\n    loadPreviousConsultation, loadLabGroup, priority, pharmacy_by_visitId]);\r\n\r\n    const handleAddFields = () => {\r\n        const values = [...inputFields];\r\n        values.push({ complaint: '', onsetDate: '', severity: 0, dateResolved: '' });\r\n        setInputFields(values);\r\n    };\r\n\r\n    const handleAddDiagFields = () => {\r\n        const values = [...inputFieldsDiagnosis];\r\n        values.push({ certainty: '', diagnosis: '', diagnosisOrder: 0 });\r\n        setInputFieldsDiagnosis(values);\r\n    };\r\n\r\n    const handleAddFieldsLab = () => {\r\n        const values = [...inputFieldsLab];\r\n        values.push({ encounterDate: format(new Date(), 'yyyy-MM-dd'), labOrder: '', labTest: '', priority: '', status: '' });\r\n        setInputFieldsLab(values);\r\n    };\r\n\r\n    const handleInputChange = (index, event) => {\r\n        const values = [...inputFields];\r\n        if (event.target.name === \"complaint\") {\r\n            values[index].complaint = event.target.value;\r\n        } else if (event.target.name === \"onsetDate\") {\r\n            values[index].onsetDate = event.target.value;\r\n        } else if (event.target.name === \"severity\") {\r\n            values[index].severity = event.target.value;\r\n        } else if (event.target.name === \"dateResolved\") {\r\n            values[index].dateResolved = event.target.value;\r\n        }\r\n\r\n        setInputFields(values);\r\n    };\r\n\r\n    const handleInputDiagChange = (index, event) => {\r\n        const values = [...inputFieldsDiagnosis];\r\n        if (event.target.name === \"diagnosis\") {\r\n            values[index].diagnosis = event.target.value;\r\n        } else if (event.target.name === \"certainty\") {\r\n            values[index].certainty = event.target.value;\r\n        } else if (event.target.name === \"diagnosisOrder\") {\r\n            values[index].diagnosisOrder = event.target.value;\r\n        }\r\n\r\n        setInputFieldsDiagnosis(values);\r\n    };\r\n\r\n    const labCascade = id => {\r\n        labGroups.forEach(function (x) {\r\n              if ( x.id == id) {\r\n                setLabTests(x.labTests)\r\n            }\r\n        });\r\n    }\r\n\r\n    const handleInputLabChange = (index, event) => {\r\n            const values = [...inputFieldsLab];\r\n            if (event.target.name === \"labOrder\") {\r\n                const str = event.target.value;\r\n                values[index].labOrder = str;\r\n                labCascade(str.slice(0,1))\r\n            }\r\n            else if (event.target.name === \"labTest\") {\r\n                values[index].labTest = event.target.value;\r\n            } else if (event.target.name === \"priority\") {\r\n                values[index].priority = event.target.value;\r\n            }\r\n            else if (event.target.name === \"status\") {\r\n                values[index].status = event.target.value;\r\n            }\r\n\r\n            setInputFieldsLab(values);\r\n        };\r\n\r\n    const handleAddPharmacyOrder = () => {\r\n        setPharmacyModal(!pharmacyModal);\r\n    };\r\n\r\n     const handleEditPharmacyOrder = (pharmacy) => {\r\n            console.log(pharmacy);\r\n            setEditPharmacyOrderValue(pharmacy);\r\n            setPharmacyOrderModal(!pharmacyOrderModal);\r\n     };\r\n\r\n     const handleDelete = async (id) => {\r\n        console.log(id)\r\n           await axios.delete(`${apiUrl}drug-orders/${id}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}}).then(resp => {\r\n            console.log(\"drug order deleted\");\r\n             toast.success(\"Successfully deleted drug order!\", {\r\n                    position: toast.POSITION.TOP_RIGHT\r\n                });\r\n            });\r\n     }\r\n\r\n    return (\r\n        <Grid columns='equal'>\r\n            <Grid.Column>\r\n                { latestVitals && latestVitals.length > 0 &&\r\n                    <Segment>\r\n                        <Label as='a' color='blue' ribbon>\r\n                            Recent Vitals\r\n                        </Label>\r\n                        <br/>\r\n                        <List celled>\r\n                            <List.Item>Pulse <span className=\"float-end\"><b>{latestVitals[latestVitals.length - 1].pulse}bpm</b></span></List.Item>\r\n                            <List.Item>Respiratory Rate <span className=\"float-end\"><b>{latestVitals[latestVitals.length - 1].respiratoryRate}bpm</b></span></List.Item>\r\n                            <List.Item>Temperature <span className=\"float-end\"><b>{latestVitals[latestVitals.length - 1].temperature}<sup>0</sup>C</b></span></List.Item>\r\n                            <List.Item>Blood Presure <span  className=\"float-end\"><b>{latestVitals[latestVitals.length - 1].systolic}/{latestVitals[latestVitals.length - 1].diastolic}</b></span></List.Item>\r\n                            <List.Item>Height <span  className=\"float-end\"><b>{latestVitals[latestVitals.length - 1].height}m</b></span></List.Item>\r\n                            <List.Item>Weight <span  className=\"float-end\"><b>{latestVitals[latestVitals.length - 1].bodyWeight}kg</b></span></List.Item>\r\n                        </List>\r\n                    </Segment>\r\n                }\r\n\r\n                { previousConsultation &&\r\n                    <Segment>\r\n                        <Label as='a' color='black' ribbon>\r\n                            Conditions\r\n                        </Label>\r\n                        <br/>\r\n\r\n                        { previousConsultation.map((consultation, i) => (\r\n                            <div>\r\n                                {consultation.diagnosisList.map((diagnosis, j)=> (\r\n                                    <Label as='a'  color='white'  size=\"mini\" pointing>\r\n                                        {diagnosis.diagnosis}\r\n                                    </Label>\r\n                                ))}\r\n                            </div>\r\n                        ))}\r\n                    </Segment>\r\n                }\r\n\r\n                { hasAllergies &&\r\n                    <Segment>\r\n                        <Label as='a' color='red' ribbon>\r\n                            Allergies\r\n                        </Label>\r\n                        <br/><br/>\r\n\r\n                        <Label.Group color='blue'>\r\n                            <Label as='a'  size=\"mini\">dust</Label>\r\n                            <Label as='a'  size=\"mini\">smoke</Label>\r\n                        </Label.Group>\r\n                    </Segment>\r\n                }\r\n            </Grid.Column>\r\n\r\n            <Grid.Column width={9}>\r\n                <form onSubmit={handleSubmit(onSubmit, OnError)}>\r\n                    <Label as='a' color='black' ribbon>\r\n                        <b>Physical Examination</b>\r\n                    </Label>\r\n\r\n                    <Segment>\r\n                        <div className=\"input-group input-group-sm mb-3\">\r\n                            <span className=\"input-group-text\">Encounter Date</span>\r\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                <Controller\r\n                                    name=\"encounterDate\"\r\n                                    control={control}\r\n                                    defaultValue={encounterDate}\r\n                                    rules={{ required: true }}\r\n                                    render={({ field: { ref, ...rest }}) => (\r\n                                        <KeyboardDateTimePicker\r\n                                            disableFuture\r\n                                            format=\"dd/MM/yyyy hh:mm a\"\r\n                                            value={encounterDate}\r\n                                            onChange={setEncounterDate}\r\n                                            className=\"form-control\"\r\n                                            invalidDateMessage={\"Encounter date is required\"}\r\n                                            {...rest}\r\n                                        />\r\n                                    )}\r\n                                    />\r\n                            </MuiPickersUtilsProvider>\r\n                        </div>\r\n\r\n                        <div className=\"input-group input-group-sm \" >\r\n                            <span className=\"input-group-text\">Visit Note</span>\r\n                            <Controller\r\n                                name=\"visitNote\"\r\n                                control={control}\r\n                                rules={{ required: true }}\r\n                                render={({ field: { ref, ...rest }}) => (\r\n                                    <textarea  style={{ minHeight: 100 }} className=\"form-control\" {...rest} ></textarea>\r\n                                )}\r\n                            />\r\n                        </div>\r\n                        <br/>\r\n                        <Label as='a' color='red' ribbon>\r\n                            Presenting Complaints\r\n                        </Label>\r\n                        <Table color=\"red\" celled>\r\n                            <Table.Header>\r\n                                <Table.Row>\r\n                                    <Table.Cell style={{ fontWeight: 'bold'}}>Complaints</Table.Cell>\r\n                                    <Table.Cell style={{ fontWeight: 'bold'}}>Onset Date</Table.Cell>\r\n                                    <Table.Cell style={{ fontWeight: 'bold'}}>Severity</Table.Cell>\r\n                                    <Table.Cell style={{ fontWeight: 'bold'}}>Date Resolved</Table.Cell>\r\n                                </Table.Row>\r\n                            </Table.Header>\r\n\r\n                            <Table.Body>\r\n                                    {inputFields.map((inputField, index) => (\r\n                                        <Fragment key={`${inputField}~${index}`}>\r\n                                            <Table.Row>\r\n                                            <Table.Cell>\r\n                                                <Input\r\n                                                    id=\"complaint\"\r\n                                                    name=\"complaint\"\r\n                                                    type=\"text\"\r\n                                                    fluid\r\n                                                    placeholder='Enter Presenting Complaints'\r\n                                                    value={inputField.complaint}\r\n                                                    onChange={event => handleInputChange(index, event)}\r\n                                                />\r\n                                            </Table.Cell>\r\n                                            <Table.Cell>\r\n                                                <Input\r\n                                                    id=\"onsetDate\"\r\n                                                    name=\"onsetDate\"\r\n                                                    type=\"date\"\r\n                                                    fluid\r\n                                                    placeholder='Onset Date'\r\n                                                    value={inputField.onsetDate}\r\n                                                    onChange={event => handleInputChange(index, event)}\r\n                                                />\r\n                                            </Table.Cell>\r\n                                            <Table.Cell>\r\n                                                <select\r\n                                                    class=\"ui fluid selection dropdown\"\r\n                                                    value={inputField.severity}\r\n                                                    onChange={event => handleInputChange(index, event)}\r\n                                                    name=\"severity\"\r\n                                                    id=\"severity\">\r\n                                                    <option>Select</option>\r\n                                                    <option value=\"0\">0</option>\r\n                                                    <option value=\"1\">1</option>\r\n                                                    <option value=\"2\">2</option>\r\n                                                    <option value=\"3\">3</option>\r\n                                                    <option value=\"4\">4</option>\r\n                                                    <option value=\"5\">5</option>\r\n                                                    <option value=\"6\">6</option>\r\n                                                    <option value=\"7\">7</option>\r\n                                                    <option value=\"8\">8</option>\r\n                                                    <option value=\"9\">9</option>\r\n                                                    <option value=\"10\">10</option>\r\n                                                </select>\r\n                                            </Table.Cell>\r\n                                            <Table.Cell>\r\n                                                <Input\r\n                                                    id=\"dateResolved\"\r\n                                                    name=\"dateResolved\"\r\n                                                    type=\"date\"\r\n                                                    fluid\r\n                                                    placeholder='Date Resolved'\r\n                                                    value={inputField.dateResolved}\r\n                                                    onChange={event => handleInputChange(index, event)}\r\n                                                />\r\n                                            </Table.Cell>\r\n                                            </Table.Row>\r\n                                        </Fragment>\r\n                                    ))}\r\n\r\n                            </Table.Body>\r\n\r\n                            <Table.Footer>\r\n                                <Table.Row>\r\n                                    <Table.HeaderCell>\r\n                                        <Button color=\"blue\" size=\"tiny\" type=\"button\" onClick={() => handleAddFields()}>\r\n                                            <Icon name='plus' /> Add More\r\n                                        </Button>\r\n                                    </Table.HeaderCell>\r\n                                </Table.Row>\r\n                            </Table.Footer>\r\n                        </Table>\r\n                        <br/>\r\n                        <Label as='a' color='pink' ribbon>\r\n                            Clinical Diagnosis\r\n                        </Label>\r\n                        <Table color=\"pink\" celled>\r\n                            <Table.Header>\r\n                                <Table.Row>\r\n                                    <Table.Cell style={{ fontWeight: 'bold'}}>Condition</Table.Cell>\r\n                                    <Table.Cell style={{ fontWeight: 'bold'}}>Order</Table.Cell>\r\n                                    <Table.Cell style={{ fontWeight: 'bold'}}>Certainty</Table.Cell>\r\n                                    <Table.Cell style={{ fontWeight: 'bold'}}></Table.Cell>\r\n                                </Table.Row>\r\n                            </Table.Header>\r\n\r\n                            <Table.Body>\r\n                                {inputFieldsDiagnosis.map((diagInputField, diagIndex) => (\r\n                                    <Fragment key={`${diagInputField}~${diagIndex}`}>\r\n                                        <Table.Row>\r\n                                            <Table.Cell>\r\n                                                <Input\r\n                                                    id=\"diagnosis\"\r\n                                                    name=\"diagnosis\"\r\n                                                    type=\"text\"\r\n                                                    fluid\r\n                                                    placeholder='Condition'\r\n                                                    value={diagInputField.diagnosis}\r\n                                                    onChange={event => handleInputDiagChange(diagIndex, event)}\r\n                                                />\r\n                                            </Table.Cell>\r\n                                            <Table.Cell>\r\n                                                <select\r\n                                                    className=\"ui fluid selection dropdown\"\r\n                                                    value={diagInputField.diagnosisOrder}\r\n                                                    onChange={event => handleInputDiagChange(diagIndex, event)}\r\n                                                    name=\"diagnosisOrder\"\r\n                                                    id=\"diagnosisOrder\">\r\n                                                    <option>Select</option>\r\n                                                    <option value=\"1\">Primary</option>\r\n                                                    <option value=\"2\">Secondary</option>\r\n                                                </select>\r\n                                            </Table.Cell>\r\n                                            <Table.Cell>\r\n                                                <select\r\n                                                    className=\"ui fluid selection dropdown\"\r\n                                                    value={diagInputField.certainty}\r\n                                                    onChange={event => handleInputDiagChange(diagIndex, event)}\r\n                                                    name=\"certainty\"\r\n                                                    id=\"certainty\">\r\n                                                    <option>Select</option>\r\n                                                    <option value=\"1\">Presumed</option>\r\n                                                    <option value=\"2\">Confirmed</option>\r\n                                                </select>\r\n                                            </Table.Cell>\r\n                                            <Table.Cell></Table.Cell>\r\n                                        </Table.Row>\r\n                                    </Fragment>\r\n                                ))}\r\n                            </Table.Body>\r\n\r\n                            <Table.Footer>\r\n                                <Table.Row>\r\n                                    <Table.HeaderCell>\r\n\r\n                                        <Button color=\"blue\" size=\"tiny\" type=\"button\" onClick={() => handleAddDiagFields()}>\r\n                                            <Icon name='plus' /> Add More\r\n                                        </Button>\r\n                                    </Table.HeaderCell>\r\n\r\n                                </Table.Row>\r\n                            </Table.Footer>\r\n                        </Table>\r\n                        <br/>\r\n                        { isLabEnabled && <div>\r\n                            <Label as='a' color='teal' ribbon>\r\n                                Lab Test\r\n                            </Label>\r\n\r\n                            <Table color=\"teal\" celled>\r\n                                <Table.Header>\r\n                                    <Table.Row>\r\n                                        <Table.Cell style={{ fontWeight: 'bold'}}>Lab Test Group</Table.Cell>\r\n                                        <Table.Cell style={{ fontWeight: 'bold'}}>Lab Test</Table.Cell>\r\n                                        <Table.Cell style={{ fontWeight: 'bold'}}>Priority</Table.Cell>\r\n                                        <Table.Cell style={{ fontWeight: 'bold'}}>Status</Table.Cell>\r\n                                    </Table.Row>\r\n                                </Table.Header>\r\n\r\n                                <Table.Body>\r\n                                   {inputFieldsLab.map((labInputField, labIndex) => (\r\n                                        <Fragment key={`${labInputField}~${labIndex}`}>\r\n                                            <Table.Row>\r\n                                                <Table.Cell>\r\n                                                    <select\r\n                                                        className=\"ui fluid selection dropdown\"\r\n                                                        value={labInputField.labOrder}\r\n                                                        onChange={ e => handleInputLabChange(labIndex, e)}\r\n                                                        name=\"labOrder\"\r\n                                                        id=\"labOrder\">\r\n                                                        <option>Select</option>\r\n                                                        {\r\n                                                            labGroups.map((d)=> (\r\n                                                                <option key={d.id} value={`${d.id}-${d.groupName}`}>\r\n                                                                    {d.groupName}\r\n                                                                </option>\r\n                                                            ))\r\n                                                        }\r\n                                                    </select>\r\n\r\n                                                </Table.Cell>\r\n                                                <Table.Cell>\r\n                                                    <select\r\n                                                        className=\"ui fluid selection dropdown\"\r\n                                                        value={labInputField.labTest}\r\n                                                        onChange={e => handleInputLabChange(labIndex, e)}\r\n                                                        name=\"labTest\"\r\n                                                        id=\"labTest\">\r\n                                                        <option>Select</option>\r\n                                                             {\r\n                                                                labTests.map((d)=> (\r\n                                                                    <option key={d.id} value={d.id}>\r\n                                                                        {d.labTestName}\r\n                                                                    </option>\r\n                                                                ))\r\n                                                            }\r\n                                                    </select>\r\n\r\n                                                </Table.Cell>\r\n                                                <Table.Cell>\r\n                                                <select\r\n                                                    className=\"ui fluid selection dropdown\"\r\n                                                    value={labInputField.priority}\r\n                                                    onChange={e => handleInputLabChange(labIndex, e)}\r\n                                                    name=\"priority\"\r\n                                                    id=\"priority\">\r\n                                                    <option>Select</option>\r\n                                                       {\r\n                                                            priorities.map((d)=> (\r\n                                                                <option key={d.id} value={d.id}>\r\n                                                                    {d.display}\r\n                                                                </option>\r\n                                                            ))\r\n                                                        }\r\n                                                </select>\r\n\r\n                                                </Table.Cell>\r\n                                                <Table.Cell>\r\n                                                    <select\r\n                                                        className=\"ui fluid selection dropdown\"\r\n                                                        value={labInputField.status}\r\n                                                        onChange={e => handleInputLabChange(labIndex, e)}\r\n                                                        name=\"status\"\r\n                                                        id=\"status\">\r\n                                                        <option>Select</option>\r\n                                                        <option value=\"0\">Pending Collection</option>\r\n                                                       {/* <option value=\"1\">Sample Collected</option>\r\n                                                        <option value=\"2\">Sample Transferred</option>\r\n                                                        <option value=\"3\">Sample Verified</option>\r\n                                                        <option value=\"4\">Sample Rejected</option>\r\n                                                        <option value=\"5\">Result Available</option> */}\r\n                                                    </select>\r\n                                                </Table.Cell>\r\n                                            </Table.Row>\r\n                                        </Fragment>\r\n                                    ))}\r\n                                </Table.Body>\r\n\r\n                                <Table.Footer>\r\n                                    <Table.Row>\r\n                                        <Table.HeaderCell>\r\n\r\n                                            <Label as='a' color=\"blue\" size=\"tiny\" onClick={() => handleAddFieldsLab()}>\r\n                                                <Icon name='plus' /> Add Test\r\n                                            </Label>\r\n                                        </Table.HeaderCell>\r\n\r\n                                    </Table.Row>\r\n                                </Table.Footer>\r\n                            </Table>\r\n                        </div>}\r\n                        <br/>\r\n                        <Label as='a' color='purple' ribbon>\r\n                            Pharmacy Order\r\n                        </Label>\r\n                        <br/>\r\n                        <br/>\r\n                        <>\r\n                        {\r\n                           pharmacyOrder.length > 0 ? pharmacyOrder.map((pharmacy, i) => (\r\n                            <div className=\"page-header\" key={i}>\r\n                                  <p><b>{pharmacy.drugName}</b>\r\n                                  <br /> Start at {pharmacy.startDate} for {pharmacy.dosageFrequency} to be taken {pharmacy.duration} time(s) a day\r\n                                  <br />\r\n                                  Instructions: {pharmacy.comments}  <br />\r\n                                  Date Ordered: {pharmacy.dateTimePrescribed}</p>\r\n                                  <p>\r\n                                    <Label as='a' color=\"blue\" size=\"tiny\" onClick={() => handleEditPharmacyOrder(pharmacy)}>\r\n                                    <Icon name='eye' /> View</Label>\r\n                                    {\" \"}\r\n                                    <Label as='a' color=\"red\" size=\"tiny\" onClick={() => handleDelete(pharmacy.id)}>\r\n                                                                    <Icon name='delete' /> Delete</Label>\r\n                                  </p>\r\n                                  <br/>\r\n                            </div>\r\n                            )) :\r\n                            <p>No previous pharmacy record for this patient</p>\r\n                        }\r\n\r\n                        </>\r\n                        <br/>\r\n                        { isPharmacyEnabled &&\r\n                            <div>\r\n                                <ButtonMui\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    className=\"ms-2\"\r\n                                    onClick={() => handleAddPharmacyOrder()}\r\n                                >\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Add Pharmacy Order</span>\r\n                                </ButtonMui>\r\n                            </div>\r\n                        }\r\n                    </Segment>\r\n                    <Button type={\"submit\"} variant=\"contained\" color={\"primary\"}>Submit</Button>\r\n                </form>\r\n          </Grid.Column>\r\n          <Grid.Column>\r\n            <Segment>\r\n            <List>\r\n                  <List.Item>\r\n                      <Link\r\n                          to={{\r\n                              pathname: \"/patient-consultations-history\",\r\n                              state: { patientObj: patientObj  }\r\n                          }}>\r\n                          <Button icon labelPosition='right' color='green' fluid>\r\n                              <Icon name='eye' />\r\n                              View History\r\n                          </Button>\r\n                      </Link>\r\n                  </List.Item>\r\n                  <List.Item>\r\n                  <Button icon labelPosition='right' color='blue' fluid>\r\n                      <Icon name='calendar alternate' />\r\n                        Appointment \r\n                    </Button>\r\n                  </List.Item>\r\n            </List>\r\n                { previousConsultation &&\r\n                    <Card>\r\n                        <Card.Content>\r\n                            <b>Previous Clinical Notes</b>\r\n                        </Card.Content>\r\n                        <Card.Content>\r\n                            <Feed>\r\n                                { previousConsultation.map((consultation, i) => (\r\n                                    <div>\r\n                                        <Feed.Event>\r\n                                            <Feed.Content>\r\n                                                <Feed.Date content={consultation.encounterDate} />\r\n                                                <Feed.Summary>\r\n                                                    {consultation.visitNotes}\r\n                                                </Feed.Summary>\r\n                                            </Feed.Content>\r\n                                        </Feed.Event>\r\n                                        <hr/>\r\n                                    </div>\r\n                                )) }\r\n                            </Feed>\r\n                        </Card.Content>\r\n                    </Card>\r\n                }\r\n            </Segment>\r\n          </Grid.Column>\r\n            <AddPharmacyOrder toggle={toggle} patientObj={patientObj} showModal={pharmacyModal} />\r\n            <EditPharmacyOrder toggle={toggleOrder} patientObj={patientObj}\r\n             showModal={pharmacyOrderModal} editPharmacyOrderValue={editPharmacyOrderValue}/>\r\n        </Grid>\r\n    );\r\n  };\r\n\r\nexport default Widget;\r\n","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom'\r\nimport ButtonMui from \"@material-ui/core/Button\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport PatientCardDetail from './PatientCard'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {   Tab, Tabs, } from \"react-bootstrap\";\r\nimport RecentHistory from './../History/RecentHistory';\r\n\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\n\r\nfunction PatientCard(props) {\r\n    let history = useHistory();\r\n    const [key, setKey] = useState('home');\r\n    const { classes } = props;\r\n    const patientObj = history.location && history.location.state ? history.location.state.patientObj : {}\r\n\r\n    //console.log(\"p-details \",patientObj);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Card >\r\n        <CardContent>\r\n            <PatientCardDetail patientObj={patientObj}/>\r\n\r\n            <RecentHistory patientObj={patientObj} />\r\n         </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, { useEffect, useState, useCallback } from 'react';\r\nimport { useHistory, Link  } from \"react-router-dom\";\r\nimport MaterialTable, { MTableToolbar, cellStyle, headerStyle } from 'material-table';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport { Container, Button, Icon } from 'semantic-ui-react'\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport \"@reach/menu-button/styles.css\";\r\nimport ButtonMui from \"@material-ui/core/Button\";\r\nimport { toast } from 'react-toastify';\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}));\r\n\r\nconst PatientConsultationHistory = (props) => {\r\n    let history = useHistory();\r\n    const [patientList, setPatientList] = useState([]);\r\n    const patientObj = history.location && history.location.state ? history.location.state.patientObj : {};\r\n\r\n    ///GET LIST OF Patients\r\n    const patientConsultations = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}consultations/consultations-by-patient-id/${patientObj.id}`, {headers: {\"Authorization\": `Bearer ${token}`}});\r\n            setPatientList(response.data);\r\n        } catch (e) {\r\n            toast.error(\"An error occured while fetching consultation !\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        patientConsultations()\r\n    }, [patientConsultations]);\r\n\r\n    const formatDiagnosis = diagnosisList => {\r\n        return diagnosisList.map(obj => obj.diagnosis) + \" ,\";\r\n    };\r\n    const formatPresentingComplaints = presentingComplaintsList => {\r\n        return presentingComplaintsList.map(obj => obj.complaint) + \" ,\";\r\n    };\r\n\r\n    return (\r\n        <div>\r\n         <Container>\r\n                <br/><br/>\r\n                        <Link to={\"/\"} >\r\n                            <ButtonMui\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className=\" float-end ms-2\"\r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\" }}>Back</span>\r\n                            </ButtonMui>\r\n                        </Link>\r\n                        <br/><br/>\r\n\r\n                        <MaterialTable\r\n                            icons={tableIcons}\r\n                            title=\"Patient Consultations\"\r\n                            columns={[\r\n                                // { title: \" ID\", field: \"Id\" },\r\n                                {\r\n                                  title: \"Encounter Date\", field: \"date\",\r\n                                    cellStyle: {\r\n                                          backgroundColor: '#039be5',\r\n                                          color: '#FFF'\r\n                                        },\r\n                                        headerStyle: {\r\n                                          backgroundColor: '#039be5',\r\n                                        }\r\n                                },\r\n                                { title: \"Visit Notes\", field: \"visitNotes\", filtering: false },\r\n                                { title: \"Diagnosis List\", field: \"diagnosisList\", filtering: false },\r\n                                { title: \"Presenting Complaints\", field: \"presentingComplaints\", filtering: false },\r\n                                { title: \"Actions\", field: \"actions\", filtering: false },\r\n                            ]}\r\n                            data={ patientList.map((row) => ({\r\n                                //Id: manager.id,\r\n                                date:row.encounterDate,\r\n                                visitNotes:row.visitNotes,\r\n                                diagnosisList:formatDiagnosis(row.diagnosisList),\r\n                                presentingComplaints:formatPresentingComplaints(row.presentingComplaints),\r\n                                actions:\r\n                                    <div>\r\n                                        <Link\r\n                                            to={{\r\n                                                pathname: \"/patient-consultation\",\r\n                                                state: { patientObj: row  }\r\n                                            }}>\r\n                                             <Button\r\n                                                icon\r\n                                                inverted\r\n                                                color='blue'\r\n                                                className=\" float-end ms-2\"\r\n                                             >\r\n                                             <Icon name='eye' />\r\n                                            </Button>\r\n                                        </Link>\r\n                                    </div>\r\n\r\n                            }))}\r\n\r\n                            options={{\r\n                                headerStyle: {\r\n                                    backgroundColor: \"#01579b\",\r\n                                    color: \"#ccc\",\r\n                                },\r\n                                searchFieldStyle: {\r\n                                    width : '200%',\r\n                                    margingLeft: '250px',\r\n                                },\r\n                                filtering: false,\r\n                                exportButton: false,\r\n                                searchFieldAlignment: 'left',\r\n                                pageSizeOptions:[10,20,100],\r\n                                pageSize:10,\r\n                                debounceInterval: 400\r\n                            }}\r\n                        />\r\n         </Container>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PatientConsultationHistory;\r\n","import React, {Fragment, useState, useCallback, useEffect } from \"react\";\r\nimport { KeyboardDateTimePicker, MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport axios from \"axios\";\r\nimport { toast } from 'react-toastify';\r\nimport {token, url as baseUrl, apiUrl as apiUrl } from \"../../../api\";\r\nimport { Grid, Segment, Label, Icon, List,Button, Card, Feed, Input, Radio } from 'semantic-ui-react';\r\nimport {  Checkbox, Table } from 'semantic-ui-react';\r\nimport {format} from \"date-fns\";\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport ButtonMui from \"@material-ui/core/Button\";\r\n\r\nconst Widget = (props) => {\r\n    let history = useHistory();\r\n    const patientObj = history.location && history.location.state ? history.location.state.patientObj : {}\r\n    //console.log(\"pb\",patientObj)\r\n    const [patient, setPatient] = useState({});\r\n    const [isLabEnabled, setIsLabEnabled] = useState(false);\r\n    const [isPharmacyEnabled, setIsPharmacyEnabled] = useState(false);\r\n    const [hasAllergies, setHasAllergies] = useState(false);\r\n    const [pharmacyModal, setPharmacyModal] = useState(false);\r\n    const [latestVitals, setLatestVitals] = useState([]);\r\n    const [previousConsultation, setPreviousConsultation] = useState([]);\r\n    const [encounterDate, setEncounterDate] = useState(new Date());\r\n    const { handleSubmit, control, getValues, setError, setValue } = useForm();\r\n    const [inputFields, setInputFields] = useState(patientObj.presentingComplaints);\r\n    const [inputFieldsDiagnosis, setInputFieldsDiagnosis] = useState(patientObj.diagnosisList);\r\n    const [inputFieldsLab, setInputFieldsLab] = useState([\r\n            { encounterDate: format(new Date(), 'yyyy-MM-dd'), labOrder: '',\r\n            labTest: '', priority: '', status: '' }\r\n        ]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [drugs, setDrugs] = useState([]);\r\n    const [dosageUnits, setDosageUnits] = useState([]);\r\n    const [durationUnits, setDurationUnits] = useState([]);\r\n    const [editPharmacyOrder, setEditPharmacyOrder] = useState({\r\n        encounterDateTime: \"\",\r\n        drugName: \"\",\r\n        dosageStrength: \"\",\r\n        dosageStrengthUnit: \"\",\r\n        dosageFrequency: \"\",\r\n        startDate: \"\",\r\n        duration: \"\",\r\n        durationUnit: \"\",\r\n        comments: \"\",\r\n        orderedBy: \"\",\r\n        dateTimePrescribed: \"\"\r\n    });\r\n\r\n    const toggle = () => setPharmacyModal(!pharmacyModal);\r\n\r\n    const onSubmit = async (data) => {\r\n        const diagnosisList = [];\r\n        const presentingComplaints = [];\r\n        const labTests = [];\r\n\r\n        for (const inputFieldsDiag of inputFieldsDiagnosis) {\r\n            if (inputFieldsDiag.diagnosis) {\r\n                diagnosisList.push(inputFieldsDiag);\r\n            }\r\n        }\r\n\r\n        for (const inputField of inputFields) {\r\n            if (inputField.complaint) {\r\n                presentingComplaints.push(inputField);\r\n            }\r\n        }\r\n\r\n        try {\r\n            const InData = {\r\n                \"diagnosisList\": diagnosisList,\r\n                \"encounterDate\": patientObj.encounterDate,\r\n                \"patientId\": patientObj.patientId,\r\n                \"id\": patientObj.id,\r\n                \"presentingComplaints\": presentingComplaints,\r\n                \"visitId\": patientObj.visitId,\r\n                \"visitNotes\": patientObj.visitNotes\r\n            };\r\n\r\n            await axios.put(`${baseUrl}consultations/${patientObj.id}`, InData,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }).then(( resp ) => {\r\n                console.log(\"diagnosis updated successfully\", resp)\r\n            });\r\n\r\n            for (const inputField of inputFieldsLab) {\r\n            //console.log(\"input\",inputField)\r\n                if (inputField.id) {\r\n                    labTests.push({\r\n                    \"id\": inputField.id,\r\n                    \"labTestGroupId\": inputField.labOrder,\r\n                    \"labTestId\": inputField.labTest,\r\n                    \"labTestOrderStatus\": inputField.status,\r\n                    \"orderPriority\": inputField.priority,\r\n                  });\r\n                }\r\n            }\r\n\r\n            const labOrder = {\r\n                  \"id\": inputFieldsLab[0].id,\r\n                  \"orderDate\": inputFieldsLab[0].orderDate,\r\n                  \"patientId\": patientObj.patientId,\r\n                  \"tests\": labTests,\r\n                  \"visitId\": patientObj.visitId\r\n            }\r\n\r\n            console.log(\"lb\", labOrder)\r\n\r\n            axios.put(`${baseUrl}laboratory/orders/${inputFieldsLab[0].orderId}`, labOrder,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }).then(( resp ) => {\r\n               console.log(\"lab updated successfully\", resp)\r\n                for (const pharm of editPharmacyOrder) {\r\n                    console.log(\"pharm\", pharm)\r\n                    axios.put(`${apiUrl}drug-orders/${pharm.id}`, pharm,\r\n                       { headers: {\"Authorization\" : `Bearer ${token}`}}).then(resp => {\r\n                           console.log(\"drug updated successfully\", resp );\r\n                       });\r\n               }\r\n            });\r\n\r\n            toast.success(\"Successfully updated patient consultation!\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n           history.push('/');\r\n\r\n        } catch (e) {\r\n            toast.error(\"An error occured while saving Consultation !\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n    };\r\n\r\n    const OnError = (errors) => {\r\n        console.error(errors);\r\n        toast.error(\"Visit Note Is Required\", {\r\n            position: toast.POSITION.TOP_RIGHT\r\n        });\r\n    };\r\n\r\n    const [labGroups, setLabGroups] = useState([]);\r\n    const [labTests, setLabTests] = useState([]);\r\n    const [priorities, setPriorities] = useState([]);\r\n\r\n    const loadLabCheck = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}modules/check?moduleName=lab`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setIsLabEnabled(response.data);\r\n        } catch (e) {\r\n            toast.error(\"An error occurred while fetching lab\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    const loadPharmacyCheck = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}modules/check?moduleName=pharmacy`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setIsPharmacyEnabled(response.data);\r\n        } catch (e) {\r\n            toast.error(\"An error occurred while fetching pharmacy\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    const loadLatestVitals = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}patient/vital-sign/person/${patientObj.patientId}`, { headers: {\"Authorization\" : `Bearer ${token}`}});\r\n            setLatestVitals(response.data);\r\n        } catch (e) {\r\n            toast.error(\"An error occurred while fetching vitals\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    const loadLabGroup = useCallback(async () => {\r\n            try {\r\n                const response = await axios.get(`${baseUrl}laboratory/labtestgroups`, { headers: {\"Authorization\" : `Bearer ${token}`}});\r\n                setLabGroups(response.data);\r\n            } catch (e) {\r\n                toast.error(\"An error occurred while fetching lap group data\", {\r\n                    position: toast.POSITION.TOP_RIGHT\r\n                });\r\n            }\r\n        }, []);\r\n\r\n    const priority = useCallback(async () => {\r\n            try {\r\n                const response = await axios.get(`${baseUrl}application-codesets/v2/TEST_ORDER_PRIORITY`, { headers: {\"Authorization\" : `Bearer ${token}`}});\r\n                //console.log(\"priority\", response.data);\r\n                setPriorities(response.data);\r\n            } catch (e) {\r\n                toast.error(\"An error occurred while fetching priority data\", {\r\n                    position: toast.POSITION.TOP_RIGHT\r\n                });\r\n            }\r\n        }, []);\r\n\r\n    const pharmacy_by_visitId = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${apiUrl}drug-orders/visits/${patientObj.visitId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}});\r\n\r\n            if (typeof response.data === 'string') {\r\n                setEditPharmacyOrder([]);\r\n            }else {\r\n                setEditPharmacyOrder(response.data);\r\n            }\r\n        } catch (e) {\r\n            toast.error(\"An error occurred while fetching pharmacy data\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    const labtest_by_visitId = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}laboratory/orders/visits/${patientObj.visitId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}});\r\n\r\n            const labTests = [];\r\n\r\n            for (const lab of response.data) {\r\n\r\n                for (const data of lab.labOrder.tests) {\r\n                    let labId = data.id;\r\n                    let labTestDesc = data.description;\r\n                    let labTestGroup = data.labTestGroupId;\r\n                    let labTestId = data.labTestId;\r\n                    let orderPriority = data.orderPriority;\r\n                    let labTestOrderStatus = data.labTestOrderStatus;\r\n\r\n                    let labdata = {\r\n                      labOrder: labTestGroup,\r\n                      labTest: labTestId,\r\n                      priority: orderPriority,\r\n                      status: labTestOrderStatus,\r\n                      id: labId,\r\n                      orderId: lab.labOrder.id,\r\n                      orderDate: lab.labOrder.orderDate\r\n                      };\r\n\r\n                    labTests.push(labdata)\r\n                }\r\n            }\r\n\r\n             setInputFieldsLab(labTests);\r\n        } catch (e) {\r\n            toast.error(\"An error occurred while fetching lab tests order data\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    let drugRows = null;\r\n    let dosageUnitsRows = null;\r\n    let durationUnitsRows = null;\r\n\r\n    const loadDosageUnits = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/DOSE_STRENGTH_UNIT`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}});\r\n            setDosageUnits(response.data);\r\n        } catch (e) {\r\n            toast.error(\"An error occurred while fetching DOSE STRENGTH UNIT\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    const loadDurationUnits = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/AGE_UNIT`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}});\r\n            setDurationUnits(response.data);\r\n        } catch (e) {\r\n            toast.error(\"An error occurred while fetching DOSE STRENGTH UNIT\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    const loadPharmacyDrugs = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${apiUrl}drugs`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}});\r\n            setDrugs(response.data);\r\n        } catch (e) {\r\n            toast.error(\"An error occurred while fetching drugs\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        loadPharmacyCheck();\r\n        loadLabCheck();\r\n        loadLatestVitals();\r\n        loadLabGroup();\r\n        priority();\r\n        labtest_by_visitId();\r\n        pharmacy_by_visitId();\r\n        loadDosageUnits();\r\n        loadDurationUnits();\r\n        loadPharmacyDrugs();\r\n    }, [loadPharmacyCheck, loadLabCheck, loadLatestVitals,\r\n    loadLabGroup, priority, labtest_by_visitId, pharmacy_by_visitId,\r\n    loadDosageUnits, loadDurationUnits, loadPharmacyDrugs]);\r\n\r\n    const handleAddFields = () => {\r\n        const values = [...inputFields];\r\n        values.push({ complaint: '', onsetDate: '', severity: 0, dateResolved: '' });\r\n        setInputFields(values);\r\n    };\r\n\r\n    const handleAddDiagFields = () => {\r\n        const values = [...inputFieldsDiagnosis];\r\n        values.push({ certainty: '', diagnosis: '', diagnosisOrder: 0 });\r\n        setInputFieldsDiagnosis(values);\r\n    };\r\n\r\n    const handleAddFieldsLab = () => {\r\n        const values = [...inputFieldsLab];\r\n        values.push({ encounterDate: format(new Date(), 'yyyy-MM-dd'), labOrder: '', labTest: '', priority: '', status: '' });\r\n        setInputFieldsLab(values);\r\n    };\r\n\r\n    const handleInputChange = (index, event) => {\r\n        const values = [...inputFields];\r\n        if (event.target.name === \"complaint\") {\r\n            values[index].complaint = event.target.value;\r\n        } else if (event.target.name === \"onsetDate\") {\r\n            values[index].onsetDate = event.target.value;\r\n        } else if (event.target.name === \"severity\") {\r\n            values[index].severity = event.target.value;\r\n        } else if (event.target.name === \"dateResolved\") {\r\n            values[index].dateResolved = event.target.value;\r\n        }\r\n        setInputFields(values);\r\n    };\r\n\r\n    const handleInputDiagChange = (index, event) => {\r\n        const values = [...inputFieldsDiagnosis];\r\n        if (event.target.name === \"diagnosis\") {\r\n            values[index].diagnosis = event.target.value;\r\n        } else if (event.target.name === \"certainty\") {\r\n            values[index].certainty = event.target.value;\r\n        } else if (event.target.name === \"diagnosisOrder\") {\r\n            values[index].diagnosisOrder = event.target.value;\r\n        }\r\n        setInputFieldsDiagnosis(values);\r\n    };\r\n\r\n    const labCascade = id => {\r\n        labGroups.forEach(function (x) {\r\n              if ( x.id == id) {\r\n                setLabTests(x.labTests)\r\n            }\r\n        });\r\n    }\r\n\r\n    const handleInputLabChange = (index, event) => {\r\n            const values = [...inputFieldsLab];\r\n            if (event.target.name === \"labOrder\") {\r\n                const str = event.target.value;\r\n                values[index].labOrder = str;\r\n                labCascade(str.slice(0,1))\r\n            }\r\n            else if (event.target.name === \"labTest\") {\r\n                values[index].labTest = event.target.value;\r\n            } else if (event.target.name === \"priority\") {\r\n                values[index].priority = event.target.value;\r\n            }\r\n            else if (event.target.name === \"status\") {\r\n                values[index].status = event.target.value;\r\n            }\r\n\r\n            setInputFieldsLab(values);\r\n        };\r\n\r\n    const handleInputChangePharmacyOrderDto = (index, e) => {\r\n        const values = [...editPharmacyOrder];\r\n        if (e.target.name === \"encounterDateTime\") {\r\n            values[index].encounterDateTime = e.target.value;\r\n        }\r\n        else if (e.target.name === \"drugName\") {\r\n            values[index].drugName = e.target.value;\r\n        }\r\n        else if (e.target.name === \"dosageStrength\") {\r\n            values[index].dosageStrength = e.target.value;\r\n        }\r\n        else if (e.target.name === \"dosageStrengthUnit\") {\r\n            values[index].dosageStrengthUnit = e.target.value;\r\n        }\r\n        else if (e.target.name === \"dosageFrequency\") {\r\n            values[index].dosageFrequency = e.target.value;\r\n        }\r\n        else if (e.target.name === \"startDate\") {\r\n            values[index].startDate = e.target.value;\r\n        }\r\n        else if (e.target.name === \"duration\") {\r\n            values[index].duration = e.target.value;\r\n        }\r\n        else if (e.target.name === \"durationUnit\") {\r\n            values[index].durationUnit = e.target.value;\r\n        }\r\n        else if (e.target.name === \"comments\") {\r\n            values[index].comments = e.target.value;\r\n        }\r\n        else if (e.target.name === \"orderedBy\") {\r\n            values[index].orderedBy = e.target.value;\r\n        }\r\n        else if (e.target.name === \"dateTimePrescribed\") {\r\n            values[index].dateTimePrescribed = e.target.value;\r\n        }\r\n        setEditPharmacyOrder(values);\r\n    };\r\n\r\n    const handleAddPharmacyOrder = () => {\r\n        setPharmacyModal(!pharmacyModal);\r\n    };\r\n\r\n    if (drugs && drugs.length > 0) {\r\n        drugRows = drugs.map((drug, index) => (\r\n            <option key={drug.name} value={drug.name}>{drug.name}</option>\r\n        ));\r\n    }\r\n    if (dosageUnits && dosageUnits.length > 0) {\r\n        dosageUnitsRows = dosageUnits.map((dosageUnit, index) => (\r\n            <option key={dosageUnit.display} value={dosageUnit.display}>{dosageUnit.display}</option>\r\n        ));\r\n    }\r\n    if (durationUnits && durationUnits.length > 0) {\r\n        durationUnitsRows = durationUnits.map((durationUnit, index) => (\r\n            <option key={durationUnit.display} value={durationUnit.display}>{durationUnit.display}</option>\r\n        ));\r\n    }\r\n\r\n    return (\r\n        <Grid columns='equal'>\r\n            <Grid.Column>\r\n                { latestVitals && latestVitals.length > 0 &&\r\n                    <Segment>\r\n                        <Label as='a' color='blue' ribbon>\r\n                            Recent Vitals\r\n                        </Label>\r\n                        <br/>\r\n                        <List celled>\r\n                            <List.Item>Pulse <span className=\"float-end\"><b>{latestVitals[latestVitals.length - 1].pulse}bpm</b></span></List.Item>\r\n                            <List.Item>Respiratory Rate <span className=\"float-end\"><b>{latestVitals[latestVitals.length - 1].respiratoryRate}bpm</b></span></List.Item>\r\n                            <List.Item>Temperature <span className=\"float-end\"><b>{latestVitals[latestVitals.length - 1].temperature}<sup>0</sup>C</b></span></List.Item>\r\n                            <List.Item>Blood Presure <span  className=\"float-end\"><b>{latestVitals[latestVitals.length - 1].systolic}/{latestVitals[latestVitals.length - 1].diastolic}</b></span></List.Item>\r\n                            <List.Item>Height <span  className=\"float-end\"><b>{latestVitals[latestVitals.length - 1].height}m</b></span></List.Item>\r\n                            <List.Item>Weight <span  className=\"float-end\"><b>{latestVitals[latestVitals.length - 1].bodyWeight}kg</b></span></List.Item>\r\n                        </List>\r\n                    </Segment>\r\n                }\r\n\r\n                { previousConsultation &&\r\n                    <Segment>\r\n                        <Label as='a' color='black' ribbon>\r\n                            Conditions\r\n                        </Label>\r\n                        <br/>\r\n\r\n                        { previousConsultation.map((consultation, i) => (\r\n                            <div>\r\n                                {consultation.diagnosisList.map((diagnosis, j)=> (\r\n                                    <Label as='a'  color='white'  size=\"mini\" pointing>\r\n                                        {diagnosis.diagnosis}\r\n                                    </Label>\r\n                                ))}\r\n                            </div>\r\n                        ))}\r\n                    </Segment>\r\n                }\r\n\r\n\r\n                { hasAllergies &&\r\n                    <Segment>\r\n                        <Label as='a' color='red' ribbon>\r\n                            Allergies\r\n                        </Label>\r\n                        <br/><br/>\r\n\r\n                        <Label.Group color='blue'>\r\n                            <Label as='a'  size=\"mini\">dust</Label>\r\n                            <Label as='a'  size=\"mini\">smoke</Label>\r\n                        </Label.Group>\r\n                    </Segment>\r\n                }\r\n            </Grid.Column>\r\n\r\n            <Grid.Column width={10}>\r\n                <form onSubmit={handleSubmit(onSubmit, OnError)}>\r\n                    <Label as='a' color='black' ribbon>\r\n                        <b>Physical Examination</b>\r\n                    </Label>\r\n\r\n                    <Segment>\r\n                        <div className=\"input-group input-group-sm mb-3\">\r\n                            <span className=\"input-group-text\">Encounter Date</span>\r\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                <Controller\r\n                                    name=\"encounterDate\"\r\n                                    control={control}\r\n                                    defaultValue={encounterDate}\r\n                                    rules={{ required: true }}\r\n                                    render={({ field: { ref, ...rest }}) => (\r\n                                        <KeyboardDateTimePicker\r\n                                            disableFuture\r\n                                            format=\"dd/MM/yyyy hh:mm a\"\r\n                                            value={patientObj.encounterDate}\r\n                                            onChange={setEncounterDate}\r\n                                            className=\"form-control\"\r\n                                            invalidDateMessage={\"Encounter date is required\"}\r\n                                            {...rest}\r\n                                        />\r\n                                    )}\r\n                                    />\r\n                            </MuiPickersUtilsProvider>\r\n                        </div>\r\n\r\n                        <div className=\"input-group input-group-sm mb-3\">\r\n                            <span className=\"input-group-text\">Visit Note</span>\r\n                            <Controller\r\n                                name=\"visitNote\"\r\n                                control={control}\r\n                                rules={{ required: false }}\r\n                                render={({ field: { ref, ...rest }}) => (\r\n                                    <textarea\r\n                                    className=\"form-control\"\r\n                                    style={{ minHeight: 100, fontSize: 14 }}\r\n                                    {...rest}\r\n                                    >{patientObj.visitNotes}</textarea>\r\n                                )}\r\n                            />\r\n                        </div>\r\n                        <br/>\r\n                        <Label as='a' color='red' ribbon>\r\n                            Presenting Complaints\r\n                        </Label>\r\n                        <Table color=\"red\" celled>\r\n                            <Table.Header>\r\n                                <Table.Row>\r\n                                    <Table.Cell style={{ fontWeight: 'bold'}}>Complaints</Table.Cell>\r\n                                    <Table.Cell style={{ fontWeight: 'bold'}}>Onset Date</Table.Cell>\r\n                                    <Table.Cell style={{ fontWeight: 'bold'}}>Severity</Table.Cell>\r\n                                    <Table.Cell style={{ fontWeight: 'bold'}}>Date Resolved</Table.Cell>\r\n                                </Table.Row>\r\n                            </Table.Header>\r\n\r\n                            <Table.Body>\r\n                                    {inputFields && inputFields.map((inputField, index) => (\r\n                                        <Fragment key={`${inputField}~${index}`}>\r\n                                            <Table.Row>\r\n                                            <Table.Cell>\r\n                                                <Input\r\n                                                    id=\"complaint\"\r\n                                                    name=\"complaint\"\r\n                                                    type=\"text\"\r\n                                                    fluid\r\n                                                    placeholder='Enter Presenting Complaints'\r\n                                                    value={inputField.complaint}\r\n                                                    onChange={event => handleInputChange(index, event)}\r\n                                                />\r\n                                            </Table.Cell>\r\n                                            <Table.Cell>\r\n                                                <Input\r\n                                                    id=\"onsetDate\"\r\n                                                    name=\"onsetDate\"\r\n                                                    type=\"date\"\r\n                                                    fluid\r\n                                                    placeholder='Onset Date'\r\n                                                    value={inputField.onsetDate}\r\n                                                    onChange={event => handleInputChange(index, event)}\r\n                                                />\r\n                                            </Table.Cell>\r\n                                            <Table.Cell>\r\n                                                <select\r\n                                                    class=\"ui fluid selection dropdown\"\r\n                                                    value={inputField.severity}\r\n                                                    onChange={event => handleInputChange(index, event)}\r\n                                                    name=\"severity\"\r\n                                                    id=\"severity\">\r\n                                                    <option value=\"0\">0</option>\r\n                                                    <option value=\"1\">1</option>\r\n                                                    <option value=\"2\">2</option>\r\n                                                    <option value=\"3\">3</option>\r\n                                                    <option value=\"4\">4</option>\r\n                                                    <option value=\"5\">5</option>\r\n                                                    <option value=\"6\">6</option>\r\n                                                    <option value=\"7\">7</option>\r\n                                                    <option value=\"8\">8</option>\r\n                                                    <option value=\"9\">9</option>\r\n                                                    <option value=\"10\">10</option>\r\n                                                </select>\r\n                                            </Table.Cell>\r\n                                            <Table.Cell>\r\n                                                <Input\r\n                                                    id=\"dateResolved\"\r\n                                                    name=\"dateResolved\"\r\n                                                    type=\"date\"\r\n                                                    fluid\r\n                                                    placeholder='Date Resolved'\r\n                                                    value={inputField.dateResolved}\r\n                                                    onChange={event => handleInputChange(index, event)}\r\n                                                />\r\n                                            </Table.Cell>\r\n                                            </Table.Row>\r\n                                        </Fragment>\r\n                                    ))}\r\n\r\n                            </Table.Body>\r\n\r\n                            <Table.Footer>\r\n                                <Table.Row>\r\n                                    <Table.HeaderCell>\r\n                                        <Button color=\"blue\" size=\"tiny\" type=\"button\" onClick={() => handleAddFields()}>\r\n                                            <Icon name='plus' /> Add More\r\n                                        </Button>\r\n                                    </Table.HeaderCell>\r\n                                </Table.Row>\r\n                            </Table.Footer>\r\n                        </Table>\r\n                        <br/>\r\n                        <Label as='a' color='pink' ribbon>\r\n                            Clinical Diagnosis\r\n                        </Label>\r\n                        <Table color=\"pink\" celled>\r\n                            <Table.Header>\r\n                                <Table.Row>\r\n                                    <Table.Cell style={{ fontWeight: 'bold'}}>Condition</Table.Cell>\r\n                                    <Table.Cell style={{ fontWeight: 'bold'}}>Order</Table.Cell>\r\n                                    <Table.Cell style={{ fontWeight: 'bold'}}>Certainty</Table.Cell>\r\n                                    <Table.Cell style={{ fontWeight: 'bold'}}></Table.Cell>\r\n                                </Table.Row>\r\n                            </Table.Header>\r\n\r\n                            <Table.Body>\r\n                                {inputFieldsDiagnosis && inputFieldsDiagnosis.map((diagInputField, diagIndex) => (\r\n                                    <Fragment key={`${diagInputField}~${diagIndex}`}>\r\n                                        <Table.Row>\r\n                                            <Table.Cell>\r\n                                                <Input\r\n                                                    id=\"diagnosis\"\r\n                                                    name=\"diagnosis\"\r\n                                                    type=\"text\"\r\n                                                    fluid\r\n                                                    placeholder='Condition'\r\n                                                    value={diagInputField.diagnosis}\r\n                                                    onChange={event => handleInputDiagChange(diagIndex, event)}\r\n                                                />\r\n                                            </Table.Cell>\r\n                                            <Table.Cell>\r\n                                                <select\r\n                                                    className=\"ui fluid selection dropdown\"\r\n                                                    value={diagInputField.diagnosisOrder}\r\n                                                    onChange={event => handleInputDiagChange(diagIndex, event)}\r\n                                                    name=\"diagnosisOrder\"\r\n                                                    id=\"diagnosisOrder\">\r\n                                                    <option></option>\r\n                                                    <option value=\"1\">Primary</option>\r\n                                                    <option value=\"2\">Secondary</option>\r\n                                                </select>\r\n                                            </Table.Cell>\r\n                                            <Table.Cell>\r\n                                                <select\r\n                                                    className=\"ui fluid selection dropdown\"\r\n                                                    value={diagInputField.certainty}\r\n                                                    onChange={event => handleInputDiagChange(diagIndex, event)}\r\n                                                    name=\"certainty\"\r\n                                                    id=\"certainty\">\r\n                                                    <option></option>\r\n                                                    <option value=\"1\">Presumed</option>\r\n                                                    <option value=\"2\">Confirmed</option>\r\n                                                </select>\r\n                                            </Table.Cell>\r\n                                            <Table.Cell></Table.Cell>\r\n                                        </Table.Row>\r\n                                    </Fragment>\r\n                                ))}\r\n                            </Table.Body>\r\n\r\n                            <Table.Footer>\r\n                                <Table.Row>\r\n                                    <Table.HeaderCell>\r\n\r\n                                        <Button color=\"blue\" size=\"tiny\" type=\"button\" onClick={() => handleAddDiagFields()}>\r\n                                            <Icon name='plus' /> Add More\r\n                                        </Button>\r\n                                    </Table.HeaderCell>\r\n\r\n                                </Table.Row>\r\n                            </Table.Footer>\r\n                        </Table>\r\n                        <br/>\r\n                        { isLabEnabled && <div>\r\n                            <Label as='a' color='teal' ribbon>\r\n                                Lab Test\r\n                            </Label>\r\n\r\n                            <Table color=\"teal\" celled>\r\n                                <Table.Header>\r\n                                    <Table.Row>\r\n                                        <Table.Cell style={{ fontWeight: 'bold'}}>Lab Test Group</Table.Cell>\r\n                                        <Table.Cell style={{ fontWeight: 'bold'}}>Lab Test</Table.Cell>\r\n                                        <Table.Cell style={{ fontWeight: 'bold'}}>Priority</Table.Cell>\r\n                                        <Table.Cell style={{ fontWeight: 'bold'}}>Status</Table.Cell>\r\n                                    </Table.Row>\r\n                                </Table.Header>\r\n\r\n                                <Table.Body>\r\n                                   {inputFieldsLab && inputFieldsLab.map((labInputField, labIndex) => (\r\n                                        <Fragment key={`${labInputField}~${labIndex}`}>\r\n                                            <Table.Row>\r\n                                                <Table.Cell>\r\n                                                    <select\r\n                                                        className=\"ui fluid selection dropdown\"\r\n                                                        value={labInputField.labOrder}\r\n                                                        onChange={ e => handleInputLabChange(labIndex, e)}\r\n                                                        name=\"labOrder\"\r\n                                                        id=\"labOrder\">\r\n                                                        <option></option>\r\n                                                        {\r\n                                                            labGroups.map((d)=> (\r\n                                                                <option key={d.id} value={`${d.id}-${d.groupName}`}>\r\n                                                                    {d.groupName}\r\n                                                                </option>\r\n                                                            ))\r\n                                                        }\r\n                                                    </select>\r\n\r\n                                                </Table.Cell>\r\n                                                <Table.Cell>\r\n                                                    <select\r\n                                                        className=\"ui fluid selection dropdown\"\r\n                                                        value={labInputField.labTest}\r\n                                                        onChange={e => handleInputLabChange(labIndex, e)}\r\n                                                        name=\"labTest\"\r\n                                                        id=\"labTest\">\r\n                                                        <option></option>\r\n                                                             {\r\n                                                                labTests.map((d)=> (\r\n                                                                    <option key={d.id} value={d.id}>\r\n                                                                        {d.labTestName}\r\n                                                                    </option>\r\n                                                                ))\r\n                                                            }\r\n                                                    </select>\r\n\r\n                                                </Table.Cell>\r\n                                                <Table.Cell>\r\n                                                <select\r\n                                                    className=\"ui fluid selection dropdown\"\r\n                                                    value={labInputField.priority}\r\n                                                    onChange={e => handleInputLabChange(labIndex, e)}\r\n                                                    name=\"priority\"\r\n                                                    id=\"priority\">\r\n                                                    <option></option>\r\n                                                       {\r\n                                                            priorities.map((d)=> (\r\n                                                                <option key={d.id} value={d.id}>\r\n                                                                    {d.display}\r\n                                                                </option>\r\n                                                            ))\r\n                                                        }\r\n                                                </select>\r\n\r\n                                                </Table.Cell>\r\n                                                <Table.Cell>\r\n                                                    <select\r\n                                                        className=\"ui fluid selection dropdown\"\r\n                                                        value={labInputField.status}\r\n                                                        onChange={e => handleInputLabChange(labIndex, e)}\r\n                                                        name=\"status\"\r\n                                                        id=\"status\">\r\n                                                        <option></option>\r\n                                                          <option value=\"0\">Pending Collection</option>\r\n                                                            <option value=\"1\">Sample Collected</option>\r\n                                                            <option value=\"2\">Sample Transferred</option>\r\n                                                            <option value=\"3\">Sample Verified</option>\r\n                                                            <option value=\"4\">Sample Rejected</option>\r\n                                                            <option value=\"5\">Result Available</option>\r\n\r\n                                                    </select>\r\n                                                </Table.Cell>\r\n                                            </Table.Row>\r\n                                        </Fragment>\r\n                                    ))}\r\n                                </Table.Body>\r\n\r\n                                <Table.Footer>\r\n                                    <Table.Row>\r\n                                        <Table.HeaderCell>\r\n\r\n                                            <Label as='a' color=\"blue\" size=\"tiny\" onClick={() => handleAddFieldsLab()}>\r\n                                                <Icon name='plus' /> Add Test\r\n                                            </Label>\r\n                                        </Table.HeaderCell>\r\n\r\n                                    </Table.Row>\r\n                                </Table.Footer>\r\n                            </Table>\r\n                        </div>}\r\n                        <br/>\r\n                        <Label as='a' color='purple' ribbon>\r\n                            Pharmacy Order\r\n                        </Label>\r\n                        <br/>\r\n                        <br/>\r\n\r\n                           {   editPharmacyOrder.length > 0 ?\r\n                               editPharmacyOrder.map((d, index)=> (\r\n                                  <Fragment key={index}>\r\n                                      <div className=\"row\">\r\n                                          <div className=\"col-md-6\">\r\n                                                <Input\r\n                                                   label=\"Order Date\"\r\n                                                   type=\"date\"\r\n                                                   name=\"encounterDateTime\"\r\n                                                   id=\"encounterDateTime\"\r\n                                                   fluid\r\n                                                   onChange={e => handleInputChangePharmacyOrderDto(index, e)}\r\n                                                   value={d.encounterDateTime.substring(0,10)}\r\n                                               />\r\n                                          </div>\r\n                                          <div className=\"col-md-6\">\r\n                                              <select\r\n                                                  label=\"Drug Name\"\r\n                                                  className=\"ui fluid selection dropdown\"\r\n                                                  onChange={e => handleInputChangePharmacyOrderDto(index, e)}\r\n                                                  value={d.drugName}\r\n                                                  name=\"drugName\"\r\n                                                  id=\"drugName\">\r\n                                                  <option></option>\r\n                                                  {drugRows}\r\n                                              </select>\r\n                                          </div>\r\n                                     </div>\r\n                                     <br />\r\n                                     <div className=\"row\">\r\n                                        <div className=\"col-md-6\">\r\n                                             <Input\r\n                                                 label=\"Dosage Strength\"\r\n                                                 type=\"text\"\r\n                                                 name=\"dosageStrength\"\r\n                                                 id=\"dosageStrength\"\r\n                                                 fluid\r\n                                                 onChange={e => handleInputChangePharmacyOrderDto(index, e)}\r\n                                                 value={d.dosageStrength}\r\n                                             />\r\n                                        </div>\r\n                                         <div className=\"col-md-6\">\r\n                                          <select\r\n                                              className=\"ui fluid selection dropdown\"\r\n                                              name=\"dosageStrengthUnit\"\r\n                                              id=\"dosageStrengthUnit\"\r\n                                              onChange={e => handleInputChangePharmacyOrderDto(index, e)}\r\n                                              value={d.dosageStrengthUnit}\r\n                                              >\r\n                                              <option></option>\r\n                                              {dosageUnitsRows}\r\n                                          </select>\r\n                                       </div>\r\n                                     </div>\r\n                                     <br/>\r\n                                     <div className=\"row\">\r\n\r\n                                         <div className=\"col-md-6\">\r\n                                           <Input\r\n                                              label=\"Drug Brand\"\r\n                                              type=\"text\"\r\n                                              name=\"brand\"\r\n                                              id=\"brand\"\r\n                                              fluid\r\n                                              onChange={e => handleInputChangePharmacyOrderDto(index, e)}\r\n                                              value={d.brand}\r\n                                           />\r\n                                         </div>\r\n                                         <div className=\"col-md-6\">\r\n                                              <Input\r\n                                                  label=\"Dosage Frequency\"\r\n                                                  type=\"text\"\r\n                                                  name=\"dosageFrequency\"\r\n                                                  id=\"dosageFrequency\"\r\n                                                  fluid\r\n                                                  onChange={e => handleInputChangePharmacyOrderDto(index, e)}\r\n                                                  value={d.dosageFrequency}\r\n                                              />\r\n                                         </div>\r\n                                    </div>\r\n                                    <br/>\r\n                                       <div className=\"row\">\r\n                                           <div className=\"col-md-4\">\r\n                                                <Input\r\n                                                    label=\"Start Date\"\r\n                                                    type=\"date\"\r\n                                                    name=\"startDate\"\r\n                                                    id=\"startDate\"\r\n                                                    fluid\r\n                                                    onChange={e => handleInputChangePharmacyOrderDto(index, e)}\r\n                                                    value={d.startDate}\r\n                                                />\r\n                                           </div>\r\n                                           <div className=\"col-md-4\">\r\n                                                 <Input\r\n                                                    label=\"Duration\"\r\n                                                    type=\"text\"\r\n                                                    name=\"duration\"\r\n                                                    id=\"duration\"\r\n                                                    fluid\r\n                                                    onChange={e => handleInputChangePharmacyOrderDto(index, e)}\r\n                                                    value={d.duration}\r\n                                                />\r\n                                           </div>\r\n                                           <div className=\"col-md-4\">\r\n                                               <select\r\n\r\n                                                     className=\"ui fluid selection dropdown\"\r\n                                                     name=\"durationUnit\"\r\n                                                     id=\"durationUnit\"\r\n                                                     onChange={e => handleInputChangePharmacyOrderDto(index, e)}\r\n                                                     value={d.durationUnit}\r\n                                                     >\r\n                                                     <option></option>\r\n                                                     {durationUnitsRows}\r\n                                                 </select>\r\n                                           </div>\r\n                                      </div>\r\n                                      <br/>\r\n                                      <div className=\"row\">\r\n                                       <Input\r\n                                             label=\"Comments\"\r\n                                             type=\"text\"\r\n                                             name=\"comments\"\r\n                                             id=\"comments\"\r\n                                             onChange={e => handleInputChangePharmacyOrderDto(index, e)}\r\n                                             value={d.comments}\r\n                                         />\r\n                                     </div>\r\n                                     <hr/>\r\n                                     </Fragment>\r\n                                  )) : \"No pharmacy order for patient.\"\r\n                           }\r\n\r\n                    </Segment>\r\n                    <Button type={\"submit\"} variant=\"contained\" color={\"primary\"}>Submit</Button>\r\n                </form>\r\n          </Grid.Column>\r\n          <Grid.Column>\r\n            <Segment>\r\n            <List>\r\n                  <List.Item>\r\n                      <Link\r\n                          to={{\r\n                              pathname: \"/\",\r\n                              state: { patientObj: patientObj  }\r\n                          }}>\r\n                          <Button icon labelPosition='right' color='green' fluid>\r\n                              <Icon name='angle double left' />\r\n                              Back\r\n                          </Button>\r\n                      </Link>\r\n                  </List.Item>\r\n                  <List.Item>\r\n                  <Button icon labelPosition='right' color='blue' fluid>\r\n                      <Icon name='calendar alternate' />\r\n                        Appointment\r\n                    </Button>\r\n                  </List.Item>\r\n            </List>\r\n                { previousConsultation &&\r\n                    <Card>\r\n                        <Card.Content>\r\n                            <b>Previous Clinical Notes</b>\r\n                        </Card.Content>\r\n                        <Card.Content>\r\n                            <Feed>\r\n                                { previousConsultation.map((consultation, i) => (\r\n                                    <div>\r\n                                        <Feed.Event>\r\n                                            <Feed.Content>\r\n                                                <Feed.Date content={consultation.encounterDate} />\r\n                                                <Feed.Summary>\r\n                                                    {consultation.visitNotes}\r\n                                                </Feed.Summary>\r\n                                            </Feed.Content>\r\n                                        </Feed.Event>\r\n                                        <hr/>\r\n                                    </div>\r\n                                )) }\r\n                            </Feed>\r\n                        </Card.Content>\r\n                    </Card>\r\n                }\r\n            </Segment>\r\n          </Grid.Column>\r\n        </Grid>\r\n    );\r\n  };\r\n\r\nexport default Widget;\r\n","import React from \"react\";\r\nimport {\r\n  MemoryRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nimport { ToastContainer} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport \"./main/webapp/vendor/bootstrap-select/dist/css/bootstrap-select.min.css\";\r\nimport \"./../src/main/webapp/css/style.css\";\r\n\r\nimport Home from './main/webapp/jsx/components/Home';\r\nimport PatientDetail from './main/webapp/jsx/components/Patient/PatientDetail';\r\nimport PatientConsultationHistory from './main/webapp/jsx/components/History/PatientConsultationHistory';\r\nimport ViewPatientHistory from './main/webapp/jsx/components/History/ViewPatientHistory'\r\n//import PatientEditDetail from './main/webapp/jsx/components/Patient/PatientEditDetail';\r\n\r\nexport default function App() {\r\n  return (\r\n\r\n      <div>\r\n      <ToastContainer />\r\n        {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n        <Switch>\r\n         <Route path=\"/patient-consultation\">\r\n           <ViewPatientHistory />\r\n         </Route>\r\n\r\n          <Route path=\"/patient-consultations-history\">\r\n            <PatientConsultationHistory />\r\n          </Route>\r\n\r\n          <Route path=\"/patient-history\">\r\n            <PatientDetail />\r\n          </Route>\r\n          {/* \r\n          <Route path=\"/edit-patient\">\r\n            <EditPatient />\r\n          </Route> */}\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>\r\n        \r\n          \r\n        </Switch>\r\n      </div>\r\n \r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","let direction = 'ltr';\r\n\r\nexport const dezThemeSet = [\r\n\t{ /* Default */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"full\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{ /* Demo Theme 1 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tprimary: \"color_5\",\r\n\t\theaderBg: \"color_5\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tdirection: direction\r\n\t},\r\n\t { /* Demo Theme 2 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_11\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_11\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_11\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 3 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"dark\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_3\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 4 */\t\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t\t\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 5 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"horizontal\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_9\",\r\n\t\tsidebarStyle: \"modern\",\r\n\t\tsidebarPosition: \"static\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_9\",\r\n\t\tdirection: direction\r\n\t},\r\n\t/* {\r\n\t\t//Demo Theme 6\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"mini\",\r\n\t\tsidebarBg: \"color_10\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 7 \r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"compact\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_6\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 8 *\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"icon-hover\",\r\n\t\tsidebarBg: \"color_15\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t} */\r\n];\r\n\t","import React, { createContext, useEffect, useState } from \"react\";\r\nimport {dezThemeSet} from './ThemeDemo';\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nconst ThemeContextProvider = (props) => {\r\n\tconst [sideBarStyle, setSideBarStyle] = useState({ value: \"full\", label: \"Full\",});\r\n\tconst [sidebarposition, setSidebarposition] = useState({ value: \"fixed\",\tlabel: \"Fixed\",});\r\n    const [headerposition, setHeaderposition] = useState({ value: \"fixed\", label: \"Fixed\", });\r\n    const [sidebarLayout, setSidebarLayout] = useState({ value: \"vertical\", label: \"Vertical\",});\r\n\tconst [direction, setDirection] = useState({ value: \"ltr\", label: \"LTR\" });\r\n\tconst [primaryColor, setPrimaryColor] = useState(\"color_1\");\r\n\tconst [navigationHader, setNavigationHader] = useState(\"color_1\");\r\n\tconst [haderColor, setHaderColor] = useState(\"color_1\");\r\n\tconst [sidebarColor, setSidebarColor] = useState(\"color_1\");\r\n\tconst [iconHover, setIconHover] = useState(false);\r\n\tconst [menuToggle, setMenuToggle] = useState(false);\r\n\tconst [background, setBackground] = useState({ value: \"light\",\tlabel: \"Light\",});\r\n\tconst [containerPosition_, setcontainerPosition_] = useState({value: \"wide-boxed\", label: \"Wide Boxed\",});\r\n    const body = document.querySelector(\"body\");\r\n    const [windowWidth, setWindowWidth] = useState(0);\r\n    const [windowHeight, setWindowHeight] = useState(0);\r\n\r\n  // layout\r\n  const layoutOption = [\r\n    { value: \"vertical\", label: \"Vertical\" },\r\n    { value: \"horizontal\", label: \"Horizontal\" },\r\n  ];\r\n  const sideBarOption = [\r\n    { value: \"compact\", label: \"Compact\" },\r\n    { value: \"full\", label: \"Full\" },\r\n    { value: \"mini\", label: \"Mini\" },\r\n    { value: \"modern\", label: \"Modern\" },\r\n    { value: \"overlay\", label: \"Overlay\" },\r\n    { value: \"icon-hover\", label: \"Icon-hover\" },\r\n  ];\r\n  const backgroundOption = [\r\n    { value: \"light\", label: \"Light\" },\r\n    { value: \"dark\", label: \"Dark\" },\r\n  ];\r\n  const sidebarpositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const headerPositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const containerPosition = [\r\n    { value: \"wide-boxed\", label: \"Wide Boxed\" },\r\n    { value: \"boxed\", label: \"Boxed\" },\r\n    { value: \"wide\", label: \"Wide\" },\r\n  ];\r\n  const colors = [\r\n    \"color_1\",\r\n    \"color_2\",\r\n    \"color_3\",\r\n    \"color_4\",\r\n    \"color_5\",\r\n    \"color_6\",\r\n    \"color_7\",\r\n    \"color_8\",\r\n    \"color_9\",\r\n    \"color_10\",\r\n    \"color_11\",\r\n    \"color_12\",\r\n    \"color_13\",\r\n    \"color_14\",\r\n    \"color_15\",\r\n  ];\r\n  const directionPosition = [\r\n    { value: \"ltr\", label: \"LTR\" },\r\n    { value: \"rtl\", label: \"RTL\" },\r\n  ];\r\n  const fontFamily = [\r\n    { value: \"poppins\", label: \"Poppins\" },\r\n    { value: \"roboto\", label: \"Roboto\" },\r\n    { value: \"cairo\", label: \"Cairo\" },\r\n    { value: \"opensans\", label: \"Open Sans\" },\r\n    { value: \"HelveticaNeue\", label: \"HelveticaNeue\" },\r\n  ];\r\n  const changePrimaryColor = (name) => {\r\n\tsetPrimaryColor(name);\r\n    body.setAttribute(\"data-primary\", name);\r\n  };\r\n  const changeNavigationHader = (name) => {\r\n    setNavigationHader(name);\r\n    body.setAttribute(\"data-nav-headerbg\", name);\r\n  };\r\n  const chnageHaderColor = (name) => {\r\n    setHaderColor(name);\r\n    body.setAttribute(\"data-headerbg\", name);\r\n  };\r\n  const chnageSidebarColor = (name) => {\r\n    setSidebarColor(name);\r\n    body.setAttribute(\"data-sibebarbg\", name);\r\n  };\r\n  const changeSideBarPostion = (name) => {\r\n    setSidebarposition(name);\r\n    body.setAttribute(\"data-sidebar-position\", name.value);\r\n  };\r\n  const changeDirectionLayout = (name) => {\r\n    setDirection(name);\r\n    body.setAttribute(\"direction\", name.value);\r\n    let html = document.querySelector(\"html\");\r\n    html.setAttribute(\"dir\", name.value);\r\n    html.className = name.value;\r\n  };\r\n  const changeSideBarLayout = (name) => {\r\n    if (name.value === \"horizontal\") {\r\n      if (sideBarStyle.value === \"overlay\") {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n        setSideBarStyle({ value: \"full\", label: \"Full\" });\r\n        body.setAttribute(\"data-sidebar-style\", \"full\");\r\n      } else {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n      }\r\n    } else {\r\n      setSidebarLayout(name);\r\n      body.setAttribute(\"data-layout\", name.value);\r\n    }\r\n  };\r\n  const changeSideBarStyle = (name) => {\r\n    if (sidebarLayout.value === \"horizontal\") {\r\n      if (name.value === \"overlay\") {\r\n        alert(\"Sorry! Overlay is not possible in Horizontal layout.\");\r\n      } else {\r\n        setSideBarStyle(name);\r\n        setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n        body.setAttribute(\"data-sidebar-style\", name.value);\r\n      }\r\n    } else {\r\n      setSideBarStyle(name);\r\n      setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n      body.setAttribute(\"data-sidebar-style\", name.value);\r\n    }\r\n  };\r\n\r\n  const changeHeaderPostion = (name) => {\r\n    setHeaderposition(name);\r\n    body.setAttribute(\"data-header-position\", name.value);\r\n  };\r\n\r\n  const openMenuToggle = () => {\r\n    sideBarStyle.value === \"overly\"\r\n      ? setMenuToggle(true)\r\n      : setMenuToggle(false);\r\n  };\r\n\r\n  const changeBackground = (name) => {\r\n    body.setAttribute(\"data-theme-version\", name.value);\r\n    setBackground(name);\r\n  };\r\n\r\n  const changeContainerPosition = (name) => {\r\n    setcontainerPosition_(name);\r\n    body.setAttribute(\"data-container\", name.value);\r\n    name.value === \"boxed\" &&\r\n      changeSideBarStyle({ value: \"overlay\", label: \"Overlay\" });\r\n  };\r\n  \r\n  const setDemoTheme = (theme,direction) => {\r\n\r\n\tvar setAttr = {};\t\r\n\t\r\n\t\r\n\tvar themeSettings = dezThemeSet[theme];\t\r\n\t\t\r\n\tbody.setAttribute(\"data-typography\", themeSettings.typography);\r\n \r\n\tsetAttr.value = themeSettings.version;\r\n\tchangeBackground(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.layout;\r\n\tchangeSideBarLayout(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.primary;\r\n\tchangePrimaryColor(themeSettings.primary);\r\n\t\r\n//setAttr.value = themeSettings.navheaderBg;\r\n\tchangeNavigationHader(themeSettings.navheaderBg);\r\n\t\r\n//setAttr.value = themeSettings.headerBg;\r\n\tchnageHaderColor(themeSettings.headerBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarStyle;\r\n\tchangeSideBarStyle(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.sidebarBg;\r\n\tchnageSidebarColor(themeSettings.sidebarBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarPosition;\r\n\tchangeSideBarPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.headerPosition;\r\n\tchangeHeaderPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.containerLayout;\r\n\tchangeContainerPosition(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.direction;\r\n\tsetAttr.value = direction;\r\n\tchangeDirectionLayout(setAttr); \r\n\t\r\n\t};\r\n\r\n  useEffect(() => {\r\n\tconst body = document.querySelector(\"body\");\r\n    body.setAttribute(\"data-typography\", \"poppins\");\r\n    body.setAttribute(\"data-theme-version\", \"light\");\r\n    body.setAttribute(\"data-layout\", \"vertical\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-nav-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-style\", \"overlay\");\r\n    body.setAttribute(\"data-sibebarbg\", \"color_1\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-position\", \"fixed\");\r\n    body.setAttribute(\"data-header-position\", \"fixed\");\r\n    body.setAttribute(\"data-container\", \"wide\");\r\n    body.setAttribute(\"direction\", \"ltr\");\r\n\t\tlet resizeWindow = () => {\r\n\t\t\tsetWindowWidth(window.innerWidth);\r\n\t\t\tsetWindowHeight(window.innerHeight);\r\n\t\t\twindow.innerWidth >= 768 && window.innerWidth < 1024\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"mini\")\r\n\t\t\t: window.innerWidth <= 768\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"overlay\")\r\n\t\t\t: body.setAttribute(\"data-sidebar-style\", \"full\");\r\n\t\t};\r\n    resizeWindow();\r\n    window.addEventListener(\"resize\", resizeWindow);\r\n    return () => window.removeEventListener(\"resize\", resizeWindow);\r\n  }, []);\r\n\r\n  return (\r\n    <ThemeContext.Provider\r\n      value={{\r\n        body,\r\n        sideBarOption,\r\n        layoutOption,\r\n        backgroundOption,\r\n        sidebarposition,\r\n        headerPositions,\r\n        containerPosition,\r\n        directionPosition,\r\n        fontFamily,\r\n\t\tprimaryColor,\r\n        navigationHader,\r\n\t\twindowWidth,\r\n\t\twindowHeight,\r\n        changePrimaryColor,\r\n        changeNavigationHader,\r\n        changeSideBarStyle,\r\n        sideBarStyle,\r\n        changeSideBarPostion,\r\n        sidebarpositions,\r\n        changeHeaderPostion,\r\n        headerposition,\r\n        changeSideBarLayout,\r\n        sidebarLayout,\r\n        changeDirectionLayout,\r\n        changeContainerPosition,\r\n        direction,\r\n        colors,\r\n        haderColor,\r\n        chnageHaderColor,\r\n        chnageSidebarColor,\r\n        sidebarColor,\r\n        iconHover,\r\n        menuToggle,\r\n        openMenuToggle,\r\n        changeBackground,\r\n        background,\r\n        containerPosition_,\r\n\t\tsetDemoTheme,\r\n\t}}\r\n    >\r\n      {props.children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeContextProvider;\r\n\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\r\n\r\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\r\nimport SimpleReactLightbox from \"simple-react-lightbox\";\r\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\"; \r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\r\n            <SimpleReactLightbox>\r\n                <BrowserRouter basename='/'>\r\n                    <ThemeContext>\r\n                        <App />\r\n                    </ThemeContext>  \r\n                </BrowserRouter>\r\n            </SimpleReactLightbox>\r\n\r\n\t</React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nreportWebVitals();\r\n"],"sourceRoot":""}