{"version":3,"sources":["main/webapp/api.js","main/webapp/jsx/layouts/SplitActionButton.js","main/webapp/jsx/components/Patient/PatientList.js","main/webapp/jsx/components/Home.js","main/webapp/jsx/components/Patient/PatientDetail.js","main/webapp/jsx/components/Patient/PostPatient.js","main/webapp/jsx/components/Patient/PatientCard.js","main/webapp/jsx/components/History/AddPharmacyOrder.js","main/webapp/jsx/components/History/EditPharmacyOrder.js","main/webapp/jsx/components/History/RecentHistory.js","main/webapp/jsx/components/History/PatientConsulationHistoryCard.js","main/webapp/jsx/components/History/PatientConsultationHistory.js","main/webapp/jsx/components/History/ViewPatientHistory.js","App.js","main/webapp/reportWebVitals.js","main/webapp/context/ThemeDemo.js","main/webapp/context/ThemeContext.js","index.js"],"names":["token","URLSearchParams","window","location","search","get","url","apiUrl","SplitActionButton","props","React","open","setOpen","anchorRef","useRef","handleClose","ButtonGroup","variant","ref","style","backgroundColor","height","width","actions","type","to","borderRight","Button","size","startIcon","icon","Typography","fontWeight","name","Divider","orientation","flexItem","marginTop","undefined","onClick","prevOpen","Popper","anchorEl","current","role","transition","disablePortal","zIndex","TransitionProps","placement","Grow","transformOrigin","Paper","sx","minWidth","maxWidth","ClickAwayListener","onClickAway","MenuList","id","autoFocusItem","slice","map","option","index","MenuItem","color","fontSize","Math","random","tableIcons","Add","forwardRef","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","Patients","makeStyles","theme","card","margin","spacing","display","flexDirection","alignItems","form","submit","cardBottom","marginBottom","Select","button","root","input","error","success","useState","patientList","setPatientList","axios","baseUrl","headers","then","response","data","catch","toast","position","POSITION","TOP_RIGHT","useEffect","patients","calculate_age","dob","today","Date","dateParts","split","dateObject","birthDate","age_now","getFullYear","m","getMonth","getDate","getHospitalNumber","identifier","hospitalNumber","find","obj","value","actionItems","row","console","log","pathname","state","patientObj","CardBody","icons","title","columns","field","filtering","firstName","surname","hospital_number","gender","age","dateOfBirth","moment","format","options","headerStyle","padding","searchFieldStyle","margingLeft","exportButton","searchFieldAlignment","pageSizeOptions","pageSize","debounceInterval","divStyle","borderRadius","Home","key","setKey","Row","Col","xl","className","Card","Body","Tabs","activeKey","onSelect","k","Tab","eventKey","heading","typography","pxToRem","secondaryHeading","palette","text","secondary","verticalAlign","details","column","flexBasis","helper","borderLeft","divider","unit","link","primary","main","textDecoration","PatientCard","CardContent","useStyles","newDate","PostPatient","selectedOption","setSelectedOption","classes","useHistory","services","setServices","saving","setSaving","filterService","filter","x","moduleServiceCode","Object","entries","label","moduleServiceName","ServicesPost","encounterDate","facilityId","personId","serviceCode","visitId","postServices","Modal","show","showModal","toggle","Header","onChange","isMulti","noOptionsMessage","Spinner","e","preventDefault","serviceArr","forEach","array","push","post","commenced","textTransform","withStyles","patientObjs","setpatientObj","modal","setModal","ExpansionPanel","defaultExpanded","ExpansionPanelSummary","expandIcon","md","root2","otherName","phoneNumber","contactPoint","getPhoneNumber","address","city","getAddress","floated","ExpansionPanelActions","PatientConsultationHistoryCard","visit","elevation","maxHeight","overflow","minHeight","scrollbarWidth","border","fontFamily","visitNotes","Table","borderColor","celled","Cell","presentingComplaints","presentingComplaint","complaint","onsetDate","severity","dateResolved","diagnosisList","diagnosis","order","certainty","gridItem","PatientConsultationHistory","history","selectedVisit","setSelectedVisit","patientConsultations","useCallback","length","Container","Grid","divided","Column","item","cellStyle","date","basic","loadConsultationDetails","float","toolbar","Widget","isLabEnabled","setIsLabEnabled","setIsPharmacyEnabled","hasAllergies","latestVitals","setLatestVitals","previousConsultation","setEncounterDate","useForm","handleSubmit","control","getValues","setError","setValue","inputFields","setInputFields","inputFieldsDiagnosis","setInputFieldsDiagnosis","labOrder","labTest","priority","status","inputFieldsLab","setInputFieldsLab","drugs","setDrugs","dosageUnits","setDosageUnits","durationUnits","setDurationUnits","encounterDateTime","drugName","dosageStrength","dosageStrengthUnit","dosageFrequency","startDate","duration","durationUnit","comments","orderedBy","dateTimePrescribed","editPharmacyOrder","setEditPharmacyOrder","onSubmit","labTests","inputFieldsDiag","inputField","InData","patientId","put","resp","orderDate","orderId","pharm","labGroups","setLabGroups","setLabTests","priorities","setPriorities","loadLabCheck","loadPharmacyCheck","loadLatestVitals","loadLabGroup","pharmacy_by_visitId","labtest_by_visitId","lab","tests","labId","description","labTestGroup","labTestGroupId","labTestId","orderPriority","labTestOrderStatus","labdata","drugRows","dosageUnitsRows","durationUnitsRows","loadDosageUnits","loadDurationUnits","loadPharmacyDrugs","handleInputChange","event","values","target","handleInputDiagChange","diagnosisOrder","handleInputLabChange","str","handleInputChangePharmacyOrderDto","drug","dosageUnit","Segment","Label","as","ribbon","List","Item","pulse","respiratoryRate","temperature","systolic","diastolic","bodyWeight","consultation","i","j","pointing","Group","errors","utils","DateFnsUtils","defaultValue","rules","required","render","rest","disableFuture","invalidDateMessage","fluid","placeholder","class","Footer","HeaderCell","handleAddFields","Icon","diagInputField","diagIndex","handleAddDiagFields","labInputField","labIndex","d","groupName","labTestName","handleAddFieldsLab","substring","brand","labelPosition","Content","Feed","Event","content","Summary","App","path","ViewPatientHistory","PatientDetail","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","direction","dezThemeSet","version","layout","headerBg","navheaderBg","sidebarBg","sidebarStyle","sidebarPosition","headerPosition","containerLayout","ThemeContext","createContext","ThemeContextProvider","sideBarStyle","setSideBarStyle","sidebarposition","setSidebarposition","headerposition","setHeaderposition","sidebarLayout","setSidebarLayout","setDirection","primaryColor","setPrimaryColor","navigationHader","setNavigationHader","haderColor","setHaderColor","sidebarColor","setSidebarColor","iconHover","setIconHover","menuToggle","setMenuToggle","background","setBackground","containerPosition_","setcontainerPosition_","body","document","querySelector","windowWidth","setWindowWidth","windowHeight","setWindowHeight","changePrimaryColor","setAttribute","changeNavigationHader","chnageHaderColor","chnageSidebarColor","changeSideBarPostion","changeDirectionLayout","html","changeSideBarLayout","changeSideBarStyle","alert","changeHeaderPostion","changeBackground","changeContainerPosition","resizeWindow","innerWidth","innerHeight","addEventListener","removeEventListener","Provider","sideBarOption","layoutOption","backgroundOption","headerPositions","containerPosition","directionPosition","sidebarpositions","colors","openMenuToggle","setDemoTheme","setAttr","themeSettings","children","ReactDOM","StrictMode","basename","getElementById"],"mappings":"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","file":"static/js/main.a5f19c6b.chunk.js","sourcesContent":["export const  token = (new URLSearchParams(window.location.search)).get(\"jwt\")\r\nexport const url = '/api/v1/'\r\nexport const apiUrl = '/api/v1/'\r\n\r\n\r\n\r\n/*\r\nexport const url =  'http://localhost:8282/api/v1/';\r\nexport const apiUrl =  'http://localhost:8282/api/';\r\nexport const  token = 'eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJndWVzdEBsYW1pc3BsdXMub3JnIiwiYXV0aCI6IlN1cGVyIEFkbWluIiwibmFtZSI6Ikd1ZXN0IEd1ZXN0IiwiZXhwIjoxNjU4Njg4MTc1fQ.P6w22Ed9tW9kNM_ANy8Mlc-s58wpHh0SagUPK62Hzz-BFiJje1E_O-YnKTzkw8Ibz5orglYNIbdv8A5wSSWwQQ';\r\n*/\r\n","import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport ButtonGroup from '@mui/material/ButtonGroup';\r\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\r\nimport Grow from '@mui/material/Grow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Popper from '@mui/material/Popper';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport MenuList from '@mui/material/MenuList';\r\nimport Typography from '@mui/material/Typography';\r\nimport {FaEye, FaCaretDown } from \"react-icons/fa\";\r\nimport Divider from '@mui/material/Divider';\r\nimport {useRef} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\n\r\nconst options = ['Delete', 'Edit'];\r\n\r\n\r\n\r\nexport default function SplitActionButton(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n    const anchorRef = useRef(null);\r\n    const [selectedIndex, setSelectedIndex] = React.useState(1);\r\n\r\n    const handleMenuItemClick = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleToggle = () => {\r\n        setOpen((prevOpen) => !prevOpen);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ButtonGroup variant=\"contained\" ref={anchorRef} style={{backgroundColor:'rgb(153, 46, 98)', height:'30px',width:`${ props.actions[0].type === 'single' ?'auto':'150px'}`}} >\r\n\r\n                <Link to={props.actions[0].actions[0].to} style={{borderRight:'20px solid #fff !important'}}>\r\n                    <Button size=\"small\" variant=\"contained\" startIcon={props.actions[0].actions[0].icon} style={{backgroundColor:'rgb(153, 46, 98)'}}>\r\n                        <Typography variant=\"h7\" style={{fontWeight:'bolder'}}>{props.actions[0].actions[0].name}</Typography>\r\n                    </Button>\r\n                </Link>\r\n\r\n                {props.actions[0].type === 'multiple'&&\r\n                    <>\r\n                        <Divider orientation=\"vertical\" flexItem style={{borderRight:'20px solid #fff !important', backgroundColor:'#fff',width:'1px', height:'26px',marginTop:'2px'}}>\r\n                            1\r\n                        </Divider>\r\n                        <Button\r\n                            size=\"medium\"\r\n                            aria-controls={open ? 'split-button-menu' : undefined}\r\n                            aria-expanded={open ? 'true' : undefined}\r\n                            aria-label=\"select merge strategy\"\r\n                            aria-haspopup=\"menu\"\r\n                            onClick={handleToggle}\r\n                            style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                        >\r\n                            <FaCaretDown size='24' />\r\n                        </Button>\r\n                    </>\r\n                }\r\n\r\n            </ButtonGroup>\r\n            {props.actions[0].type === 'multiple'&&\r\n                <>\r\n                    <Popper\r\n                        open={open}\r\n                        anchorEl={anchorRef.current}\r\n                        role={undefined}\r\n                        transition\r\n                        disablePortal\r\n                        style={{ zIndex:'10000' }}\r\n                    >\r\n                        {({ TransitionProps, placement }) => (\r\n                            <Grow\r\n                                {...TransitionProps}\r\n                                style={{\r\n                                    transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom',\r\n                                    zIndex:'1000'\r\n                                }}\r\n                            >\r\n                                width: 130,\r\n                                <Paper sx={{ minWidth:'130px', maxWidth: '150px', marginTop:'2px', zIndex:'1000' }}>\r\n                                    <ClickAwayListener onClickAway={handleClose}>\r\n                                        <MenuList id=\"split-button-menu\" autoFocusItem>\r\n                                            {props.actions[0].actions.slice(1).map((option, index) => (\r\n                                                <MenuItem\r\n                                                    key={Math.random()}\r\n                                                >\r\n                                                    <Link\r\n                                                        to={option.to}\r\n                                                    >\r\n                                                        {option.icon}<span style={{color: 'rgb(153, 46, 98)', fontWeight:'bolder', fontSize:'12px'}}>{option.name}</span>\r\n                                                    </Link>\r\n\r\n                                                </MenuItem>\r\n                                            ))}\r\n                                        </MenuList>\r\n                                    </ClickAwayListener>\r\n                                </Paper>\r\n                            </Grow>\r\n                        )}\r\n                    </Popper>\r\n                </>\r\n            }\r\n\r\n\r\n        </React.Fragment>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from '@material-table/core';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl, token } from \"./../../../api\";\r\n\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport {  Card,CardBody,} from 'reactstrap';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport {Menu,MenuList,MenuButton,MenuItem,} from \"@reach/menu-button\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport moment from \"moment\";\r\nimport {toast} from \"react-toastify\";\r\nimport {MdDeleteForever, MdModeEdit, MdPerson} from \"react-icons/md\";\r\nimport {FaEye, FaCaretDown } from \"react-icons/fa\";\r\nimport SplitActionButton from \"../../layouts/SplitActionButton\";\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}))\r\n\r\n\r\nconst Patients = (props) => {\r\n\r\n    const [patientList, setPatientList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        patients()\r\n    }, []);\r\n    ///GET LIST OF Patients\r\n    async function patients() {\r\n        axios\r\n            .get(`${baseUrl}patient/checked-in-by-service/consultation-code`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setPatientList(response.data);\r\n            })\r\n            .catch((error) => {\r\n                toast.error(\"An error occurred while fetching checked-in patients\", {\r\n                    position: toast.POSITION.TOP_RIGHT\r\n                });\r\n            });\r\n    }\r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n        if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n            age_now--;\r\n        }\r\n        if (age_now === 0) {\r\n            return m + \" month(s)\";\r\n        }\r\n        return age_now + \" year(s)\";\r\n    };\r\n\r\n    const getHospitalNumber = (identifier) => {\r\n        const identifiers = identifier;\r\n        const hospitalNumber = identifiers.identifier.find(obj => obj.type == 'HospitalNumber');\r\n        return hospitalNumber ? hospitalNumber.value : '';\r\n    };\r\n\r\n\r\n    function actionItems(row){\r\n        console.log(row)\r\n        return  [\r\n            {\r\n                type:'single',\r\n                actions:[\r\n                    {\r\n                        name:'Dashboard',\r\n                        type:'link',\r\n                        icon:<FaEye  size=\"22\"/>,\r\n                        to:{\r\n                            pathname: \"/patient-history\",\r\n                            state: { patientObj: row  }\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n\r\n        ]\r\n    }\r\n    //console.log(patientList)\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <CardBody>\r\n\r\n\r\n                    <MaterialTable\r\n                        icons={tableIcons}\r\n                        title=\"Find Patient \"\r\n                        columns={[\r\n                            // { title: \" ID\", field: \"Id\" },\r\n                            {\r\n                                title: \"Patient Name\",\r\n                                field: \"name\",\r\n                            },\r\n                            { title: \"Hospital Number\", field: \"hospital_number\", filtering: false },\r\n                            { title: \"Gender\", field: \"gender\", filtering: false },\r\n                            { title: \"Age\", field: \"age\", filtering: false },\r\n                            { title: \"Actions\", field: \"actions\", filtering: false },\r\n                        ]}\r\n                        data={ patientList.map((row) => ({\r\n\r\n                            name:row.firstName + \" \" + row.surname,\r\n                            hospital_number: getHospitalNumber(row.identifier),\r\n                            gender:row.gender.display,\r\n                            age: (row.dateOfBirth === 0 ||\r\n                                row.dateOfBirth === undefined ||\r\n                                row.dateOfBirth === null ||\r\n                                row.dateOfBirth === \"\" )\r\n                                ? 0\r\n                                : calculate_age(moment(row.dateOfBirth).format(\"DD-MM-YYYY\")),\r\n\r\n                            actions:<SplitActionButton actions={actionItems(row)} />\r\n\r\n                        }))}\r\n\r\n                        options={{\r\n                            headerStyle: {\r\n                                backgroundColor: \"#014d88\",\r\n                                color: \"#fff\",\r\n                                fontSize:'16px',\r\n                                padding:'10px',\r\n                                fontWeight:'bolder'\r\n                            },\r\n                            searchFieldStyle: {\r\n                                width : '200%',\r\n                                margingLeft: '250px',\r\n                            },\r\n                            filtering: false,\r\n                            exportButton: false,\r\n                            searchFieldAlignment: 'left',\r\n                            pageSizeOptions:[10,20,100],\r\n                            pageSize:10,\r\n                            debounceInterval: 400\r\n                        }}\r\n                    />\r\n\r\n                </CardBody>\r\n            </Card>\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Patients;\r\n\r\n\r\n","import React, {useState, Fragment } from \"react\";\r\nimport { Row, Col, Card,  Tab, Tabs, } from \"react-bootstrap\";\r\nimport Dashboard from './Patient/PatientList'\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nconst divStyle = {\r\n  borderRadius: \"2px\",\r\n  fontSize: 14,\r\n};\r\n\r\nconst Home = () => {\r\n    const [key, setKey] = useState('home');\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      <Row>\r\n       \r\n        <Col xl={12}>\r\n          <div className=\"row page-titles mx-0\" style={{marginTop:\"0.5px\"}}>\r\n            <ol className=\"breadcrumb\">\r\n              <li className=\"breadcrumb-item active\"><Link to={`#`}>Consultation</Link></li>\r\n              <li className=\"breadcrumb-item  \"><Link to={`#`}>Patient List</Link></li>\r\n            </ol>\r\n          </div>\r\n          <Card style={divStyle}>\r\n            \r\n            <Card.Body>\r\n              {/* <!-- Nav tabs --> */}\r\n              <div className=\"custom-tab-1\">\r\n                <Tabs\r\n                    id=\"controlled-tab-example\"\r\n                    activeKey={key}\r\n                    onSelect={(k) => setKey(k)}\r\n                    className=\"mb-3\"\r\n                >\r\n                  <Tab eventKey=\"home\" title=\"Checked In Patients\">                   \r\n                    <Dashboard />\r\n                  </Tab>\r\n                                    \r\n                </Tabs>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        \r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n/*import { Link } from 'react-router-dom'\r\nimport ButtonMui from \"@material-ui/core/Button\";*/\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\n/*\r\nimport PatientCardDetail from './PatientCard'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {   Tab, Tabs, } from \"react-bootstrap\";\r\nimport RecentHistory from './../History/RecentHistory';\r\n*/\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: '100%',\r\n    },\r\n    heading: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n    },\r\n    secondaryHeading: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n      color: theme.palette.text.secondary,\r\n    },\r\n    icon: {\r\n      verticalAlign: 'bottom',\r\n      height: 20,\r\n      width: 20,\r\n    },\r\n    details: {\r\n      alignItems: 'center',\r\n    },\r\n    column: {\r\n      flexBasis: '20.33%',\r\n    },\r\n    helper: {\r\n      borderLeft: `2px solid ${theme.palette.divider}`,\r\n      padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n    },\r\n    link: {\r\n      color: theme.palette.primary.main,\r\n      textDecoration: 'none',\r\n      '&:hover': {\r\n        textDecoration: 'underline',\r\n      },\r\n    }\r\n}));\r\n\r\n\r\nfunction PatientCard(props) {\r\n  console.log('here we are 3')\r\n/*    let history = useHistory();\r\n    const [key, setKey] = useState('home');*/\r\n    /*const { classes } = props;*/\r\n   /* const patientObj = history.location && history.location.state ? history.location.state.patientObj : {}*/\r\n\r\n    //console.log(\"p-details \",patientObj);\r\n\r\n  return (\r\n    /*<div className={classes.root}>*/\r\n    <div>\r\n      <Card >\r\n        <CardContent>\r\n{/*\r\n            <PatientCardDetail patientObj={patientObj}/>\r\n*/}\r\n{/*\r\n            <RecentHistory patientObj={patientObj} />*/}\r\n         </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default PatientCard;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl, token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport {format} from 'date-fns';\r\nimport 'react-summernote/dist/react-summernote.css'; // import styles\r\nimport { Spinner } from \"reactstrap\";\r\nimport Select from \"react-select\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}))\r\nlet newDate = new Date()\r\n\r\nconst PostPatient = (props) => {\r\n    const patientObj = props.patientObj;\r\n    //console.log(patientObj)\r\n    const [selectedOption, setSelectedOption] = useState();\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [services, setServices]= useState([]);\r\n    //const [values, setValues] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n\r\n    useEffect(() => {\r\n        ServicesPost()\r\n    }, []);\r\n    ///GET LIST OF Post Services\r\n    async function ServicesPost() {\r\n        axios\r\n            .get(`${baseUrl}patient/vital-sign/post-service`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                const filterService = response.data.filter((x) => x.moduleServiceCode!=='consultation-code')\r\n\r\n                setServices(\r\n                    Object.entries(filterService).map(([key, value]) => ({\r\n                        label: value.moduleServiceName,\r\n                        value: value.moduleServiceCode,\r\n                    })))\r\n\r\n            })\r\n            .catch((error) => {\r\n            });\r\n    }\r\n\r\n    const [postServices, setPostServices]= useState({\r\n        encounterDate:format(new Date(newDate), 'yyyy-MM-dd'),\r\n        facilityId: 1,\r\n        personId:\"\",\r\n        serviceCode:\"\",\r\n        visitId: \"\"\r\n    })\r\n\r\n\r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        setSaving(true);\r\n        let serviceArr = []\r\n        selectedOption.forEach(function (value, index, array) {\r\n            serviceArr.push(value['value'])\r\n        })\r\n        postServices.personId=patientObj.id\r\n        postServices.visitId=patientObj.visitId\r\n        postServices.serviceCode=serviceArr\r\n        axios.post(`${baseUrl}patient/post`, postServices,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n\r\n        )\r\n            .then(response => {\r\n                setSaving(false);\r\n                props.patientObj.commenced=true\r\n                toast.success(\"Service Checkin successful\");\r\n                props.toggle()\r\n                //props.patientsVitalsSigns()\r\n\r\n            })\r\n            .catch(error => {\r\n                setSaving(false);\r\n                toast.error(\"Something went wrong\");\r\n\r\n            });\r\n\r\n    }\r\n\r\n    return (\r\n        <div >\r\n\r\n            <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n                <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                    Post Patient\r\n                    <Button\r\n                        variant=\"\"\r\n                        className=\"btn-close\"\r\n                        onClick={props.toggle}\r\n                    ></Button>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Card >\r\n                        <CardBody>\r\n                            <form >\r\n                                <div className=\"row\">\r\n\r\n                                    <Select\r\n                                        onChange={setSelectedOption}\r\n                                        value={selectedOption}\r\n                                        options={services}\r\n                                        isMulti=\"true\"\r\n                                        noOptionsMessage=\"true\"\r\n                                    />\r\n\r\n                                </div>\r\n\r\n                                {saving ? <Spinner /> : \"\"}\r\n                                <br />\r\n\r\n                                <MatButton\r\n                                    type=\"submit\"\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    className={classes.button}\r\n                                    startIcon={<SaveIcon />}\r\n                                    onClick={handleSubmit}\r\n                                >\r\n                                    {!saving ? (\r\n                                        <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                    ) : (\r\n                                        <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                    )}\r\n                                </MatButton>\r\n\r\n                            </form>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Modal.Body>\r\n\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PostPatient;\r\n","import React, {useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { Button } from 'semantic-ui-react';\r\nimport {Label,} from \"semantic-ui-react\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Col, Row } from \"reactstrap\";\r\n\r\nimport moment from \"moment\";\r\nimport PostPatient from './PostPatient'\r\nimport { Link } from 'react-router-dom'\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { TiArrowBack } from 'react-icons/ti'\r\n\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\nfunction PatientCard(props) {\r\n  const { classes } = props;\r\n  const patientObjs = props.patientObj ? props.patientObj : {}\r\n  console.log(patientObjs)\r\n  const [patientObj, setpatientObj] = useState(patientObjs)\r\n  const [modal, setModal] = useState(false);\r\n  const toggle = () => setModal(!modal);\r\n\r\n\r\n    const calculate_age = dob => {\r\n      var today = new Date();\r\n      var dateParts = dob.split(\"-\");\r\n      var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n      var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n      var age_now = today.getFullYear() - birthDate.getFullYear();\r\n      var m = today.getMonth() - birthDate.getMonth();\r\n          if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                  age_now--;\r\n              }\r\n          if (age_now === 0) {\r\n                  return m + \" month(s)\";\r\n              }\r\n              return age_now + \" year(s)\";\r\n    };\r\n\r\n  \r\n    const CurrentStatus = ()=>{\r\n\r\n        return (  <Label color=\"blue\" size=\"mini\">Active</Label>);\r\n}\r\n\r\n    const getHospitalNumber = (identifier) => {\r\n      const identifiers = identifier;\r\n      const hospitalNumber = identifiers.identifier.find(obj => obj.type == 'HospitalNumber');\r\n      return hospitalNumber ? hospitalNumber.value : '';\r\n    };\r\n\r\n    const getPhoneNumber = (identifier) => {\r\n      const identifiers = identifier;\r\n      const phoneNumber = identifiers.contactPoint.find(obj => obj.type == 'phone');\r\n      return phoneNumber ? phoneNumber.value : '';\r\n    };\r\n\r\n    const getAddress = (identifier) => {\r\n      const identifiers = identifier;\r\n      const address = identifiers.address.find(obj => obj.city);\r\n      return address ? address.city : '';\r\n    };\r\n\r\n    const PostPatientService =(row)=> {\r\n      setpatientObj({...patientObj, ...row});\r\n      setModal(!modal)\r\n    }\r\n\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n        <ExpansionPanel defaultExpanded>\r\n            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n\r\n                <Row>\r\n\r\n\r\n                    <Col md={11}>\r\n                        <Row className={\"mt-1\"}>\r\n                            <Col md={12} className={classes.root2} >\r\n                                <b style={{fontSize: \"25px\", color:'rgb(153, 46, 98)'}}>\r\n                                    {patientObj.surname + \", \" + patientObj.firstName + \" \" + patientObj.otherName}\r\n                                    < span style={{color:'green'}}>\r\n                                             {\": \"+\"Active\"}\r\n                                        </span>\r\n                                </b>\r\n\r\n                            </Col>\r\n                            <Col md={4} className={classes.root2} style={{marginTop:\"10px\"}}>\r\n                                    <span>\r\n                                        {\" \"}\r\n                                        Hospital Number : <b style={{color:'#0B72AA'}}>{getHospitalNumber(patientObj.identifier) }</b>\r\n                                    </span>\r\n                            </Col>\r\n\r\n                            <Col md={4} className={classes.root2} style={{marginTop:\"10px\"}}>\r\n                                    <span>\r\n                                        Date Of Birth : <b style={{color:'#0B72AA'}}>{patientObj.dateOfBirth }</b>\r\n                                    </span>\r\n                            </Col>\r\n                            <Col md={4} className={classes.root2} style={{marginTop:\"10px\"}}>\r\n                                <span>\r\n                                    {\" \"}\r\n                                    Age : <b style={{color:'#0B72AA'}}>{calculate_age(patientObj.dateOfBirth) }</b>\r\n                                </span>\r\n                            </Col>\r\n                            <Col md={4} style={{marginTop:\"10px\"}}>\r\n                                    <span>\r\n                                        {\" \"}\r\n                                        Gender :{\" \"}\r\n                                        <b style={{color:'#0B72AA'}}>{patientObj.gender.display }</b>\r\n                                    </span>\r\n\r\n                            </Col>\r\n                            <Col md={4} className={classes.root2} style={{marginTop:\"10px\"}}>\r\n                                <span>\r\n                                    {\" \"}\r\n                                    Phone Number : <b style={{color:'#0B72AA'}}>{getPhoneNumber(patientObj.contactPoint)}</b>\r\n                                </span>\r\n                            </Col>\r\n                            <Col md={4} className={classes.root2} style={{marginTop:\"10px\"}}>\r\n                                <span>\r\n                                    {\" \"}\r\n                                    Address : <b style={{color:'#0B72AA'}}>{getAddress(patientObj.address)} </b>\r\n                                </span>\r\n\r\n                            </Col>\r\n\r\n\r\n                        </Row>\r\n                    </Col>\r\n                    <div className=\"float-end\" style={{floated:'right'}}>\r\n                        {\" \"}<Link to={\"/\"} >\r\n                        <Button\r\n                            floated='right'\r\n                            style={{padding:'0px'}}\r\n                        >\r\n                            <MatButton\r\n                                variant=\"contained\"\r\n                                floated='right'\r\n                                startIcon={<TiArrowBack  />}\r\n                                style={{backgroundColor:\"rgb(153, 46, 98)\", color:'#fff', height:'35px'}}\r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\" }}>Back</span>\r\n                            </MatButton>\r\n                        </Button>\r\n\r\n                    </Link>\r\n\r\n                                {\" \"}<Button  floated='right'  style={{backgroundColor:\"#014d88\", color:'#fff',height:'35px'}} onClick={() => PostPatientService(patientObj)}>Post Patient</Button>\r\n\r\n\r\n                    </div>\r\n                </Row>\r\n\r\n            </ExpansionPanelSummary>\r\n            <Divider />\r\n            <ExpansionPanelActions expandIcon={<ExpandMoreIcon />}>\r\n\r\n            </ExpansionPanelActions>\r\n        </ExpansionPanel>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            <PostPatient toggle={toggle} showModal={modal} patientObj={patientObj} />\r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, {Fragment, useState, useCallback, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input, InputGroup,InputGroupText} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport {token, url as baseUrl, apiUrl as apiUrl } from \"../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport {format} from \"date-fns\";\r\n\r\nimport 'react-summernote/dist/react-summernote.css'; // import styles\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}));\r\n\r\nconst AddPharmacyOrder = (props) => {\r\n    const patientObj = props.patientObj;\r\n    const [saving, setSaving] = useState(false);\r\n    const classes = useStyles();\r\n    const [drugs, setDrugs] = useState([]);\r\n    const [dosageUnits, setDosageUnits] = useState([]);\r\n    const [durationUnits, setDurationUnits] = useState([]);\r\n\r\n    const [pharmacyOrder, setPharmacyOrder] = useState({\r\n        encounterDateTime: format(new Date(), 'yyyy-MM-dd'),\r\n        drugName: \"\",\r\n        dosageStrength: \"\",\r\n        dosageStrengthUnit: \"\",\r\n        dosageFrequency: \"\",\r\n        startDate: \"\",\r\n        duration: \"\",\r\n        durationUnit: \"\",\r\n        comments: \"\",\r\n        patientId: patientObj.id,\r\n        orderedBy: \"\",\r\n        dateTimePrescribed: \"\",\r\n        visitId: patientObj.visitId\r\n    });\r\n\r\n    const handleInputChangePharmacyOrderDto = e => {\r\n        setPharmacyOrder({...pharmacyOrder, [e.target.name]: e.target.value});\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        try {\r\n            e.preventDefault();\r\n            setSaving(true);\r\n            pharmacyOrder.encounterDateTime = format(new Date(), 'yyyy-MM-dd@hh:mm:ss');\r\n            pharmacyOrder.dateTimePrescribed = format(new Date(), 'yyyy-MM-dd@hh:mm:ss');\r\n\r\n            console.log(pharmacyOrder)\r\n            await axios.post(`${apiUrl}drug-orders`, { \"drugOrders\": [pharmacyOrder] },\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}}).then(resp => {\r\n            console.log(\"drug saved\");\r\n             toast.success(\"Successfully Saved drug order!\", {\r\n                            position: toast.POSITION.TOP_RIGHT\r\n                        });\r\n            });\r\n            setSaving(false);\r\n            props.toggle()\r\n        } catch (e) {\r\n            toast.error(\"An error occurred while saving drug prescription\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n    };\r\n\r\n    const loadDosageUnits = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/DOSE_STRENGTH_UNIT`, { headers: {\"Authorization\" : `Bearer ${token}`}});\r\n            setDosageUnits(response.data);\r\n        } catch (e) {\r\n            toast.error(\"An error occurred while fetching DOSE STRENGTH UNIT\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    const loadDurationUnits = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/AGE_UNIT`, { headers: {\"Authorization\" : `Bearer ${token}`}});\r\n            setDurationUnits(response.data);\r\n        } catch (e) {\r\n            toast.error(\"An error occurred while fetching DOSE STRENGTH UNIT\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    const loadPharmacyDrugs = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${apiUrl}drugs`, { headers: {\"Authorization\" : `Bearer ${token}`}});\r\n            //console.log(\"drugs\", response.data[0].id)\r\n            if (response.data[0].id > 0) {\r\n                 setDrugs(response.data);\r\n            }\r\n        } catch (e) {\r\n            toast.error(\"An error occurred while fetching drugs\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        loadPharmacyDrugs();\r\n        loadDosageUnits();\r\n        loadDurationUnits();\r\n    }, [loadPharmacyDrugs, loadDosageUnits, loadDurationUnits]);\r\n\r\n    let drugRows = null;\r\n    let dosageUnitsRows = null;\r\n    let durationUnitsRows = null;\r\n    if (drugs && drugs.length > 0) {\r\n        //console.log(\"drugs\", drugs);\r\n        drugRows = drugs.map((drug, index) => (\r\n            <option key={drug.name} value={drug.name}>{drug.name}</option>\r\n        ));\r\n    }\r\n    if (dosageUnits && dosageUnits.length > 0) {\r\n        dosageUnitsRows = dosageUnits.map((dosageUnit, index) => (\r\n            <option key={dosageUnit.display} value={dosageUnit.display}>{dosageUnit.display}</option>\r\n        ));\r\n    }\r\n    if (durationUnits && durationUnits.length > 0) {\r\n        durationUnitsRows = durationUnits.map((durationUnit, index) => (\r\n            <option key={durationUnit.display} value={durationUnit.display}>{durationUnit.display}</option>\r\n        ));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n                <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                    Drug Prescription\r\n                    <Button\r\n                        variant=\"\"\r\n                        className=\"btn-close\"\r\n                        onClick={props.toggle}\r\n                    ></Button>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Card >\r\n                        <CardBody>\r\n                            <form>\r\n                                <div className=\"row\">\r\n                                    <div className=\"form-group  mb-3\">\r\n                                        <FormGroup>\r\n                                            <Label>Encounter Date</Label>\r\n                                            <InputGroup>\r\n                                                <Input\r\n                                                    type=\"date\"\r\n                                                    name=\"encounterDateTime\"\r\n                                                    id=\"encounterDateTime\"\r\n                                                    onChange={handleInputChangePharmacyOrderDto}\r\n                                                    value={pharmacyOrder.encounterDateTime}\r\n                                                />\r\n                                            </InputGroup>\r\n\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"row\">\r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                            <Label>Select Drugs</Label>\r\n                                            <InputGroup>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"drugName\"\r\n                                                    id=\"drugName\"\r\n                                                    onChange={handleInputChangePharmacyOrderDto}\r\n                                                    value={pharmacyOrder.drugName}\r\n                                                >\r\n                                                    <option value={\"\"}></option>\r\n                                                    {drugRows}\r\n                                                </Input>\r\n                                            </InputGroup>\r\n                                        </FormGroup>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                            <Label>Dosage Strength</Label>\r\n                                            <InputGroup>\r\n                                                <Input\r\n                                                    type=\"text\"\r\n                                                    name=\"dosageStrength\"\r\n                                                    id=\"dosageStrength\"\r\n                                                    onChange={handleInputChangePharmacyOrderDto}\r\n                                                    value={pharmacyOrder.dosageStrength}\r\n                                                />\r\n\r\n                                            </InputGroup>\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                            <Label>Dosage Unit</Label>\r\n                                            <InputGroup>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"dosageStrengthUnit\"\r\n                                                    id=\"dosageStrengthUnit\"\r\n                                                    onChange={handleInputChangePharmacyOrderDto}\r\n                                                    value={pharmacyOrder.dosageStrengthUnit}\r\n                                                >\r\n                                                    <option value={\"\"}></option>\r\n                                                    {dosageUnitsRows}\r\n                                                </Input>\r\n                                            </InputGroup>\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"row\">\r\n                                    <div className=\"form-group mb-3\">\r\n                                        <FormGroup>\r\n                                            <Label>Drug Brand Name</Label>\r\n                                            <InputGroup>\r\n                                                <Input\r\n                                                    type=\"text\"\r\n                                                    name=\"brand\"\r\n                                                    id=\"brand\"\r\n                                                    onChange={handleInputChangePharmacyOrderDto}\r\n                                                    value={pharmacyOrder.brand}\r\n                                                />\r\n\r\n                                            </InputGroup>\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"row\">\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                            <Label>Dose Frequency</Label>\r\n                                            <InputGroup>\r\n                                                <Input\r\n                                                    type=\"text\"\r\n                                                    name=\"dosageFrequency\"\r\n                                                    id=\"dosageFrequency\"\r\n                                                    onChange={handleInputChangePharmacyOrderDto}\r\n                                                    value={pharmacyOrder.dosageFrequency}\r\n                                                />\r\n\r\n                                            </InputGroup>\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                            <Label>Start Date</Label>\r\n                                            <InputGroup>\r\n                                                <Input\r\n                                                    type=\"date\"\r\n                                                    name=\"startDate\"\r\n                                                    id=\"startDate\"\r\n                                                    onChange={handleInputChangePharmacyOrderDto}\r\n                                                    value={pharmacyOrder.startDate}\r\n                                                />\r\n                                            </InputGroup>\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                            <Label>Duration</Label>\r\n                                            <InputGroup>\r\n                                                <Input\r\n                                                    type=\"text\"\r\n                                                    name=\"duration\"\r\n                                                    id=\"duration\"\r\n                                                    onChange={handleInputChangePharmacyOrderDto}\r\n                                                    value={pharmacyOrder.duration}\r\n                                                />\r\n\r\n                                            </InputGroup>\r\n                                        </FormGroup>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                            <Label>Duration Unit</Label>\r\n                                            <InputGroup>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"durationUnit\"\r\n                                                    id=\"durationUnit\"\r\n                                                    onChange={handleInputChangePharmacyOrderDto}\r\n                                                    value={pharmacyOrder.durationUnit}\r\n                                                >\r\n                                                    <option value={\"\"}></option>\r\n                                                    {durationUnitsRows}\r\n                                                </Input>\r\n                                            </InputGroup>\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"row\">\r\n                                    <div className=\"form-group mb-3\">\r\n                                        <FormGroup>\r\n                                            <Label>Other Instructions</Label>\r\n                                            <InputGroup>\r\n                                                <Input\r\n                                                    type=\"textarea\"\r\n                                                    name=\"comments\"\r\n                                                    id=\"comments\"\r\n                                                    onChange={handleInputChangePharmacyOrderDto}\r\n                                                    value={pharmacyOrder.comments}\r\n                                                />\r\n\r\n                                            </InputGroup>\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n\r\n                                {saving ? <Spinner /> : \"\"}\r\n                                <br />\r\n\r\n                                <MatButton\r\n                                    type=\"submit\"\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    className={classes.button}\r\n                                    startIcon={<SaveIcon />}\r\n                                    onClick={handleSubmit}\r\n                                >\r\n                                    {!saving ? (\r\n                                        <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                    ) : (\r\n                                        <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                    )}\r\n                                </MatButton>\r\n\r\n                                <MatButton\r\n                                    variant=\"contained\"\r\n                                    className={classes.button}\r\n                                    startIcon={<CancelIcon />}\r\n                                    onClick={props.toggle}\r\n                                >\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\r\n                                </MatButton>\r\n\r\n                            </form>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddPharmacyOrder;\r\n","import React, {Fragment, useState, useCallback, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input, InputGroup,InputGroupText} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport {token, url as baseUrl, apiUrl as apiUrl } from \"../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport {format} from \"date-fns\";\r\n\r\nimport 'react-summernote/dist/react-summernote.css'; // import styles\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}));\r\n\r\nconst EditPharmacyOrder = (props) => {\r\n    const patientObj = props.patientObj;\r\n    const pharmacyOrder = props.editPharmacyOrderValue;\r\n    const [saving, setSaving] = useState(false);\r\n    const classes = useStyles();\r\n    const [drugs, setDrugs] = useState([]);\r\n    const [dosageUnits, setDosageUnits] = useState([]);\r\n    const [durationUnits, setDurationUnits] = useState([]);\r\n\r\n    const [pharmacyOrderEdit, setPharmacyOrderEdit] = useState({\r\n       encounterDateTime: \"\",\r\n       drugName: \"\",\r\n       dosageStrength: \"\",\r\n       dosageStrengthUnit: \"\",\r\n       dosageFrequency: \"\",\r\n       startDate: \"\",\r\n       duration: \"\",\r\n       durationUnit: \"\",\r\n       comments: \"\",\r\n       patientId: patientObj.id,\r\n       orderedBy: \"\",\r\n       dateTimePrescribed: \"\",\r\n       visitId: patientObj.visitId\r\n   });\r\n\r\n    const handleInputChangePharmacyOrderDto = e => {\r\n        console.log(e)\r\n        setPharmacyOrderEdit({...pharmacyOrderEdit, [e.target.name]: e.target.value});\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        try {\r\n            e.preventDefault();\r\n            setSaving(true);\r\n\r\n            console.log(pharmacyOrder)\r\n\r\n//            axios.put(`${apiUrl}drug-orders/${pharmacyOrder.id}`, pharmacyOrder,\r\n//            { headers: {\"Authorization\" : `Bearer ${token}`}}).then(resp => {\r\n//                console.log(\"drug updated successfully\", resp );\r\n//                 toast.success(\"Successfully Saved drug order!\", {\r\n//                    position: toast.POSITION.TOP_RIGHT\r\n//                });\r\n//            });\r\n//\r\n\r\n            setSaving(false);\r\n            props.toggle()\r\n        } catch (e) {\r\n            toast.error(\"An error occurred while saving drug prescription\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n    };\r\n\r\n    const loadDosageUnits = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/DOSE_STRENGTH_UNIT`, { headers: {\"Authorization\" : `Bearer ${token}`}});\r\n            setDosageUnits(response.data);\r\n        } catch (e) {\r\n            toast.error(\"An error occurred while fetching DOSE STRENGTH UNIT\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    const loadDurationUnits = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/AGE_UNIT`, { headers: {\"Authorization\" : `Bearer ${token}`}});\r\n            setDurationUnits(response.data);\r\n        } catch (e) {\r\n            toast.error(\"An error occurred while fetching DOSE STRENGTH UNIT\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    const loadPharmacyDrugs = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${apiUrl}drugs`, { headers: {\"Authorization\" : `Bearer ${token}`}});\r\n            //console.log(\"drugs\", response.data[0].id)\r\n            if (response.data[0].id > 0) {\r\n                 setDrugs(response.data);\r\n            }\r\n        } catch (e) {\r\n            toast.error(\"An error occurred while fetching drugs\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        loadPharmacyDrugs();\r\n        loadDosageUnits();\r\n        loadDurationUnits();\r\n    }, [loadPharmacyDrugs, loadDosageUnits, loadDurationUnits]);\r\n\r\n    let drugRows = null;\r\n    let dosageUnitsRows = null;\r\n    let durationUnitsRows = null;\r\n    if (drugs && drugs.length > 0) {\r\n        //console.log(\"drugs\", drugs);\r\n        drugRows = drugs.map((drug, index) => (\r\n            <option key={drug.name} value={drug.name}>{drug.name}</option>\r\n        ));\r\n    }\r\n    if (dosageUnits && dosageUnits.length > 0) {\r\n        dosageUnitsRows = dosageUnits.map((dosageUnit, index) => (\r\n            <option key={dosageUnit.display} value={dosageUnit.display}>{dosageUnit.display}</option>\r\n        ));\r\n    }\r\n    if (durationUnits && durationUnits.length > 0) {\r\n        durationUnitsRows = durationUnits.map((durationUnit, index) => (\r\n            <option key={durationUnit.display} value={durationUnit.display}>{durationUnit.display}</option>\r\n        ));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n                <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                    Patient Drug Prescription\r\n                    <Button\r\n                        variant=\"\"\r\n                        className=\"btn-close\"\r\n                        onClick={props.toggle}\r\n                    ></Button>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Card >\r\n                        <CardBody>\r\n                            <form>\r\n                                <div className=\"row\">\r\n                                    <div className=\"form-group  mb-3\">\r\n                                        <FormGroup>\r\n                                            <Label>Encounter Date</Label>\r\n                                            <InputGroup>\r\n                                                <Input\r\n                                                    type=\"date\"\r\n                                                    name=\"encounterDateTime\"\r\n                                                    id=\"encounterDateTime\"\r\n                                                    onChange={handleInputChangePharmacyOrderDto}\r\n                                                    value={pharmacyOrder.encounterDateTime.substring(0,10)}\r\n                                                />\r\n                                            </InputGroup>\r\n\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"row\">\r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                            <Label>Select Drugs</Label>\r\n                                            <InputGroup>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"drugName\"\r\n                                                    id=\"drugName\"\r\n                                                    onChange={handleInputChangePharmacyOrderDto}\r\n                                                    value={pharmacyOrder.drugName}\r\n                                                >\r\n                                                    <option value={\"\"}></option>\r\n                                                    {drugRows}\r\n                                                </Input>\r\n                                            </InputGroup>\r\n                                        </FormGroup>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                            <Label>Dosage Strength</Label>\r\n                                            <InputGroup>\r\n                                                <Input\r\n                                                    type=\"text\"\r\n                                                    name=\"dosageStrength\"\r\n                                                    id=\"dosageStrength\"\r\n                                                    onChange={handleInputChangePharmacyOrderDto}\r\n                                                    value={pharmacyOrder.dosageStrength}\r\n                                                />\r\n\r\n                                            </InputGroup>\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                        <FormGroup>\r\n                                            <Label>Dosage Unit</Label>\r\n                                            <InputGroup>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"dosageStrengthUnit\"\r\n                                                    id=\"dosageStrengthUnit\"\r\n                                                    onChange={handleInputChangePharmacyOrderDto}\r\n                                                    value={pharmacyOrder.dosageStrengthUnit}\r\n                                                >\r\n                                                    <option value={\"\"}></option>\r\n                                                    {dosageUnitsRows}\r\n                                                </Input>\r\n                                            </InputGroup>\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"row\">\r\n                                    <div className=\"form-group mb-3\">\r\n                                        <FormGroup>\r\n                                            <Label>Drug Brand Name</Label>\r\n                                            <InputGroup>\r\n                                                <Input\r\n                                                    type=\"text\"\r\n                                                    name=\"brand\"\r\n                                                    id=\"brand\"\r\n                                                    onChange={handleInputChangePharmacyOrderDto}\r\n                                                    value={pharmacyOrder.brand}\r\n                                                />\r\n\r\n                                            </InputGroup>\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"row\">\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                            <Label>Dose Frequency</Label>\r\n                                            <InputGroup>\r\n                                                <Input\r\n                                                    type=\"text\"\r\n                                                    name=\"dosageFrequency\"\r\n                                                    id=\"dosageFrequency\"\r\n                                                    onChange={handleInputChangePharmacyOrderDto}\r\n                                                    value={pharmacyOrder.dosageFrequency}\r\n                                                />\r\n\r\n                                            </InputGroup>\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                            <Label>Start Date</Label>\r\n                                            <InputGroup>\r\n                                                <Input\r\n                                                    type=\"date\"\r\n                                                    name=\"startDate\"\r\n                                                    id=\"startDate\"\r\n                                                    onChange={handleInputChangePharmacyOrderDto}\r\n                                                    value={pharmacyOrder.startDate}\r\n                                                />\r\n                                            </InputGroup>\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                            <Label>Duration</Label>\r\n                                            <InputGroup>\r\n                                                <Input\r\n                                                    type=\"text\"\r\n                                                    name=\"duration\"\r\n                                                    id=\"duration\"\r\n                                                    onChange={handleInputChangePharmacyOrderDto}\r\n                                                    value={pharmacyOrder.duration}\r\n                                                />\r\n\r\n                                            </InputGroup>\r\n                                        </FormGroup>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                            <Label>Duration Unit</Label>\r\n                                            <InputGroup>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"durationUnit\"\r\n                                                    id=\"durationUnit\"\r\n                                                    onChange={handleInputChangePharmacyOrderDto}\r\n                                                    value={pharmacyOrder.durationUnit}\r\n                                                >\r\n                                                    <option value={\"\"}></option>\r\n                                                    {durationUnitsRows}\r\n                                                </Input>\r\n                                            </InputGroup>\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"row\">\r\n                                    <div className=\"form-group mb-3\">\r\n                                        <FormGroup>\r\n                                            <Label>Other Instructions</Label>\r\n                                            <InputGroup>\r\n                                                <Input\r\n                                                    type=\"textarea\"\r\n                                                    name=\"comments\"\r\n                                                    id=\"comments\"\r\n                                                    onChange={handleInputChangePharmacyOrderDto}\r\n                                                    value={pharmacyOrder.comments}\r\n                                                />\r\n\r\n                                            </InputGroup>\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n\r\n                                {saving ? <Spinner /> : \"\"}\r\n                                <br />\r\n\r\n                               {/* <MatButton\r\n                                    type=\"submit\"\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    className={classes.button}\r\n                                    startIcon={<SaveIcon />}\r\n                                    onClick={handleSubmit}\r\n                                >\r\n                                    {!saving ? (\r\n                                        <span style={{ textTransform: \"capitalize\" }}>Update</span>\r\n                                    ) : (\r\n                                        <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                    )}\r\n                                </MatButton>*/}\r\n\r\n                                <MatButton\r\n                                    variant=\"contained\"\r\n                                    className={classes.button}\r\n                                    startIcon={<CancelIcon />}\r\n                                    onClick={props.toggle}\r\n                                >\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\r\n                                </MatButton>\r\n\r\n                            </form>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditPharmacyOrder;\r\n","import React, {Fragment, useState, useCallback, useEffect } from \"react\";\r\nimport { KeyboardDateTimePicker, MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport axios from \"axios\";\r\nimport { toast } from 'react-toastify';\r\nimport {token, url as baseUrl, apiUrl as apiUrl } from \"../../../api\";\r\nimport { Grid, Segment, Label, Icon, List,Button, Card, Feed, Input, Radio } from 'semantic-ui-react';\r\n// Page titie\r\nimport {  Checkbox, Table } from 'semantic-ui-react';\r\nimport {format} from \"date-fns\";\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport ButtonMui from \"@material-ui/core/Button\";\r\nimport AddPharmacyOrder from './AddPharmacyOrder';\r\nimport EditPharmacyOrder from './EditPharmacyOrder';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Accordion,AccordionSummary,AccordionDetails } from '@material-ui/core'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        fontWeight: 'bolder',\r\n    },\r\n}));\r\n\r\nconst Widget = (props) => {\r\n    const classes = useStyles();\r\n    const patientObj = props.patientObj ? props.patientObj : {}\r\n    //console.log(\"po\", patientObj)\r\n    const [isLabEnabled, setIsLabEnabled] = useState(false);\r\n    const [isPharmacyEnabled, setIsPharmacyEnabled] = useState(false);\r\n    const [hasAllergies, setHasAllergies] = useState(false);\r\n    const [pharmacyModal, setPharmacyModal] = useState(false);\r\n    const [pharmacyOrderModal, setPharmacyOrderModal] = useState(false);\r\n    const [otherVisitsVitals, setOtherVisitVitals] = useState([]);\r\n    const [previousConsultation, setPreviousConsultation] = useState([]);\r\n    const [encounterDate, setEncounterDate] = useState(new Date());\r\n    const { handleSubmit, control, getValues, setError, setValue } = useForm();\r\n    const [inputFields, setInputFields] = useState([\r\n        { complaint: '', onsetDate: '', severity: 0, dateResolved: '' }\r\n    ]);\r\n    const [inputFieldsDiagnosis, setInputFieldsDiagnosis] = useState([\r\n        { certainty: '', diagnosis: '', diagnosisOrder: 0 }\r\n    ]);\r\n\r\n    const [inputFieldsLab, setInputFieldsLab] = useState([\r\n            { encounterDate: format(new Date(), 'yyyy-MM-dd'), labOrder: '',\r\n            labTest: '', priority: '', status: '' }\r\n        ]);\r\n\r\n    const history = useHistory();\r\n    const toggle = () => setPharmacyModal(!pharmacyModal);\r\n    const toggleOrder = () => setPharmacyOrderModal(!pharmacyOrderModal);\r\n    const [pharmacyOrder, setPharmacyOrder] = useState([]);\r\n    const [editPharmacyOrderValue, setEditPharmacyOrderValue] = useState({\r\n        encounterDateTime: \"\",\r\n        drugName: \"\",\r\n        dosageStrength: \"\",\r\n        dosageStrengthUnit: \"\",\r\n        dosageFrequency: \"\",\r\n        startDate: \"\",\r\n        duration: \"\",\r\n        durationUnit: \"\",\r\n        comments: \"\",\r\n        patientId: patientObj.id,\r\n        orderedBy: \"\",\r\n        dateTimePrescribed: \"\",\r\n        visitId: patientObj.visitId\r\n    });\r\n\r\n    const pharmacy_by_visitId = useCallback(async () => {\r\n            try {\r\n                const response = await axios.get(`${apiUrl}drug-orders/visits/${patientObj.visitId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}});\r\n\r\n\r\n                if (typeof response.data === 'string') {\r\n                    setPharmacyOrder([]);\r\n                }else {\r\n                    console.log(\"red\",response.data)\r\n                    setPharmacyOrder(response.data);\r\n                }\r\n\r\n\r\n            } catch (e) {\r\n                toast.error(\"An error occurred while fetching pharmacy data\", {\r\n                    position: toast.POSITION.TOP_RIGHT\r\n                });\r\n            }\r\n        }, []);\r\n\r\n    const onSubmit = async (data) => {\r\n        const diagnosisList = [];\r\n        const presentingComplaints = [];\r\n        const labTests = [];\r\n\r\n        for (const inputFieldsDiag of inputFieldsDiagnosis) {\r\n            if (inputFieldsDiag.diagnosis) {\r\n                diagnosisList.push(inputFieldsDiag);\r\n            }\r\n        }\r\n\r\n        for (const inputField of inputFields) {\r\n            if (inputField.complaint) {\r\n                presentingComplaints.push(inputField);\r\n            }\r\n        }\r\n\r\n        for (const inputField of inputFieldsLab) {\r\n\r\n            if (inputField.encounterDate) {\r\n                labTests.push({\r\n                \"description\": inputField.labOrder.slice(2, inputField.labOrder.length),\r\n                \"id\": 0,\r\n                \"labTestGroupId\": inputField.labOrder.slice(0, 1),\r\n                \"labTestId\": inputField.labTest,\r\n                \"labTestOrderStatus\": inputField.status,\r\n                \"orderPriority\": inputField.priority,\r\n//                \"unitMeasurement\": \"\",\r\n//                \"viralLoadIndication\": 0\r\n              });\r\n            }\r\n        }\r\n\r\n        try {\r\n            const InData = {\r\n                \"diagnosisList\": diagnosisList,\r\n                \"encounterDate\": format(new Date(data.encounterDate.toString()), 'yyyy-MM-dd'),\r\n                \"id\": 0,\r\n                \"patientId\": patientObj.id,\r\n                \"presentingComplaints\": presentingComplaints,\r\n                \"visitId\": patientObj.visitId,\r\n                \"visitNotes\": data.visitNote\r\n            };\r\n\r\n            const labOrder = {\r\n                  \"orderDate\": format(new Date(data.encounterDate.toString()), 'yyyy-MM-dd'),\r\n                  \"orderTime\": new Date().toLocaleTimeString('en-US',{hour12: false}),\r\n                  \"patientId\": patientObj.id,\r\n                  \"tests\": labTests,\r\n                  \"visitId\": patientObj.visitId\r\n            }\r\n            //console.log('labOrder', labOrder)\r\n            await axios.post(`${baseUrl}consultations`, InData,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }).then(( resp ) =>{\r\n                console.log(\"diagnosis saved\", resp)\r\n\r\n                axios.post(`${baseUrl}laboratory/orders`, labOrder,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }).then(( resp ) =>{\r\n                    console.log(\"lab served\", resp)\r\n\r\n                    toast.success(\"Successfully Saved Consultation !\", {\r\n                        position: toast.POSITION.TOP_RIGHT\r\n                    });\r\n\r\n                    history.push('/');\r\n                }).catch((err) => {\r\n                     toast.error(`An error occured while saving laboratory test! ${err}`, {\r\n                        position: toast.POSITION.TOP_RIGHT\r\n                    });\r\n                });\r\n\r\n            });\r\n\r\n        } catch (e) {\r\n            toast.error(\"An error occured while saving Consultation !\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n    };\r\n    const OnError = (errors) => {\r\n        console.error(errors);\r\n        toast.error(\"Visit Note Is Required\", {\r\n            position: toast.POSITION.TOP_RIGHT\r\n        });\r\n    };\r\n\r\n    const [labGroups, setLabGroups] = useState([]);\r\n    const [labTests, setLabTests] = useState([]);\r\n    const [priorities, setPriorities] = useState([]);\r\n\r\n    const loadLabCheck = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}modules/check?moduleName=lab`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setIsLabEnabled(response.data);\r\n        } catch (e) {\r\n            toast.error(\"An error occurred while fetching lab\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    const loadPharmacyCheck = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}modules/check?moduleName=pharmacy`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setIsPharmacyEnabled(response.data);\r\n        } catch (e) {\r\n            toast.error(\"An error occurred while fetching pharmacy\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    const loadOtherVisitsVitals = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}patient/vital-sign/person/${patientObj.id}`, { headers: {\"Authorization\" : `Bearer ${token}`}});\r\n            setOtherVisitVitals(response.data);\r\n        } catch (e) {\r\n            toast.error(\"An error occurred while fetching vitals\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    const loadPreviousConsultation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}consultations/consultations-by-patient-id/${patientObj.id}`, { headers: {\"Authorization\" : `Bearer ${token}`}});\r\n            setPreviousConsultation(response.data);\r\n        } catch (e) {\r\n            toast.error(\"An error occurred while fetching previous consultation\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    const loadLabGroup = useCallback(async () => {\r\n            try {\r\n                const response = await axios.get(`${baseUrl}laboratory/labtestgroups`, { headers: {\"Authorization\" : `Bearer ${token}`}});\r\n                setLabGroups(response.data);\r\n            } catch (e) {\r\n                toast.error(\"An error occurred while fetching lap group data\", {\r\n                    position: toast.POSITION.TOP_RIGHT\r\n                });\r\n            }\r\n        }, []);\r\n\r\n    const priority = useCallback(async () => {\r\n            try {\r\n                const response = await axios.get(`${baseUrl}application-codesets/v2/TEST_ORDER_PRIORITY`, { headers: {\"Authorization\" : `Bearer ${token}`}});\r\n                //console.log(\"priority\", response.data);\r\n                setPriorities(response.data);\r\n            } catch (e) {\r\n                toast.error(\"An error occurred while fetching priority data\", {\r\n                    position: toast.POSITION.TOP_RIGHT\r\n                });\r\n            }\r\n        }, []);\r\n\r\n/*    useEffect(() => {\r\n        loadPharmacyCheck();\r\n        loadLabCheck();\r\n        loadOtherVisitsVitals();\r\n        loadPreviousConsultation();\r\n        loadLabGroup();\r\n        priority();\r\n        pharmacy_by_visitId();\r\n        getLatestVitals();\r\n    }, [loadPharmacyCheck, loadLabCheck, loadOtherVisitsVitals,\r\n    loadPreviousConsultation, loadLabGroup, priority, pharmacy_by_visitId]);*/\r\n\r\n    const [latestVitals, setVitalSignDto]= useState({})\r\n    ///GET LIST OF Patients\r\n    async function getLatestVitals() {\r\n        axios\r\n            .get(`${baseUrl}patient/vital-sign/visit/${patientObj.visitId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setVitalSignDto(response.data);\r\n            })\r\n            .catch((error) => {\r\n            });\r\n    }\r\n\r\n\r\n    const handleAddFields = () => {\r\n        const values = [...inputFields];\r\n        values.push({ complaint: '', onsetDate: '', severity: 0, dateResolved: '' });\r\n        setInputFields(values);\r\n    };\r\n\r\n    const handleAddDiagFields = () => {\r\n        const values = [...inputFieldsDiagnosis];\r\n        values.push({ certainty: '', diagnosis: '', diagnosisOrder: 0 });\r\n        setInputFieldsDiagnosis(values);\r\n    };\r\n\r\n    const handleAddFieldsLab = () => {\r\n        const values = [...inputFieldsLab];\r\n        values.push({ encounterDate: format(new Date(), 'yyyy-MM-dd'), labOrder: '', labTest: '', priority: '', status: '' });\r\n        setInputFieldsLab(values);\r\n    };\r\n\r\n    const handleInputChange = (index, event) => {\r\n        const values = [...inputFields];\r\n        if (event.target.name === \"complaint\") {\r\n            values[index].complaint = event.target.value;\r\n        } else if (event.target.name === \"onsetDate\") {\r\n            values[index].onsetDate = event.target.value;\r\n        } else if (event.target.name === \"severity\") {\r\n            values[index].severity = event.target.value;\r\n        } else if (event.target.name === \"dateResolved\") {\r\n            values[index].dateResolved = event.target.value;\r\n        }\r\n\r\n        setInputFields(values);\r\n    };\r\n\r\n    const handleInputDiagChange = (index, event) => {\r\n        const values = [...inputFieldsDiagnosis];\r\n        if (event.target.name === \"diagnosis\") {\r\n            values[index].diagnosis = event.target.value;\r\n        } else if (event.target.name === \"certainty\") {\r\n            values[index].certainty = event.target.value;\r\n        } else if (event.target.name === \"diagnosisOrder\") {\r\n            values[index].diagnosisOrder = event.target.value;\r\n        }\r\n\r\n        setInputFieldsDiagnosis(values);\r\n    };\r\n\r\n    const labCascade = id => {\r\n        labGroups.forEach(function (x) {\r\n              if ( x.id == id) {\r\n                setLabTests(x.labTests)\r\n            }\r\n        });\r\n    }\r\n\r\n    const handleInputLabChange = (index, event) => {\r\n            const values = [...inputFieldsLab];\r\n            if (event.target.name === \"labOrder\") {\r\n                const str = event.target.value;\r\n                values[index].labOrder = str;\r\n                labCascade(str.slice(0,1))\r\n            }\r\n            else if (event.target.name === \"labTest\") {\r\n                values[index].labTest = event.target.value;\r\n            } else if (event.target.name === \"priority\") {\r\n                values[index].priority = event.target.value;\r\n            }\r\n            else if (event.target.name === \"status\") {\r\n                values[index].status = event.target.value;\r\n            }\r\n\r\n            setInputFieldsLab(values);\r\n        };\r\n\r\n    const handleAddPharmacyOrder = () => {\r\n        setPharmacyModal(!pharmacyModal);\r\n    };\r\n\r\n     const handleEditPharmacyOrder = (pharmacy) => {\r\n            console.log(pharmacy);\r\n            setEditPharmacyOrderValue(pharmacy);\r\n            setPharmacyOrderModal(!pharmacyOrderModal);\r\n     };\r\n\r\n     const handleDelete = async (id) => {\r\n        console.log(id)\r\n           await axios.delete(`${apiUrl}drug-orders/${id}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}}).then(resp => {\r\n            console.log(\"drug order deleted\");\r\n             toast.success(\"Successfully deleted drug order!\", {\r\n                    position: toast.POSITION.TOP_RIGHT\r\n                });\r\n            });\r\n     }\r\n\r\n    return (\r\n        <Grid columns='equal'>\r\n{/*            <Grid.Column>\r\n                {  Object.keys(latestVitals).length > 0 &&\r\n                    <Segment>\r\n\r\n                        <div className={classes.root}>\r\n                            <Accordion style={{minHeight:'45px',padding:'0px 0px 0px 0px'}} defaultExpanded={true}>\r\n                                <AccordionSummary\r\n                                    expandIcon={<ExpandMoreIcon />}\r\n                                    aria-controls=\"panel1a-content\"\r\n                                    id=\"panel1a-header\"\r\n                                    style={{padding:'0px 0px 0px 2px',borderBottom:'2px solid #eee'}}\r\n                                >\r\n                                    <Label as='a' color='blue'  style={{width:'100%'}}>\r\n                                        <Typography className={classes.heading}>Current Vitals - Date - {latestVitals.encounterDate}</Typography>\r\n                                    </Label>\r\n\r\n                                </AccordionSummary>\r\n                                <AccordionDetails style={{padding:'8px'}}>\r\n                                    <List celled style={{width:'100%'}}>\r\n                                        <List.Item style={{paddingBottom:'10px', paddingTop:'10px',borderTop:'1px solid #fff', marginTop:'-5px' }}>Pulse <span style={{color:'rgb(153, 46, 98)'}} className=\"float-end\"><b>{latestVitals.pulse} bpm</b></span></List.Item>\r\n                                        <List.Item style={{paddingBottom:'10px', paddingTop:'10px'}}>Respiratory Rate <span className=\"float-end\"><b style={{color:'rgb(153, 46, 98)'}}>{latestVitals.respiratoryRate} bpm</b></span></List.Item>\r\n                                        <List.Item style={{paddingBottom:'10px', paddingTop:'10px'}}>Temperature <span className=\"float-end\"><b style={{color:'rgb(153, 46, 98)'}}>{latestVitals.temperature} <sup>0</sup>C</b></span></List.Item>\r\n                                        <List.Item style={{paddingBottom:'10px', paddingTop:'10px'}}>Blood Pressure <span  className=\"float-end\"><b style={{color:'rgb(153, 46, 98)'}}>{latestVitals.systolic}/{latestVitals.diastolic}</b></span></List.Item>\r\n                                        <List.Item style={{paddingBottom:'10px', paddingTop:'10px'}}>Height <span  className=\"float-end\"><b style={{color:'rgb(153, 46, 98)'}}>{latestVitals.height} cm</b></span></List.Item>\r\n                                        <List.Item style={{paddingBottom:'10px', paddingTop:'10px'}}>Weight <span  className=\"float-end\"><b style={{color:'rgb(153, 46, 98)'}}>{latestVitals.bodyWeight} kg</b></span></List.Item>\r\n                                        <List.Item style={{paddingBottom:'10px', paddingTop:'10px'}}>BMI <span  className=\"float-end\"><b style={{color:'rgb(153, 46, 98)'}}>{latestVitals.bodyWeight} kg</b></span></List.Item>\r\n                                    </List>\r\n                                </AccordionDetails>\r\n                            </Accordion>\r\n\r\n                            {otherVisitsVitals && otherVisitsVitals.length > 0 &&\r\n                                otherVisitsVitals.map(vital =>\r\n                                    <Accordion>\r\n                                        <AccordionSummary\r\n                                            expandIcon={<ExpandMoreIcon />}\r\n                                            aria-controls=\"panel2a-content\"\r\n                                            id=\"panel2a-header\"\r\n                                            style={{padding:'0px 0px 0px 10px'}}\r\n                                        >\r\n                                            <Typography className={classes.heading} style={{color:'#014d88'}}>Vitals Collection - Date - {vital.encounterDate}</Typography>\r\n                                        </AccordionSummary>\r\n                                        <AccordionDetails style={{padding:'8px'}}>\r\n                                            <List celled style={{width:'100%'}}>\r\n                                                <List.Item style={{paddingBottom:'10px', paddingTop:'10px',borderTop:'1px solid #fff', marginTop:'-5px' }}>Pulse <span  style={{color:'#014d88'}} className=\"float-end\"><b>{vital.pulse} bpm</b></span></List.Item>\r\n                                                <List.Item style={{paddingBottom:'10px', paddingTop:'10px'}}>Respiratory Rate <span className=\"float-end\" style={{color:'#014d88'}}><b>{vital.respiratoryRate} bpm</b></span></List.Item>\r\n                                                <List.Item style={{paddingBottom:'10px', paddingTop:'10px'}}>Temperature <span className=\"float-end\" style={{color:'#014d88'}}><b>{vital.temperature} <sup>0</sup>C</b></span></List.Item>\r\n                                                <List.Item style={{paddingBottom:'10px', paddingTop:'10px'}}>Blood Pressure <span  className=\"float-end\" style={{color:'#014d88'}}><b>{vital.systolic}/{vital.diastolic}</b></span></List.Item>\r\n                                                <List.Item style={{paddingBottom:'10px', paddingTop:'10px'}}>Height <span  className=\"float-end\" style={{color:'#014d88'}}><b>{vital.height} cm</b></span></List.Item>\r\n                                                <List.Item style={{paddingBottom:'10px', paddingTop:'10px'}}>Weight <span  className=\"float-end\" style={{color:'#014d88'}}><b>{vital.bodyWeight} kg</b></span></List.Item>\r\n                                                <List.Item style={{paddingBottom:'10px', paddingTop:'10px'}}>BMI <span  className=\"float-end\" style={{color:'#014d88'}}><b>{vital.bodyWeight} kg</b></span></List.Item>\r\n                                            </List>\r\n                                        </AccordionDetails>\r\n                                    </Accordion>\r\n                                )\r\n\r\n                            }\r\n\r\n\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                    </Segment>\r\n                }\r\n\r\n                { previousConsultation &&\r\n                    <Segment>\r\n                        <Label as='a' color='black' style={{width:'100%',marginBottom:'10px'}}>\r\n                            Conditions\r\n                        </Label>\r\n                        <br/>\r\n\r\n                        { previousConsultation.map((consultation, i) => (\r\n                            <div>\r\n                                {consultation.diagnosisList.map((diagnosis, j)=> (\r\n                                    <Label as='a'  color='white'  size=\"mini\" pointing>\r\n                                        {diagnosis.diagnosis}\r\n                                    </Label>\r\n                                ))}\r\n                            </div>\r\n                        ))}\r\n                    </Segment>\r\n                }\r\n\r\n                { hasAllergies &&\r\n                    <Segment>\r\n                        <Label as='a' color='red' ribbon>\r\n                            Allergies\r\n                        </Label>\r\n                        <br/><br/>\r\n\r\n                        <Label.Group color='blue'>\r\n                            <Label as='a'  size=\"mini\">dust</Label>\r\n                            <Label as='a'  size=\"mini\">smoke</Label>\r\n                        </Label.Group>\r\n                    </Segment>\r\n                }\r\n            </Grid.Column>\r\n\r\n            <Grid.Column width={9}>\r\n                <form onSubmit={handleSubmit(onSubmit, OnError)}>\r\n                    <Label as='a' color='black' style={{width:'100%',height:'35px',fontSize:'16px'}}>\r\n                        <b>Physical Examination</b>\r\n                    </Label>\r\n\r\n                    <Segment>\r\n                        <div className=\"input-group input-group-sm mb-3\" >\r\n                            <span className=\"input-group-text\" style={{height:'40px',backgroundColor:'#014d88',color:'#fff', fontSize:'14px'}}>Encounter Dates</span>\r\n                            <MuiPickersUtilsProvider utils={DateFnsUtils} >\r\n                                <Controller\r\n                                    name=\"encounterDate\"\r\n                                    control={control}\r\n                                    defaultValue={encounterDate}\r\n                                    rules={{ required: true }}\r\n                                    render={({ field: { ref, ...rest }}) => (\r\n                                        <KeyboardDateTimePicker\r\n                                            style={{height:'40px', border:'1px solid #014d88'}}\r\n                                            disableFuture\r\n                                            format=\"dd/MM/yyyy hh:mm a\"\r\n                                            value={encounterDate}\r\n                                            onChange={setEncounterDate}\r\n                                            className=\"form-control\"\r\n                                            invalidDateMessage={\"Encounter date is required\"}\r\n                                            {...rest}\r\n                                        />\r\n                                    )}\r\n                                    />\r\n                            </MuiPickersUtilsProvider>\r\n                        </div>\r\n\r\n                        <div className=\"input-group input-group-sm \" >\r\n                            <span className=\"input-group-text\" style={{height:'300px',backgroundColor:'#014d88',color:'#fff', fontSize:'14px'}}>Visit Note</span>\r\n                            <Controller\r\n                                name=\"visitNote\"\r\n                                control={control}\r\n                                rules={{ required: true }}\r\n                                render={({ field: { ref, ...rest }}) => (\r\n                                    <textarea  style={{ minHeight: 300,border:'1px solid #014d88' }} className=\"form-control\" {...rest} ></textarea>\r\n                                )}\r\n                            />\r\n                        </div>\r\n                        <br/>\r\n                        <Label as='a'  style={{backgroundColor:'#014d88', color:'#fff',width:'100%',height:'35px',fontSize:'16px'}}>\r\n                            Presenting Complaints\r\n                        </Label>\r\n                        <Table style={{color:'#014d88',borderColor:'#014d88'}} celled >\r\n                            <Table.Header>\r\n                                <Table.Row>\r\n                                    <Table.Cell style={{ fontWeight: 'bold'}}>Complaints</Table.Cell>\r\n                                    <Table.Cell style={{ fontWeight: 'bold'}}>Onset Date</Table.Cell>\r\n                                    <Table.Cell style={{ fontWeight: 'bold'}}>Severity</Table.Cell>\r\n                                    <Table.Cell style={{ fontWeight: 'bold'}}>Date Resolved</Table.Cell>\r\n                                </Table.Row>\r\n                            </Table.Header>\r\n\r\n                            <Table.Body>\r\n                                    {inputFields.map((inputField, index) => (\r\n                                        <Fragment key={`${inputField}~${index}`}>\r\n                                            <Table.Row>\r\n                                            <Table.Cell>\r\n                                                <Input\r\n                                                    id=\"complaint\"\r\n                                                    name=\"complaint\"\r\n                                                    type=\"text\"\r\n                                                    fluid\r\n                                                    placeholder='Enter Presenting Complaints'\r\n                                                    value={inputField.complaint}\r\n                                                    onChange={event => handleInputChange(index, event)}\r\n                                                />\r\n                                            </Table.Cell>\r\n                                            <Table.Cell>\r\n                                                <Input\r\n                                                    id=\"onsetDate\"\r\n                                                    name=\"onsetDate\"\r\n                                                    type=\"date\"\r\n                                                    fluid\r\n                                                    placeholder='Onset Date'\r\n                                                    value={inputField.onsetDate}\r\n                                                    onChange={event => handleInputChange(index, event)}\r\n                                                />\r\n                                            </Table.Cell>\r\n                                            <Table.Cell>\r\n                                                <select\r\n                                                    class=\"ui fluid selection dropdown\"\r\n                                                    value={inputField.severity}\r\n                                                    onChange={event => handleInputChange(index, event)}\r\n                                                    name=\"severity\"\r\n                                                    id=\"severity\">\r\n                                                    <option>Select</option>\r\n                                                    <option value=\"0\">0</option>\r\n                                                    <option value=\"1\">1</option>\r\n                                                    <option value=\"2\">2</option>\r\n                                                    <option value=\"3\">3</option>\r\n                                                    <option value=\"4\">4</option>\r\n                                                    <option value=\"5\">5</option>\r\n                                                    <option value=\"6\">6</option>\r\n                                                    <option value=\"7\">7</option>\r\n                                                    <option value=\"8\">8</option>\r\n                                                    <option value=\"9\">9</option>\r\n                                                    <option value=\"10\">10</option>\r\n                                                </select>\r\n                                            </Table.Cell>\r\n                                            <Table.Cell>\r\n                                                <Input\r\n                                                    id=\"dateResolved\"\r\n                                                    name=\"dateResolved\"\r\n                                                    type=\"date\"\r\n                                                    fluid\r\n                                                    placeholder='Date Resolved'\r\n                                                    value={inputField.dateResolved}\r\n                                                    onChange={event => handleInputChange(index, event)}\r\n                                                />\r\n                                            </Table.Cell>\r\n                                            </Table.Row>\r\n                                        </Fragment>\r\n                                    ))}\r\n\r\n                            </Table.Body>\r\n\r\n                            <Table.Footer>\r\n                                <Table.Row>\r\n                                    <Table.HeaderCell>\r\n                                        <Button color=\"blue\" size=\"tiny\" type=\"button\" onClick={() => handleAddFields()}>\r\n                                            <Icon name='plus' /> Add More\r\n                                        </Button>\r\n                                    </Table.HeaderCell>\r\n                                </Table.Row>\r\n                            </Table.Footer>\r\n                        </Table>\r\n                        <br/>\r\n                        <Label as='a' style={{backgroundColor:'#992E62', color:'#fff', width:'100%',height:'35px',fontSize:'16px'}}>\r\n                            Clinical Diagnosis\r\n                        </Label>\r\n                        <Table style={{color:'#992E62',borderColor:'#992E62'}} celled>\r\n                            <Table.Header>\r\n                                <Table.Row>\r\n                                    <Table.Cell style={{ fontWeight: 'bold'}}>Condition</Table.Cell>\r\n                                    <Table.Cell style={{ fontWeight: 'bold'}}>Order</Table.Cell>\r\n                                    <Table.Cell style={{ fontWeight: 'bold'}}>Certainty</Table.Cell>\r\n                                    <Table.Cell style={{ fontWeight: 'bold'}}></Table.Cell>\r\n                                </Table.Row>\r\n                            </Table.Header>\r\n\r\n                            <Table.Body>\r\n                                {inputFieldsDiagnosis.map((diagInputField, diagIndex) => (\r\n                                    <Fragment key={`${diagInputField}~${diagIndex}`}>\r\n                                        <Table.Row>\r\n                                            <Table.Cell>\r\n                                                <Input\r\n                                                    id=\"diagnosis\"\r\n                                                    name=\"diagnosis\"\r\n                                                    type=\"text\"\r\n                                                    fluid\r\n                                                    placeholder='Condition'\r\n                                                    value={diagInputField.diagnosis}\r\n                                                    onChange={event => handleInputDiagChange(diagIndex, event)}\r\n                                                />\r\n                                            </Table.Cell>\r\n                                            <Table.Cell>\r\n                                                <select\r\n                                                    className=\"ui fluid selection dropdown\"\r\n                                                    value={diagInputField.diagnosisOrder}\r\n                                                    onChange={event => handleInputDiagChange(diagIndex, event)}\r\n                                                    name=\"diagnosisOrder\"\r\n                                                    id=\"diagnosisOrder\">\r\n                                                    <option>Select</option>\r\n                                                    <option value=\"1\">Primary</option>\r\n                                                    <option value=\"2\">Secondary</option>\r\n                                                </select>\r\n                                            </Table.Cell>\r\n                                            <Table.Cell>\r\n                                                <select\r\n                                                    className=\"ui fluid selection dropdown\"\r\n                                                    value={diagInputField.certainty}\r\n                                                    onChange={event => handleInputDiagChange(diagIndex, event)}\r\n                                                    name=\"certainty\"\r\n                                                    id=\"certainty\">\r\n                                                    <option>Select</option>\r\n                                                    <option value=\"1\">Presumed</option>\r\n                                                    <option value=\"2\">Confirmed</option>\r\n                                                </select>\r\n                                            </Table.Cell>\r\n                                            <Table.Cell></Table.Cell>\r\n                                        </Table.Row>\r\n                                    </Fragment>\r\n                                ))}\r\n                            </Table.Body>\r\n\r\n                            <Table.Footer>\r\n                                <Table.Row>\r\n                                    <Table.HeaderCell>\r\n\r\n                                        <Button style={{backgroundColor:'#992E62',color:'#fff'}} size=\"tiny\" type=\"button\" onClick={() => handleAddDiagFields()}>\r\n                                            <Icon name='plus' /> Add More\r\n                                        </Button>\r\n                                    </Table.HeaderCell>\r\n\r\n                                </Table.Row>\r\n                            </Table.Footer>\r\n                        </Table>\r\n                        <br/>\r\n                        { isLabEnabled && <div>\r\n                            <Label as='a' color='teal' style={{width:'100%',height:'35px',fontSize:'16px'}}>\r\n                                Lab Test\r\n                            </Label>\r\n\r\n                            <Table color=\"teal\" celled>\r\n                                <Table.Header>\r\n                                    <Table.Row>\r\n                                        <Table.Cell style={{ fontWeight: 'bold'}}>Lab Test Group</Table.Cell>\r\n                                        <Table.Cell style={{ fontWeight: 'bold'}}>Lab Test</Table.Cell>\r\n                                        <Table.Cell style={{ fontWeight: 'bold'}}>Priority</Table.Cell>\r\n                                        <Table.Cell style={{ fontWeight: 'bold'}}>Status</Table.Cell>\r\n                                    </Table.Row>\r\n                                </Table.Header>\r\n\r\n                                <Table.Body>\r\n                                   {inputFieldsLab.map((labInputField, labIndex) => (\r\n                                        <Fragment key={`${labInputField}~${labIndex}`}>\r\n                                            <Table.Row>\r\n                                                <Table.Cell>\r\n                                                    <select\r\n                                                        className=\"ui fluid selection dropdown\"\r\n                                                        value={labInputField.labOrder}\r\n                                                        onChange={ e => handleInputLabChange(labIndex, e)}\r\n                                                        name=\"labOrder\"\r\n                                                        id=\"labOrder\">\r\n                                                        <option>Select</option>\r\n                                                        {\r\n                                                            labGroups.map((d)=> (\r\n                                                                <option key={d.id} value={`${d.id}-${d.groupName}`}>\r\n                                                                    {d.groupName}\r\n                                                                </option>\r\n                                                            ))\r\n                                                        }\r\n                                                    </select>\r\n\r\n                                                </Table.Cell>\r\n                                                <Table.Cell>\r\n                                                    <select\r\n                                                        className=\"ui fluid selection dropdown\"\r\n                                                        value={labInputField.labTest}\r\n                                                        onChange={e => handleInputLabChange(labIndex, e)}\r\n                                                        name=\"labTest\"\r\n                                                        id=\"labTest\">\r\n                                                        <option>Select</option>\r\n                                                             {\r\n                                                                labTests.map((d)=> (\r\n                                                                    <option key={d.id} value={d.id}>\r\n                                                                        {d.labTestName}\r\n                                                                    </option>\r\n                                                                ))\r\n                                                            }\r\n                                                    </select>\r\n\r\n                                                </Table.Cell>\r\n                                                <Table.Cell>\r\n                                                <select\r\n                                                    className=\"ui fluid selection dropdown\"\r\n                                                    value={labInputField.priority}\r\n                                                    onChange={e => handleInputLabChange(labIndex, e)}\r\n                                                    name=\"priority\"\r\n                                                    id=\"priority\">\r\n                                                    <option>Select</option>\r\n                                                       {\r\n                                                            priorities.map((d)=> (\r\n                                                                <option key={d.id} value={d.id}>\r\n                                                                    {d.display}\r\n                                                                </option>\r\n                                                            ))\r\n                                                        }\r\n                                                </select>\r\n\r\n                                                </Table.Cell>\r\n                                                <Table.Cell>\r\n                                                    <select\r\n                                                        className=\"ui fluid selection dropdown\"\r\n                                                        value={labInputField.status}\r\n                                                        onChange={e => handleInputLabChange(labIndex, e)}\r\n                                                        name=\"status\"\r\n                                                        id=\"status\">\r\n                                                        <option>Select</option>\r\n                                                        <option value=\"0\">Pending Collection</option>\r\n                                                        <option value=\"1\">Sample Collected</option>\r\n                                                        <option value=\"2\">Sample Transferred</option>\r\n                                                        <option value=\"3\">Sample Verified</option>\r\n                                                        <option value=\"4\">Sample Rejected</option>\r\n                                                        <option value=\"5\">Result Available</option>\r\n                                                    </select>\r\n                                                </Table.Cell>\r\n                                            </Table.Row>\r\n                                        </Fragment>\r\n                                    ))}\r\n                                </Table.Body>\r\n\r\n                                <Table.Footer>\r\n                                    <Table.Row>\r\n                                        <Table.HeaderCell>\r\n\r\n                                            <Label as='a' color=\"blue\" size=\"tiny\" onClick={() => handleAddFieldsLab()}>\r\n                                                <Icon name='plus' /> Add Test\r\n                                            </Label>\r\n                                        </Table.HeaderCell>\r\n\r\n                                    </Table.Row>\r\n                                </Table.Footer>\r\n                            </Table>\r\n                        </div>}\r\n                        <br/>\r\n                        <Label as='a' color='purple' style={{width:'100%',height:'35px',fontSize:'16px'}}>\r\n                            Pharmacy Order\r\n                        </Label>\r\n                        <br/>\r\n                        <br/>\r\n                        <>\r\n                        {\r\n                           pharmacyOrder.length > 0 ? pharmacyOrder.map((pharmacy, i) => (\r\n                            <div className=\"page-header\" key={i}>\r\n                                  <p><b>{pharmacy.drugName}</b>\r\n                                  <br /> Start at {pharmacy.startDate} for {pharmacy.dosageFrequency} to be taken {pharmacy.duration} time(s) a day\r\n                                  <br />\r\n                                  Instructions: {pharmacy.comments}  <br />\r\n                                  Date Ordered: {pharmacy.dateTimePrescribed}</p>\r\n                                  <p>\r\n                                    <Label as='a' color=\"blue\" size=\"tiny\" onClick={() => handleEditPharmacyOrder(pharmacy)}>\r\n                                    <Icon name='eye' /> View</Label>\r\n                                    {\" \"}\r\n                                    <Label as='a' color=\"red\" size=\"tiny\" onClick={() => handleDelete(pharmacy.id)}>\r\n                                                                    <Icon name='delete' /> Delete</Label>\r\n                                  </p>\r\n                                  <br/>\r\n                            </div>\r\n                            )) :\r\n                            <p>No previous pharmacy record for this patient</p>\r\n                        }\r\n\r\n                        </>\r\n                        <br/>\r\n                        { isPharmacyEnabled &&\r\n                            <div>\r\n                                <ButtonMui\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    className=\"ms-2\"\r\n                                    onClick={() => handleAddPharmacyOrder()}\r\n                                >\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Add Pharmacy Order</span>\r\n                                </ButtonMui>\r\n                            </div>\r\n                        }\r\n                    </Segment>\r\n                    <Button type={\"submit\"} variant=\"contained\" color={\"primary\"}>Submit</Button>\r\n                </form>\r\n          </Grid.Column>\r\n          <Grid.Column>\r\n            <Segment>\r\n\r\n            <List>\r\n                  <List.Item>\r\n                      <Link\r\n                          to={{\r\n                              pathname: \"/patient-consultations-history\",\r\n                              state: { patientObj: patientObj  }\r\n                          }}>\r\n                          <Button icon labelPosition='right'  style={{width:'100%',backgroundColor:'#992E62',color:\"#fff\", padding:'15px'}}  fluid>\r\n                              <Icon name='eye' />\r\n                              View Consultation History\r\n                          </Button>\r\n                      </Link>\r\n                  </List.Item>\r\n                  <List.Item>\r\n                  <Button icon labelPosition='right' color='blue' fluid>\r\n                      <Icon name='calendar alternate' />\r\n                        Appointment \r\n                    </Button>\r\n                  </List.Item>\r\n            </List>\r\n                { previousConsultation &&\r\n                    <Card style={{width:'100%'}}>\r\n                        <Card.Content style={{padding:'5px'}}>\r\n                            <Label as='a'   style={{width:'100%',backgroundColor:'#014d88',color:\"#fff\", padding:'10px'}}>\r\n                                <Typography className={classes.heading}><b>Previous Clinical Notes</b></Typography>\r\n                            </Label>\r\n\r\n                        </Card.Content>\r\n                        <Card.Content style={{padding:'5px'}}>\r\n                            <Feed>\r\n                                {previousConsultation && previousConsultation.length > 0 &&\r\n                                    previousConsultation.map(consultation =>\r\n                                        <Accordion>\r\n                                            <AccordionSummary\r\n                                                expandIcon={<ExpandMoreIcon style={{color:'#fff'}} />}\r\n                                                aria-controls=\"panel2a-content\"\r\n                                                id=\"panel2a-header\"\r\n                                                style={{padding:'0px 0px 0px 10px',backgroundColor:'#1678c2',border:'2px solid #ddd',color:'#fff'}}\r\n                                            >\r\n                                                <Typography className={classes.heading} >Consultation -Date - {consultation.encounterDate}</Typography>\r\n                                            </AccordionSummary>\r\n                                            <AccordionDetails style={{padding:'10px 5px',minHeight:100,border:'2px solid #ddd', marginTop:'-10px'}}>\r\n                                                {consultation.visitNotes}\r\n                                            </AccordionDetails>\r\n                                        </Accordion>\r\n                                    )\r\n\r\n                                }\r\n\r\n                                { previousConsultation.map((consultation, i) => (\r\n                                    <div>\r\n                                        <Feed.Event>\r\n                                            <Feed.Content>\r\n                                                <Feed.Date content={consultation.encounterDate} />\r\n                                                <Feed.Summary>\r\n                                                    {consultation.visitNotes}\r\n                                                </Feed.Summary>\r\n                                            </Feed.Content>\r\n                                        </Feed.Event>\r\n                                        <hr/>\r\n                                    </div>\r\n                                )) }\r\n                            </Feed>\r\n                        </Card.Content>\r\n                    </Card>\r\n                }\r\n            </Segment>\r\n          </Grid.Column>\r\n            <AddPharmacyOrder toggle={toggle} patientObj={patientObj} showModal={pharmacyModal} />\r\n            <EditPharmacyOrder toggle={toggleOrder} patientObj={patientObj}\r\n             showModal={pharmacyOrderModal} editPharmacyOrderValue={editPharmacyOrderValue}/>*/}\r\n        </Grid>\r\n    );\r\n  };\r\n\r\nexport default Widget;\r\n","import React, {Fragment} from 'react';\r\nimport {FormControl, FormGroup} from \"@material-ui/core\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport {Button, Icon, Input, List, Table} from \"semantic-ui-react\";\r\n\r\nfunction PatientConsultationHistoryCard({visit}) {\r\n    return (\r\n        <div>\r\n            <Paper elevation={1} style={{maxHeight: 250, overflow: 'auto',padding:'10px', backgroundColor:'#039be5'}}>\r\n                <h3 style={{color:'#fff '}}> {visit.encounterDate} --- Consultation</h3>\r\n            </Paper>\r\n\r\n            <h3 style={{color:'#992E62'}}>Clinical Notes</h3>\r\n            <Divider />\r\n            <Paper elevation={1} style={{minHeight:200, maxHeight: 350, scrollbarWidth:'10', overflow: 'auto',border:'1px solid #A5E2FF', marginTop:'5px'}}>\r\n                <div style={{border:'10px solid #fff'}}>\r\n                    <Typography variant=\"body1\" style={{fontFamily:'Trebuchet'}}>\r\n                        {visit.visitNotes}\r\n                    </Typography>\r\n                </div>\r\n            </Paper>\r\n\r\n            <h3 style={{color:'#014d88'}}>Presenting Complaints</h3>\r\n            <Divider />\r\n            <Paper elevation={1} style={{minHeight:100, overflow: 'auto',border:'1px solid #A5E2FF', marginTop:'5px'}}>\r\n                <div style={{border:'5px solid #fff'}}>\r\n                    <Table style={{color:'#014d88',borderColor:'#ddd'}} celled >\r\n                        <Table.Header style={{backgroundColor:'#014d88',color:'#fff',borderColor:'#014d88'}}>\r\n                            <Table.Row>\r\n                                <Table.Cell style={{ fontWeight: 'bold'}}>Complaints</Table.Cell>\r\n                                <Table.Cell style={{ fontWeight: 'bold'}}>Onset Date</Table.Cell>\r\n                                <Table.Cell style={{ fontWeight: 'bold'}}>Severity</Table.Cell>\r\n                                <Table.Cell style={{ fontWeight: 'bold'}}>Date Resolved</Table.Cell>\r\n                            </Table.Row>\r\n                        </Table.Header>\r\n\r\n                        <Table.Body>\r\n                            {visit.presentingComplaints.map((presentingComplaint, index) => (\r\n                                <Fragment key={`${presentingComplaint.id}~${index}`}>\r\n                                    <Table.Row>\r\n                                        <Table.Cell>\r\n                                            {presentingComplaint.complaint}\r\n                                        </Table.Cell>\r\n                                        <Table.Cell>\r\n                                            {presentingComplaint.onsetDate}\r\n                                        </Table.Cell>\r\n                                        <Table.Cell>\r\n                                            {presentingComplaint.severity}\r\n                                        </Table.Cell>\r\n                                        <Table.Cell>\r\n                                            {presentingComplaint.dateResolved}\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                </Fragment>\r\n                            ))}\r\n                        </Table.Body>\r\n                    </Table>\r\n                </div>\r\n            </Paper>\r\n\r\n            <h3 style={{color:'#992E62'}}>Clinical Diagnosis</h3>\r\n            <Divider />\r\n            <Paper elevation={1} style={{minHeight:100,border:'5px solid #f7f7f7', marginTop:'5px'}}>\r\n                <div style={{border:'5px solid #fff'}}>\r\n                    <Table style={{color:'#014d88',borderColor:'#ddd'}} celled >\r\n                        <Table.Header style={{backgroundColor:'#992E62',color:'#fff',borderColor:'#ddd'}}>\r\n                            <Table.Row>\r\n                                <Table.Cell style={{ fontWeight: 'bold'}}>Condition</Table.Cell>\r\n                                <Table.Cell style={{ fontWeight: 'bold'}}>Order</Table.Cell>\r\n                                <Table.Cell style={{ fontWeight: 'bold'}}>Certainty</Table.Cell>\r\n                                <Table.Cell style={{ fontWeight: 'bold'}}></Table.Cell>\r\n                            </Table.Row>\r\n                        </Table.Header>\r\n\r\n                        <Table.Body>\r\n                            {visit.diagnosisList.map((diagnosis, index) => (\r\n                                <Fragment key={`${diagnosis.id}~${index}`}>\r\n                                    <Table.Row>\r\n                                        <Table.Cell>\r\n                                            {diagnosis.diagnosis}\r\n                                        </Table.Cell>\r\n                                        <Table.Cell>\r\n                                            {diagnosis.order}\r\n                                        </Table.Cell>\r\n                                        <Table.Cell>\r\n                                            {diagnosis.certainty}\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                </Fragment>\r\n                            ))}\r\n                        </Table.Body>\r\n                    </Table>\r\n                </div>\r\n            </Paper>\r\n\r\n\r\n            <h3 style={{color:'teal'}}>Laboratory Test</h3>\r\n            <Divider />\r\n            <Paper elevation={1} style={{minHeight:100,border:'5px solid #f7f7f7', marginTop:'5px'}}>\r\n                <div style={{border:'5px solid #fff'}}>\r\n                    <Table style={{color:'#014d88',borderColor:'#ddd'}} celled >\r\n                        <Table.Header style={{backgroundColor:'teal',color:'#fff',borderColor:'#ddd'}}>\r\n                            <Table.Row>\r\n                                <Table.Cell style={{ fontWeight: 'bold'}}>Condition</Table.Cell>\r\n                                <Table.Cell style={{ fontWeight: 'bold'}}>Order</Table.Cell>\r\n                                <Table.Cell style={{ fontWeight: 'bold'}}>Certainty</Table.Cell>\r\n                                <Table.Cell style={{ fontWeight: 'bold'}}></Table.Cell>\r\n                            </Table.Row>\r\n                        </Table.Header>\r\n\r\n                        <Table.Body>\r\n                            {visit.diagnosisList.map((diagnosis, index) => (\r\n                                <Fragment key={`${diagnosis.id}~${index}`}>\r\n                                    <Table.Row>\r\n                                        <Table.Cell>\r\n                                            {diagnosis.diagnosis}\r\n                                        </Table.Cell>\r\n                                        <Table.Cell>\r\n                                            {diagnosis.order}\r\n                                        </Table.Cell>\r\n                                        <Table.Cell>\r\n                                            {diagnosis.certainty}\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                </Fragment>\r\n                            ))}\r\n                        </Table.Body>\r\n                    </Table>\r\n                </div>\r\n            </Paper>\r\n\r\n\r\n            <h3 style={{color:'purple '}}>Pharmacy Order</h3>\r\n            <Divider />\r\n            <Paper elevation={1} style={{minHeight:100,border:'5px solid #f7f7f7', marginTop:'5px'}}>\r\n                <div style={{border:'10px solid #fff'}}>\r\n                    <Table style={{color:'#014d88',borderColor:'#ddd'}} celled >\r\n                        <Table.Header style={{backgroundColor:'purple',color:'#fff',borderColor:'#ddd'}}>\r\n                            <Table.Row>\r\n                                <Table.Cell style={{ fontWeight: 'bold'}}>Condition</Table.Cell>\r\n                                <Table.Cell style={{ fontWeight: 'bold'}}>Order</Table.Cell>\r\n                                <Table.Cell style={{ fontWeight: 'bold'}}>Certainty</Table.Cell>\r\n                                <Table.Cell style={{ fontWeight: 'bold'}}></Table.Cell>\r\n                            </Table.Row>\r\n                        </Table.Header>\r\n\r\n                        <Table.Body>\r\n                            {visit.diagnosisList.map((diagnosis, index) => (\r\n                                <Fragment key={`${diagnosis.id}~${index}`}>\r\n                                    <Table.Row>\r\n                                        <Table.Cell>\r\n                                            {diagnosis.diagnosis}\r\n                                        </Table.Cell>\r\n                                        <Table.Cell>\r\n                                            {diagnosis.order}\r\n                                        </Table.Cell>\r\n                                        <Table.Cell>\r\n                                            {diagnosis.certainty}\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                </Fragment>\r\n                            ))}\r\n                        </Table.Body>\r\n                    </Table>\r\n                </div>\r\n            </Paper>\r\n\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PatientConsultationHistoryCard;","import React, { useEffect, useState, useCallback } from 'react';\r\nimport { useHistory, Link  } from \"react-router-dom\";\r\nimport MaterialTable, { MTableToolbar, cellStyle, headerStyle } from 'material-table';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport { Grid,Container, Segment, Label, Icon, List,Button, Feed, Input, Radio } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport \"@reach/menu-button/styles.css\";\r\nimport ButtonMui from \"@material-ui/core/Button\";\r\nimport { toast } from 'react-toastify';\r\nimport Box from '@mui/material/Box';\r\nimport Card from \"@mui/material/Card\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport PatientCardDetail from \"../Patient/PatientCard\";\r\nimport RecentHistory from \"./RecentHistory\";\r\nimport PatientConsultationHistoryCard from \"./PatientConsulationHistoryCard\";\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        width: '100%',\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n    gridItem:{\r\n        padding:'30px'\r\n    }\r\n}));\r\n\r\nconst PatientConsultationHistory = (props) => {\r\n    const classes =useStyles();\r\n    let history = useHistory();\r\n    const [patientList, setPatientList] = useState([]);\r\n    const patientObj = history.location && history.location.state ? history.location.state.patientObj : {};\r\n    const[selectedVisit,setSelectedVisit] = useState();\r\n\r\n    ///GET LIST OF Patients\r\n    const patientConsultations = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}consultations/consultations-by-patient-id/${patientObj.id}`, {headers: {\"Authorization\": `Bearer ${token}`}});\r\n            setPatientList(response.data);\r\n            if(response.data.length > 0 ){\r\n                setSelectedVisit(response.data[0]);\r\n            }\r\n        } catch (e) {\r\n            toast.error(\"An error occured while fetching consultation !\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        patientConsultations()\r\n    }, [patientConsultations]);\r\n\r\n    const formatDiagnosis = diagnosisList => {\r\n        return diagnosisList.map(obj => obj.diagnosis) + \" ,\";\r\n    };\r\n    const formatPresentingComplaints = presentingComplaintsList => {\r\n        return presentingComplaintsList.map(obj => obj.complaint) + \" ,\";\r\n    };\r\n    const loadConsultationDetails = (row)=>{\r\n        setSelectedVisit(row);\r\n        console.log(row);\r\n    }\r\n    return (\r\n        <Container style={{width:'100%'}}>\r\n            <br/><br/>\r\n            <Link to={\"/\"} >\r\n                <ButtonMui\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className=\" float-end ms-2\"\r\n                >\r\n                    <span style={{ textTransform: \"capitalize\" }}>Back</span>\r\n                </ButtonMui>\r\n            </Link>\r\n            <br/><br/>\r\n\r\n            <Card >\r\n                <CardContent>\r\n                    <Grid  columns='equal'  divided>\r\n                        <Grid.Column width={4}  style={{padding:'5px'}} item>\r\n                            <MaterialTable\r\n                                icons={tableIcons}\r\n                                /*title=\"Patient Consultations\"*/\r\n                                title=\"\"\r\n                                columns={[\r\n                                    // { title: \" ID\", field: \"Id\" },\r\n                                    {\r\n                                        title: \"Consultation Visits\", field: \"date\",\r\n                                        /*                                           cellStyle: {\r\n                                                                                       backgroundColor: '#039be5',\r\n                                                                                       color: '#FFF'\r\n                                                                                   },*/\r\n                                        cellStyle:{\r\n                                            padding:'10px 5px'\r\n                                        },\r\n                                        headerStyle: {\r\n                                            backgroundColor: '#014d88',\r\n                                        }\r\n                                    },\r\n                                    /*                                        { title: \"Visit Notes\", field: \"visitNotes\", filtering: false },\r\n                                                                            { title: \"Diagnosis List\", field: \"diagnosisList\", filtering: false },\r\n                                                                            { title: \"Presenting Complaints\", field: \"presentingComplaints\", filtering: false },\r\n                                                                            { title: \"Actions\", field: \"actions\", filtering: false },*/\r\n                                ]}\r\n                                data={ patientList.map((row) => ({\r\n                                    //Id: manager.id,\r\n                                    date:\r\n                                        <div>\r\n\r\n                                            <Button\r\n                                                basic\r\n                                                className=\" float-end ms-2\"\r\n                                                style={{width:'100%',border:'1px dotted #eee'}}\r\n                                                onClick={()=>loadConsultationDetails(row)}\r\n                                            >\r\n                                                <span style={{padding:'10px 0px', fontSize:'16px', color: '#014d88', fontWeight:'bolder',float:'left'}}>{row.encounterDate} -- Status --- (Closed)</span>\r\n                                            </Button>\r\n                                        </div>\r\n                                    /*                                        date:row.encounterDate,\r\n                                                                            visitNotes:row.visitNotes,\r\n                                                                            diagnosisList:formatDiagnosis(row.diagnosisList),\r\n                                                                            presentingComplaints:formatPresentingComplaints(row.presentingComplaints),\r\n                                                                            actions:\r\n                                                                                <div>\r\n                                                                                    <Link\r\n                                                                                        to={{\r\n                                                                                            pathname: \"/patient-consultation\",\r\n                                                                                            state: { patientObj: row  }\r\n                                                                                        }}>\r\n                                                                                        <Button\r\n                                                                                            icon\r\n                                                                                            inverted\r\n                                                                                            color='blue'\r\n                                                                                            className=\" float-end ms-2\"\r\n                                                                                        >\r\n                                                                                            <Icon name='eye' />\r\n                                                                                        </Button>\r\n                                                                                    </Link>\r\n                                                                                </div>*/\r\n\r\n                                }))}\r\n\r\n                                options={{\r\n                                    headerStyle: {\r\n                                        backgroundColor: \"#014d88\",\r\n                                        color: \"#fff\",\r\n                                        fontSize:'16px',\r\n                                        padding:'10px',\r\n                                        fontWeight:'bolder'\r\n                                    },\r\n                                    searchFieldStyle: {\r\n                                        width : '100%',\r\n                                    },\r\n                                    toolbar: false,\r\n                                    search: false,\r\n                                    filtering: false,\r\n                                    exportButton: false,\r\n                                    /*searchFieldAlignment: 'left',*/\r\n                                    pageSizeOptions:[10,20,100],\r\n                                    pageSize:10,\r\n                                    debounceInterval: 400\r\n                                }}\r\n                            />\r\n                        </Grid.Column>\r\n                        <Grid.Column style={{padding:'0px 10px'}} item>\r\n                            {selectedVisit &&\r\n                                <Card >\r\n                                    <CardContent style={{width:'100%',padding:'5px'}}>\r\n                                        <PatientConsultationHistoryCard visit={selectedVisit} />\r\n                                    </CardContent>\r\n                                </Card>\r\n                            }\r\n\r\n                        </Grid.Column>\r\n                    </Grid>\r\n                </CardContent>\r\n            </Card>\r\n\r\n\r\n\r\n\r\n            {/*                        <MaterialTable\r\n                            icons={tableIcons}\r\n                            title=\"Patient Consultationsz\"\r\n                            columns={[\r\n                                // { title: \" ID\", field: \"Id\" },\r\n                                {\r\n                                  title: \"Encounter Date\", field: \"date\",\r\n                                    cellStyle: {\r\n                                          backgroundColor: '#039be5',\r\n                                          color: '#FFF'\r\n                                        },\r\n                                        headerStyle: {\r\n                                          backgroundColor: '#039be5',\r\n                                        }\r\n                                },\r\n                                { title: \"Visit Notes\", field: \"visitNotes\", filtering: false },\r\n                                { title: \"Diagnosis List\", field: \"diagnosisList\", filtering: false },\r\n                                { title: \"Presenting Complaints\", field: \"presentingComplaints\", filtering: false },\r\n                                { title: \"Actions\", field: \"actions\", filtering: false },\r\n                            ]}\r\n                            data={ patientList.map((row) => ({\r\n                                //Id: manager.id,\r\n                                date:row.encounterDate,\r\n                                visitNotes:row.visitNotes,\r\n                                diagnosisList:formatDiagnosis(row.diagnosisList),\r\n                                presentingComplaints:formatPresentingComplaints(row.presentingComplaints),\r\n                                actions:\r\n                                    <div>\r\n                                        <Link\r\n                                            to={{\r\n                                                pathname: \"/patient-consultation\",\r\n                                                state: { patientObj: row  }\r\n                                            }}>\r\n                                             <Button\r\n                                                icon\r\n                                                inverted\r\n                                                color='blue'\r\n                                                className=\" float-end ms-2\"\r\n                                             >\r\n                                             <Icon name='eye' />\r\n                                            </Button>\r\n                                        </Link>\r\n                                    </div>\r\n\r\n                            }))}\r\n\r\n                            options={{\r\n                                headerStyle: {\r\n                                    backgroundColor: \"#01579b\",\r\n                                    color: \"#ccc\",\r\n                                },\r\n                                searchFieldStyle: {\r\n                                    width : '200%',\r\n                                    margingLeft: '250px',\r\n                                },\r\n                                filtering: false,\r\n                                exportButton: false,\r\n                                searchFieldAlignment: 'left',\r\n                                pageSizeOptions:[10,20,100],\r\n                                pageSize:10,\r\n                                debounceInterval: 400\r\n                            }}\r\n                        />*/}\r\n        </Container>\r\n\r\n    );\r\n};\r\n\r\nexport default PatientConsultationHistory;\r\n","import React, {Fragment, useState, useCallback, useEffect } from \"react\";\r\nimport { KeyboardDateTimePicker, MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport axios from \"axios\";\r\nimport { toast } from 'react-toastify';\r\nimport {token, url as baseUrl, apiUrl as apiUrl } from \"../../../api\";\r\nimport { Grid, Segment, Label, Icon, List,Button, Card, Feed, Input, Radio } from 'semantic-ui-react';\r\nimport {  Checkbox, Table } from 'semantic-ui-react';\r\nimport {format} from \"date-fns\";\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport ButtonMui from \"@material-ui/core/Button\";\r\n\r\nconst Widget = (props) => {\r\n    let history = useHistory();\r\n    const patientObj = history.location && history.location.state ? history.location.state.patientObj : {}\r\n    //console.log(\"pb\",patientObj)\r\n    const [patient, setPatient] = useState({});\r\n    const [isLabEnabled, setIsLabEnabled] = useState(false);\r\n    const [isPharmacyEnabled, setIsPharmacyEnabled] = useState(false);\r\n    const [hasAllergies, setHasAllergies] = useState(false);\r\n    const [pharmacyModal, setPharmacyModal] = useState(false);\r\n    const [latestVitals, setLatestVitals] = useState([]);\r\n    const [previousConsultation, setPreviousConsultation] = useState([]);\r\n    const [encounterDate, setEncounterDate] = useState(new Date());\r\n    const { handleSubmit, control, getValues, setError, setValue } = useForm();\r\n    const [inputFields, setInputFields] = useState(patientObj.presentingComplaints);\r\n    const [inputFieldsDiagnosis, setInputFieldsDiagnosis] = useState(patientObj.diagnosisList);\r\n    const [inputFieldsLab, setInputFieldsLab] = useState([\r\n            { encounterDate: format(new Date(), 'yyyy-MM-dd'), labOrder: '',\r\n            labTest: '', priority: '', status: '' }\r\n        ]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [drugs, setDrugs] = useState([]);\r\n    const [dosageUnits, setDosageUnits] = useState([]);\r\n    const [durationUnits, setDurationUnits] = useState([]);\r\n    const [editPharmacyOrder, setEditPharmacyOrder] = useState({\r\n        encounterDateTime: \"\",\r\n        drugName: \"\",\r\n        dosageStrength: \"\",\r\n        dosageStrengthUnit: \"\",\r\n        dosageFrequency: \"\",\r\n        startDate: \"\",\r\n        duration: \"\",\r\n        durationUnit: \"\",\r\n        comments: \"\",\r\n        orderedBy: \"\",\r\n        dateTimePrescribed: \"\"\r\n    });\r\n\r\n    const toggle = () => setPharmacyModal(!pharmacyModal);\r\n\r\n    const onSubmit = async (data) => {\r\n        const diagnosisList = [];\r\n        const presentingComplaints = [];\r\n        const labTests = [];\r\n\r\n        for (const inputFieldsDiag of inputFieldsDiagnosis) {\r\n            if (inputFieldsDiag.diagnosis) {\r\n                diagnosisList.push(inputFieldsDiag);\r\n            }\r\n        }\r\n\r\n        for (const inputField of inputFields) {\r\n            if (inputField.complaint) {\r\n                presentingComplaints.push(inputField);\r\n            }\r\n        }\r\n\r\n        try {\r\n            const InData = {\r\n                \"diagnosisList\": diagnosisList,\r\n                \"encounterDate\": patientObj.encounterDate,\r\n                \"patientId\": patientObj.patientId,\r\n                \"id\": patientObj.id,\r\n                \"presentingComplaints\": presentingComplaints,\r\n                \"visitId\": patientObj.visitId,\r\n                \"visitNotes\": patientObj.visitNotes\r\n            };\r\n\r\n            await axios.put(`${baseUrl}consultations/${patientObj.id}`, InData,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }).then(( resp ) => {\r\n                console.log(\"diagnosis updated successfully\", resp)\r\n            });\r\n\r\n            for (const inputField of inputFieldsLab) {\r\n            //console.log(\"input\",inputField)\r\n                if (inputField.id) {\r\n                    labTests.push({\r\n                    \"id\": inputField.id,\r\n                    \"labTestGroupId\": inputField.labOrder,\r\n                    \"labTestId\": inputField.labTest,\r\n                    \"labTestOrderStatus\": inputField.status,\r\n                    \"orderPriority\": inputField.priority,\r\n                  });\r\n                }\r\n            }\r\n\r\n            const labOrder = {\r\n                  \"id\": inputFieldsLab[0].id,\r\n                  \"orderDate\": inputFieldsLab[0].orderDate,\r\n                  \"patientId\": patientObj.patientId,\r\n                  \"tests\": labTests,\r\n                  \"visitId\": patientObj.visitId\r\n            }\r\n\r\n            console.log(\"lb\", labOrder)\r\n\r\n            axios.put(`${baseUrl}laboratory/orders/${inputFieldsLab[0].orderId}`, labOrder,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }).then(( resp ) => {\r\n               console.log(\"lab updated successfully\", resp)\r\n                for (const pharm of editPharmacyOrder) {\r\n                    console.log(\"pharm\", pharm)\r\n                    axios.put(`${apiUrl}drug-orders/${pharm.id}`, pharm,\r\n                       { headers: {\"Authorization\" : `Bearer ${token}`}}).then(resp => {\r\n                           console.log(\"drug updated successfully\", resp );\r\n                       });\r\n               }\r\n            });\r\n\r\n            toast.success(\"Successfully updated patient consultation!\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n           history.push('/');\r\n\r\n        } catch (e) {\r\n            toast.error(\"An error occured while saving Consultation !\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n    };\r\n\r\n    const OnError = (errors) => {\r\n        console.error(errors);\r\n        toast.error(\"Visit Note Is Required\", {\r\n            position: toast.POSITION.TOP_RIGHT\r\n        });\r\n    };\r\n\r\n    const [labGroups, setLabGroups] = useState([]);\r\n    const [labTests, setLabTests] = useState([]);\r\n    const [priorities, setPriorities] = useState([]);\r\n\r\n    const loadLabCheck = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}modules/check?moduleName=lab`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setIsLabEnabled(response.data);\r\n        } catch (e) {\r\n            toast.error(\"An error occurred while fetching lab\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    const loadPharmacyCheck = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}modules/check?moduleName=pharmacy`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setIsPharmacyEnabled(response.data);\r\n        } catch (e) {\r\n            toast.error(\"An error occurred while fetching pharmacy\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    const loadLatestVitals = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}patient/vital-sign/person/${patientObj.patientId}`, { headers: {\"Authorization\" : `Bearer ${token}`}});\r\n            setLatestVitals(response.data);\r\n        } catch (e) {\r\n            toast.error(\"An error occurred while fetching vitals\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    const loadLabGroup = useCallback(async () => {\r\n            try {\r\n                const response = await axios.get(`${baseUrl}laboratory/labtestgroups`, { headers: {\"Authorization\" : `Bearer ${token}`}});\r\n                setLabGroups(response.data);\r\n            } catch (e) {\r\n                toast.error(\"An error occurred while fetching lap group data\", {\r\n                    position: toast.POSITION.TOP_RIGHT\r\n                });\r\n            }\r\n        }, []);\r\n\r\n    const priority = useCallback(async () => {\r\n            try {\r\n                const response = await axios.get(`${baseUrl}application-codesets/v2/TEST_ORDER_PRIORITY`, { headers: {\"Authorization\" : `Bearer ${token}`}});\r\n                //console.log(\"priority\", response.data);\r\n                setPriorities(response.data);\r\n            } catch (e) {\r\n                toast.error(\"An error occurred while fetching priority data\", {\r\n                    position: toast.POSITION.TOP_RIGHT\r\n                });\r\n            }\r\n        }, []);\r\n\r\n    const pharmacy_by_visitId = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${apiUrl}drug-orders/visits/${patientObj.visitId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}});\r\n\r\n            if (typeof response.data === 'string') {\r\n                setEditPharmacyOrder([]);\r\n            }else {\r\n                setEditPharmacyOrder(response.data);\r\n            }\r\n        } catch (e) {\r\n            toast.error(\"An error occurred while fetching pharmacy data\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    const labtest_by_visitId = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}laboratory/orders/visits/${patientObj.visitId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}});\r\n\r\n            const labTests = [];\r\n\r\n            for (const lab of response.data) {\r\n\r\n                for (const data of lab.labOrder.tests) {\r\n                    let labId = data.id;\r\n                    let labTestDesc = data.description;\r\n                    let labTestGroup = data.labTestGroupId;\r\n                    let labTestId = data.labTestId;\r\n                    let orderPriority = data.orderPriority;\r\n                    let labTestOrderStatus = data.labTestOrderStatus;\r\n\r\n                    let labdata = {\r\n                      labOrder: labTestGroup,\r\n                      labTest: labTestId,\r\n                      priority: orderPriority,\r\n                      status: labTestOrderStatus,\r\n                      id: labId,\r\n                      orderId: lab.labOrder.id,\r\n                      orderDate: lab.labOrder.orderDate\r\n                      };\r\n\r\n                    labTests.push(labdata)\r\n                }\r\n            }\r\n\r\n             setInputFieldsLab(labTests);\r\n        } catch (e) {\r\n            toast.error(\"An error occurred while fetching lab tests order data\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    let drugRows = null;\r\n    let dosageUnitsRows = null;\r\n    let durationUnitsRows = null;\r\n\r\n    const loadDosageUnits = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/DOSE_STRENGTH_UNIT`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}});\r\n            setDosageUnits(response.data);\r\n        } catch (e) {\r\n            toast.error(\"An error occurred while fetching DOSE STRENGTH UNIT\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    const loadDurationUnits = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/AGE_UNIT`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}});\r\n            setDurationUnits(response.data);\r\n        } catch (e) {\r\n            toast.error(\"An error occurred while fetching DOSE STRENGTH UNIT\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    const loadPharmacyDrugs = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${apiUrl}drugs`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}});\r\n            setDrugs(response.data);\r\n        } catch (e) {\r\n            toast.error(\"An error occurred while fetching drugs\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        loadPharmacyCheck();\r\n        loadLabCheck();\r\n        loadLatestVitals();\r\n        loadLabGroup();\r\n        priority();\r\n        labtest_by_visitId();\r\n        pharmacy_by_visitId();\r\n        loadDosageUnits();\r\n        loadDurationUnits();\r\n        loadPharmacyDrugs();\r\n    }, [loadPharmacyCheck, loadLabCheck, loadLatestVitals,\r\n    loadLabGroup, priority, labtest_by_visitId, pharmacy_by_visitId,\r\n    loadDosageUnits, loadDurationUnits, loadPharmacyDrugs]);\r\n\r\n    const handleAddFields = () => {\r\n        const values = [...inputFields];\r\n        values.push({ complaint: '', onsetDate: '', severity: 0, dateResolved: '' });\r\n        setInputFields(values);\r\n    };\r\n\r\n    const handleAddDiagFields = () => {\r\n        const values = [...inputFieldsDiagnosis];\r\n        values.push({ certainty: '', diagnosis: '', diagnosisOrder: 0 });\r\n        setInputFieldsDiagnosis(values);\r\n    };\r\n\r\n    const handleAddFieldsLab = () => {\r\n        const values = [...inputFieldsLab];\r\n        values.push({ encounterDate: format(new Date(), 'yyyy-MM-dd'), labOrder: '', labTest: '', priority: '', status: '' });\r\n        setInputFieldsLab(values);\r\n    };\r\n\r\n    const handleInputChange = (index, event) => {\r\n        const values = [...inputFields];\r\n        if (event.target.name === \"complaint\") {\r\n            values[index].complaint = event.target.value;\r\n        } else if (event.target.name === \"onsetDate\") {\r\n            values[index].onsetDate = event.target.value;\r\n        } else if (event.target.name === \"severity\") {\r\n            values[index].severity = event.target.value;\r\n        } else if (event.target.name === \"dateResolved\") {\r\n            values[index].dateResolved = event.target.value;\r\n        }\r\n        setInputFields(values);\r\n    };\r\n\r\n    const handleInputDiagChange = (index, event) => {\r\n        const values = [...inputFieldsDiagnosis];\r\n        if (event.target.name === \"diagnosis\") {\r\n            values[index].diagnosis = event.target.value;\r\n        } else if (event.target.name === \"certainty\") {\r\n            values[index].certainty = event.target.value;\r\n        } else if (event.target.name === \"diagnosisOrder\") {\r\n            values[index].diagnosisOrder = event.target.value;\r\n        }\r\n        setInputFieldsDiagnosis(values);\r\n    };\r\n\r\n    const labCascade = id => {\r\n        labGroups.forEach(function (x) {\r\n              if ( x.id == id) {\r\n                setLabTests(x.labTests)\r\n            }\r\n        });\r\n    }\r\n\r\n    const handleInputLabChange = (index, event) => {\r\n            const values = [...inputFieldsLab];\r\n            if (event.target.name === \"labOrder\") {\r\n                const str = event.target.value;\r\n                values[index].labOrder = str;\r\n                labCascade(str.slice(0,1))\r\n            }\r\n            else if (event.target.name === \"labTest\") {\r\n                values[index].labTest = event.target.value;\r\n            } else if (event.target.name === \"priority\") {\r\n                values[index].priority = event.target.value;\r\n            }\r\n            else if (event.target.name === \"status\") {\r\n                values[index].status = event.target.value;\r\n            }\r\n\r\n            setInputFieldsLab(values);\r\n        };\r\n\r\n    const handleInputChangePharmacyOrderDto = (index, e) => {\r\n        const values = [...editPharmacyOrder];\r\n        if (e.target.name === \"encounterDateTime\") {\r\n            values[index].encounterDateTime = e.target.value;\r\n        }\r\n        else if (e.target.name === \"drugName\") {\r\n            values[index].drugName = e.target.value;\r\n        }\r\n        else if (e.target.name === \"dosageStrength\") {\r\n            values[index].dosageStrength = e.target.value;\r\n        }\r\n        else if (e.target.name === \"dosageStrengthUnit\") {\r\n            values[index].dosageStrengthUnit = e.target.value;\r\n        }\r\n        else if (e.target.name === \"dosageFrequency\") {\r\n            values[index].dosageFrequency = e.target.value;\r\n        }\r\n        else if (e.target.name === \"startDate\") {\r\n            values[index].startDate = e.target.value;\r\n        }\r\n        else if (e.target.name === \"duration\") {\r\n            values[index].duration = e.target.value;\r\n        }\r\n        else if (e.target.name === \"durationUnit\") {\r\n            values[index].durationUnit = e.target.value;\r\n        }\r\n        else if (e.target.name === \"comments\") {\r\n            values[index].comments = e.target.value;\r\n        }\r\n        else if (e.target.name === \"orderedBy\") {\r\n            values[index].orderedBy = e.target.value;\r\n        }\r\n        else if (e.target.name === \"dateTimePrescribed\") {\r\n            values[index].dateTimePrescribed = e.target.value;\r\n        }\r\n        setEditPharmacyOrder(values);\r\n    };\r\n\r\n    const handleAddPharmacyOrder = () => {\r\n        setPharmacyModal(!pharmacyModal);\r\n    };\r\n\r\n    if (drugs && drugs.length > 0) {\r\n        drugRows = drugs.map((drug, index) => (\r\n            <option key={drug.name} value={drug.name}>{drug.name}</option>\r\n        ));\r\n    }\r\n    if (dosageUnits && dosageUnits.length > 0) {\r\n        dosageUnitsRows = dosageUnits.map((dosageUnit, index) => (\r\n            <option key={dosageUnit.display} value={dosageUnit.display}>{dosageUnit.display}</option>\r\n        ));\r\n    }\r\n    if (durationUnits && durationUnits.length > 0) {\r\n        durationUnitsRows = durationUnits.map((durationUnit, index) => (\r\n            <option key={durationUnit.display} value={durationUnit.display}>{durationUnit.display}</option>\r\n        ));\r\n    }\r\n\r\n    return (\r\n        <Grid columns='equal'>\r\n            <Grid.Column>\r\n                { latestVitals && latestVitals.length > 0 &&\r\n                    <Segment>\r\n                        <Label as='a' color='blue' ribbon>\r\n                            Recent Vitals\r\n                        </Label>\r\n                        <br/>\r\n                        <List celled>\r\n                            <List.Item>Pulse <span className=\"float-end\"><b>{latestVitals[latestVitals.length - 1].pulse}bpm</b></span></List.Item>\r\n                            <List.Item>Respiratory Rate <span className=\"float-end\"><b>{latestVitals[latestVitals.length - 1].respiratoryRate}bpm</b></span></List.Item>\r\n                            <List.Item>Temperature <span className=\"float-end\"><b>{latestVitals[latestVitals.length - 1].temperature}<sup>0</sup>C</b></span></List.Item>\r\n                            <List.Item>Blood Presure <span  className=\"float-end\"><b>{latestVitals[latestVitals.length - 1].systolic}/{latestVitals[latestVitals.length - 1].diastolic}</b></span></List.Item>\r\n                            <List.Item>Height <span  className=\"float-end\"><b>{latestVitals[latestVitals.length - 1].height}m</b></span></List.Item>\r\n                            <List.Item>Weight <span  className=\"float-end\"><b>{latestVitals[latestVitals.length - 1].bodyWeight}kg</b></span></List.Item>\r\n                        </List>\r\n                    </Segment>\r\n                }\r\n\r\n                { previousConsultation &&\r\n                    <Segment>\r\n                        <Label as='a' color='black' ribbon>\r\n                            Conditions\r\n                        </Label>\r\n                        <br/>\r\n\r\n                        { previousConsultation.map((consultation, i) => (\r\n                            <div>\r\n                                {consultation.diagnosisList.map((diagnosis, j)=> (\r\n                                    <Label as='a'  color='white'  size=\"mini\" pointing>\r\n                                        {diagnosis.diagnosis}\r\n                                    </Label>\r\n                                ))}\r\n                            </div>\r\n                        ))}\r\n                    </Segment>\r\n                }\r\n\r\n\r\n                { hasAllergies &&\r\n                    <Segment>\r\n                        <Label as='a' color='red' ribbon>\r\n                            Allergies\r\n                        </Label>\r\n                        <br/><br/>\r\n\r\n                        <Label.Group color='blue'>\r\n                            <Label as='a'  size=\"mini\">dust</Label>\r\n                            <Label as='a'  size=\"mini\">smoke</Label>\r\n                        </Label.Group>\r\n                    </Segment>\r\n                }\r\n            </Grid.Column>\r\n\r\n            <Grid.Column width={10}>\r\n                <form onSubmit={handleSubmit(onSubmit, OnError)}>\r\n                    <Label as='a' color='black' ribbon>\r\n                        <b>Physical Examination</b>\r\n                    </Label>\r\n\r\n                    <Segment>\r\n                        <div className=\"input-group input-group-sm mb-3\">\r\n                            <span className=\"input-group-text\">Encounter Date</span>\r\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                <Controller\r\n                                    name=\"encounterDate\"\r\n                                    control={control}\r\n                                    defaultValue={encounterDate}\r\n                                    rules={{ required: true }}\r\n                                    render={({ field: { ref, ...rest }}) => (\r\n                                        <KeyboardDateTimePicker\r\n                                            disableFuture\r\n                                            format=\"dd/MM/yyyy hh:mm a\"\r\n                                            value={patientObj.encounterDate}\r\n                                            onChange={setEncounterDate}\r\n                                            className=\"form-control\"\r\n                                            invalidDateMessage={\"Encounter date is required\"}\r\n                                            {...rest}\r\n                                        />\r\n                                    )}\r\n                                    />\r\n                            </MuiPickersUtilsProvider>\r\n                        </div>\r\n\r\n                        <div className=\"input-group input-group-sm mb-3\">\r\n                            <span className=\"input-group-text\">Visit Note</span>\r\n                            <Controller\r\n                                name=\"visitNote\"\r\n                                control={control}\r\n                                rules={{ required: false }}\r\n                                render={({ field: { ref, ...rest }}) => (\r\n                                    <textarea\r\n                                    className=\"form-control\"\r\n                                    style={{ minHeight: 100, fontSize: 14 }}\r\n                                    {...rest}\r\n                                    >{patientObj.visitNotes}</textarea>\r\n                                )}\r\n                            />\r\n                        </div>\r\n                        <br/>\r\n                        <Label as='a' color='red' ribbon>\r\n                            Presenting Complaints\r\n                        </Label>\r\n                        <Table color=\"red\" celled>\r\n                            <Table.Header>\r\n                                <Table.Row>\r\n                                    <Table.Cell style={{ fontWeight: 'bold'}}>Complaints</Table.Cell>\r\n                                    <Table.Cell style={{ fontWeight: 'bold'}}>Onset Date</Table.Cell>\r\n                                    <Table.Cell style={{ fontWeight: 'bold'}}>Severity</Table.Cell>\r\n                                    <Table.Cell style={{ fontWeight: 'bold'}}>Date Resolved</Table.Cell>\r\n                                </Table.Row>\r\n                            </Table.Header>\r\n\r\n                            <Table.Body>\r\n                                    {inputFields && inputFields.map((inputField, index) => (\r\n                                        <Fragment key={`${inputField}~${index}`}>\r\n                                            <Table.Row>\r\n                                            <Table.Cell>\r\n                                                <Input\r\n                                                    id=\"complaint\"\r\n                                                    name=\"complaint\"\r\n                                                    type=\"text\"\r\n                                                    fluid\r\n                                                    placeholder='Enter Presenting Complaints'\r\n                                                    value={inputField.complaint}\r\n                                                    onChange={event => handleInputChange(index, event)}\r\n                                                />\r\n                                            </Table.Cell>\r\n                                            <Table.Cell>\r\n                                                <Input\r\n                                                    id=\"onsetDate\"\r\n                                                    name=\"onsetDate\"\r\n                                                    type=\"date\"\r\n                                                    fluid\r\n                                                    placeholder='Onset Date'\r\n                                                    value={inputField.onsetDate}\r\n                                                    onChange={event => handleInputChange(index, event)}\r\n                                                />\r\n                                            </Table.Cell>\r\n                                            <Table.Cell>\r\n                                                <select\r\n                                                    class=\"ui fluid selection dropdown\"\r\n                                                    value={inputField.severity}\r\n                                                    onChange={event => handleInputChange(index, event)}\r\n                                                    name=\"severity\"\r\n                                                    id=\"severity\">\r\n                                                    <option value=\"0\">0</option>\r\n                                                    <option value=\"1\">1</option>\r\n                                                    <option value=\"2\">2</option>\r\n                                                    <option value=\"3\">3</option>\r\n                                                    <option value=\"4\">4</option>\r\n                                                    <option value=\"5\">5</option>\r\n                                                    <option value=\"6\">6</option>\r\n                                                    <option value=\"7\">7</option>\r\n                                                    <option value=\"8\">8</option>\r\n                                                    <option value=\"9\">9</option>\r\n                                                    <option value=\"10\">10</option>\r\n                                                </select>\r\n                                            </Table.Cell>\r\n                                            <Table.Cell>\r\n                                                <Input\r\n                                                    id=\"dateResolved\"\r\n                                                    name=\"dateResolved\"\r\n                                                    type=\"date\"\r\n                                                    fluid\r\n                                                    placeholder='Date Resolved'\r\n                                                    value={inputField.dateResolved}\r\n                                                    onChange={event => handleInputChange(index, event)}\r\n                                                />\r\n                                            </Table.Cell>\r\n                                            </Table.Row>\r\n                                        </Fragment>\r\n                                    ))}\r\n\r\n                            </Table.Body>\r\n\r\n                            <Table.Footer>\r\n                                <Table.Row>\r\n                                    <Table.HeaderCell>\r\n                                        <Button color=\"blue\" size=\"tiny\" type=\"button\" onClick={() => handleAddFields()}>\r\n                                            <Icon name='plus' /> Add More\r\n                                        </Button>\r\n                                    </Table.HeaderCell>\r\n                                </Table.Row>\r\n                            </Table.Footer>\r\n                        </Table>\r\n                        <br/>\r\n                        <Label as='a' color='pink' ribbon>\r\n                            Clinical Diagnosis\r\n                        </Label>\r\n                        <Table color=\"pink\" celled>\r\n                            <Table.Header>\r\n                                <Table.Row>\r\n                                    <Table.Cell style={{ fontWeight: 'bold'}}>Condition</Table.Cell>\r\n                                    <Table.Cell style={{ fontWeight: 'bold'}}>Order</Table.Cell>\r\n                                    <Table.Cell style={{ fontWeight: 'bold'}}>Certainty</Table.Cell>\r\n                                    <Table.Cell style={{ fontWeight: 'bold'}}></Table.Cell>\r\n                                </Table.Row>\r\n                            </Table.Header>\r\n\r\n                            <Table.Body>\r\n                                {inputFieldsDiagnosis && inputFieldsDiagnosis.map((diagInputField, diagIndex) => (\r\n                                    <Fragment key={`${diagInputField}~${diagIndex}`}>\r\n                                        <Table.Row>\r\n                                            <Table.Cell>\r\n                                                <Input\r\n                                                    id=\"diagnosis\"\r\n                                                    name=\"diagnosis\"\r\n                                                    type=\"text\"\r\n                                                    fluid\r\n                                                    placeholder='Condition'\r\n                                                    value={diagInputField.diagnosis}\r\n                                                    onChange={event => handleInputDiagChange(diagIndex, event)}\r\n                                                />\r\n                                            </Table.Cell>\r\n                                            <Table.Cell>\r\n                                                <select\r\n                                                    className=\"ui fluid selection dropdown\"\r\n                                                    value={diagInputField.diagnosisOrder}\r\n                                                    onChange={event => handleInputDiagChange(diagIndex, event)}\r\n                                                    name=\"diagnosisOrder\"\r\n                                                    id=\"diagnosisOrder\">\r\n                                                    <option></option>\r\n                                                    <option value=\"1\">Primary</option>\r\n                                                    <option value=\"2\">Secondary</option>\r\n                                                </select>\r\n                                            </Table.Cell>\r\n                                            <Table.Cell>\r\n                                                <select\r\n                                                    className=\"ui fluid selection dropdown\"\r\n                                                    value={diagInputField.certainty}\r\n                                                    onChange={event => handleInputDiagChange(diagIndex, event)}\r\n                                                    name=\"certainty\"\r\n                                                    id=\"certainty\">\r\n                                                    <option></option>\r\n                                                    <option value=\"1\">Presumed</option>\r\n                                                    <option value=\"2\">Confirmed</option>\r\n                                                </select>\r\n                                            </Table.Cell>\r\n                                            <Table.Cell></Table.Cell>\r\n                                        </Table.Row>\r\n                                    </Fragment>\r\n                                ))}\r\n                            </Table.Body>\r\n\r\n                            <Table.Footer>\r\n                                <Table.Row>\r\n                                    <Table.HeaderCell>\r\n\r\n                                        <Button color=\"blue\" size=\"tiny\" type=\"button\" onClick={() => handleAddDiagFields()}>\r\n                                            <Icon name='plus' /> Add More\r\n                                        </Button>\r\n                                    </Table.HeaderCell>\r\n\r\n                                </Table.Row>\r\n                            </Table.Footer>\r\n                        </Table>\r\n                        <br/>\r\n                        { isLabEnabled && <div>\r\n                            <Label as='a' color='teal' ribbon>\r\n                                Lab Test\r\n                            </Label>\r\n\r\n                            <Table color=\"teal\" celled>\r\n                                <Table.Header>\r\n                                    <Table.Row>\r\n                                        <Table.Cell style={{ fontWeight: 'bold'}}>Lab Test Group</Table.Cell>\r\n                                        <Table.Cell style={{ fontWeight: 'bold'}}>Lab Test</Table.Cell>\r\n                                        <Table.Cell style={{ fontWeight: 'bold'}}>Priority</Table.Cell>\r\n                                        <Table.Cell style={{ fontWeight: 'bold'}}>Status</Table.Cell>\r\n                                    </Table.Row>\r\n                                </Table.Header>\r\n\r\n                                <Table.Body>\r\n                                   {inputFieldsLab && inputFieldsLab.map((labInputField, labIndex) => (\r\n                                        <Fragment key={`${labInputField}~${labIndex}`}>\r\n                                            <Table.Row>\r\n                                                <Table.Cell>\r\n                                                    <select\r\n                                                        className=\"ui fluid selection dropdown\"\r\n                                                        value={labInputField.labOrder}\r\n                                                        onChange={ e => handleInputLabChange(labIndex, e)}\r\n                                                        name=\"labOrder\"\r\n                                                        id=\"labOrder\">\r\n                                                        <option></option>\r\n                                                        {\r\n                                                            labGroups.map((d)=> (\r\n                                                                <option key={d.id} value={`${d.id}-${d.groupName}`}>\r\n                                                                    {d.groupName}\r\n                                                                </option>\r\n                                                            ))\r\n                                                        }\r\n                                                    </select>\r\n\r\n                                                </Table.Cell>\r\n                                                <Table.Cell>\r\n                                                    <select\r\n                                                        className=\"ui fluid selection dropdown\"\r\n                                                        value={labInputField.labTest}\r\n                                                        onChange={e => handleInputLabChange(labIndex, e)}\r\n                                                        name=\"labTest\"\r\n                                                        id=\"labTest\">\r\n                                                        <option></option>\r\n                                                             {\r\n                                                                labTests.map((d)=> (\r\n                                                                    <option key={d.id} value={d.id}>\r\n                                                                        {d.labTestName}\r\n                                                                    </option>\r\n                                                                ))\r\n                                                            }\r\n                                                    </select>\r\n\r\n                                                </Table.Cell>\r\n                                                <Table.Cell>\r\n                                                <select\r\n                                                    className=\"ui fluid selection dropdown\"\r\n                                                    value={labInputField.priority}\r\n                                                    onChange={e => handleInputLabChange(labIndex, e)}\r\n                                                    name=\"priority\"\r\n                                                    id=\"priority\">\r\n                                                    <option></option>\r\n                                                       {\r\n                                                            priorities.map((d)=> (\r\n                                                                <option key={d.id} value={d.id}>\r\n                                                                    {d.display}\r\n                                                                </option>\r\n                                                            ))\r\n                                                        }\r\n                                                </select>\r\n\r\n                                                </Table.Cell>\r\n                                                <Table.Cell>\r\n                                                    <select\r\n                                                        className=\"ui fluid selection dropdown\"\r\n                                                        value={labInputField.status}\r\n                                                        onChange={e => handleInputLabChange(labIndex, e)}\r\n                                                        name=\"status\"\r\n                                                        id=\"status\">\r\n                                                        <option></option>\r\n                                                          <option value=\"0\">Pending Collection</option>\r\n                                                            <option value=\"1\">Sample Collected</option>\r\n                                                            <option value=\"2\">Sample Transferred</option>\r\n                                                            <option value=\"3\">Sample Verified</option>\r\n                                                            <option value=\"4\">Sample Rejected</option>\r\n                                                            <option value=\"5\">Result Available</option>\r\n\r\n                                                    </select>\r\n                                                </Table.Cell>\r\n                                            </Table.Row>\r\n                                        </Fragment>\r\n                                    ))}\r\n                                </Table.Body>\r\n\r\n                                <Table.Footer>\r\n                                    <Table.Row>\r\n                                        <Table.HeaderCell>\r\n\r\n                                            <Label as='a' color=\"blue\" size=\"tiny\" onClick={() => handleAddFieldsLab()}>\r\n                                                <Icon name='plus' /> Add Test\r\n                                            </Label>\r\n                                        </Table.HeaderCell>\r\n\r\n                                    </Table.Row>\r\n                                </Table.Footer>\r\n                            </Table>\r\n                        </div>}\r\n                        <br/>\r\n                        <Label as='a' color='purple' ribbon>\r\n                            Pharmacy Order\r\n                        </Label>\r\n                        <br/>\r\n                        <br/>\r\n\r\n                           {   editPharmacyOrder.length > 0 ?\r\n                               editPharmacyOrder.map((d, index)=> (\r\n                                  <Fragment key={index}>\r\n                                      <div className=\"row\">\r\n                                          <div className=\"col-md-6\">\r\n                                                <Input\r\n                                                   label=\"Order Date\"\r\n                                                   type=\"date\"\r\n                                                   name=\"encounterDateTime\"\r\n                                                   id=\"encounterDateTime\"\r\n                                                   fluid\r\n                                                   onChange={e => handleInputChangePharmacyOrderDto(index, e)}\r\n                                                   value={d.encounterDateTime.substring(0,10)}\r\n                                               />\r\n                                          </div>\r\n                                          <div className=\"col-md-6\">\r\n                                              <select\r\n                                                  label=\"Drug Name\"\r\n                                                  className=\"ui fluid selection dropdown\"\r\n                                                  onChange={e => handleInputChangePharmacyOrderDto(index, e)}\r\n                                                  value={d.drugName}\r\n                                                  name=\"drugName\"\r\n                                                  id=\"drugName\">\r\n                                                  <option></option>\r\n                                                  {drugRows}\r\n                                              </select>\r\n                                          </div>\r\n                                     </div>\r\n                                     <br />\r\n                                     <div className=\"row\">\r\n                                        <div className=\"col-md-6\">\r\n                                             <Input\r\n                                                 label=\"Dosage Strength\"\r\n                                                 type=\"text\"\r\n                                                 name=\"dosageStrength\"\r\n                                                 id=\"dosageStrength\"\r\n                                                 fluid\r\n                                                 onChange={e => handleInputChangePharmacyOrderDto(index, e)}\r\n                                                 value={d.dosageStrength}\r\n                                             />\r\n                                        </div>\r\n                                         <div className=\"col-md-6\">\r\n                                          <select\r\n                                              className=\"ui fluid selection dropdown\"\r\n                                              name=\"dosageStrengthUnit\"\r\n                                              id=\"dosageStrengthUnit\"\r\n                                              onChange={e => handleInputChangePharmacyOrderDto(index, e)}\r\n                                              value={d.dosageStrengthUnit}\r\n                                              >\r\n                                              <option></option>\r\n                                              {dosageUnitsRows}\r\n                                          </select>\r\n                                       </div>\r\n                                     </div>\r\n                                     <br/>\r\n                                     <div className=\"row\">\r\n\r\n                                         <div className=\"col-md-6\">\r\n                                           <Input\r\n                                              label=\"Drug Brand\"\r\n                                              type=\"text\"\r\n                                              name=\"brand\"\r\n                                              id=\"brand\"\r\n                                              fluid\r\n                                              onChange={e => handleInputChangePharmacyOrderDto(index, e)}\r\n                                              value={d.brand}\r\n                                           />\r\n                                         </div>\r\n                                         <div className=\"col-md-6\">\r\n                                              <Input\r\n                                                  label=\"Dosage Frequency\"\r\n                                                  type=\"text\"\r\n                                                  name=\"dosageFrequency\"\r\n                                                  id=\"dosageFrequency\"\r\n                                                  fluid\r\n                                                  onChange={e => handleInputChangePharmacyOrderDto(index, e)}\r\n                                                  value={d.dosageFrequency}\r\n                                              />\r\n                                         </div>\r\n                                    </div>\r\n                                    <br/>\r\n                                       <div className=\"row\">\r\n                                           <div className=\"col-md-4\">\r\n                                                <Input\r\n                                                    label=\"Start Date\"\r\n                                                    type=\"date\"\r\n                                                    name=\"startDate\"\r\n                                                    id=\"startDate\"\r\n                                                    fluid\r\n                                                    onChange={e => handleInputChangePharmacyOrderDto(index, e)}\r\n                                                    value={d.startDate}\r\n                                                />\r\n                                           </div>\r\n                                           <div className=\"col-md-4\">\r\n                                                 <Input\r\n                                                    label=\"Duration\"\r\n                                                    type=\"text\"\r\n                                                    name=\"duration\"\r\n                                                    id=\"duration\"\r\n                                                    fluid\r\n                                                    onChange={e => handleInputChangePharmacyOrderDto(index, e)}\r\n                                                    value={d.duration}\r\n                                                />\r\n                                           </div>\r\n                                           <div className=\"col-md-4\">\r\n                                               <select\r\n\r\n                                                     className=\"ui fluid selection dropdown\"\r\n                                                     name=\"durationUnit\"\r\n                                                     id=\"durationUnit\"\r\n                                                     onChange={e => handleInputChangePharmacyOrderDto(index, e)}\r\n                                                     value={d.durationUnit}\r\n                                                     >\r\n                                                     <option></option>\r\n                                                     {durationUnitsRows}\r\n                                                 </select>\r\n                                           </div>\r\n                                      </div>\r\n                                      <br/>\r\n                                      <div className=\"row\">\r\n                                       <Input\r\n                                             label=\"Comments\"\r\n                                             type=\"text\"\r\n                                             name=\"comments\"\r\n                                             id=\"comments\"\r\n                                             onChange={e => handleInputChangePharmacyOrderDto(index, e)}\r\n                                             value={d.comments}\r\n                                         />\r\n                                     </div>\r\n                                     <hr/>\r\n                                     </Fragment>\r\n                                  )) : \"No pharmacy order for patient.\"\r\n                           }\r\n\r\n                    </Segment>\r\n                    <Button type={\"submit\"} variant=\"contained\" color={\"primary\"}>Submit</Button>\r\n                </form>\r\n          </Grid.Column>\r\n          <Grid.Column>\r\n            <Segment>\r\n            <List>\r\n                  <List.Item>\r\n                      <Link\r\n                          to={{\r\n                              pathname: \"/\",\r\n                              state: { patientObj: patientObj  }\r\n                          }}>\r\n                          <Button icon labelPosition='right' color='green' fluid>\r\n                              <Icon name='angle double left' />\r\n                              Back\r\n                          </Button>\r\n                      </Link>\r\n                  </List.Item>\r\n                  <List.Item>\r\n                  <Button icon labelPosition='right' color='blue' fluid>\r\n                      <Icon name='calendar alternate' />\r\n                        Appointment\r\n                    </Button>\r\n                  </List.Item>\r\n            </List>\r\n                { previousConsultation &&\r\n                    <Card>\r\n                        <Card.Content>\r\n                            <b>Previous Clinical Notes</b>\r\n                        </Card.Content>\r\n                        <Card.Content>\r\n                            <Feed>\r\n                                { previousConsultation.map((consultation, i) => (\r\n                                    <div>\r\n                                        <Feed.Event>\r\n                                            <Feed.Content>\r\n                                                <Feed.Date content={consultation.encounterDate} />\r\n                                                <Feed.Summary>\r\n                                                    {consultation.visitNotes}\r\n                                                </Feed.Summary>\r\n                                            </Feed.Content>\r\n                                        </Feed.Event>\r\n                                        <hr/>\r\n                                    </div>\r\n                                )) }\r\n                            </Feed>\r\n                        </Card.Content>\r\n                    </Card>\r\n                }\r\n            </Segment>\r\n          </Grid.Column>\r\n        </Grid>\r\n    );\r\n  };\r\n\r\nexport default Widget;\r\n","import React from \"react\";\r\nimport {\r\n  MemoryRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nimport { ToastContainer} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport \"./main/webapp/vendor/bootstrap-select/dist/css/bootstrap-select.min.css\";\r\nimport \"./../src/main/webapp/css/style.css\";\r\n\r\nimport Home from './main/webapp/jsx/components/Home';\r\nimport PatientDetail from './main/webapp/jsx/components/Patient/PatientDetail';\r\nimport PatientConsultationHistory from './main/webapp/jsx/components/History/PatientConsultationHistory';\r\nimport ViewPatientHistory from './main/webapp/jsx/components/History/ViewPatientHistory'\r\n//import PatientEditDetail from './main/webapp/jsx/components/Patient/PatientEditDetail';\r\n\r\nexport default function App() {\r\n  return (\r\n\r\n      <div>\r\n      <ToastContainer />\r\n        {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n        <Switch>\r\n         <Route path=\"/patient-consultation\">\r\n           <ViewPatientHistory />\r\n         </Route>\r\n\r\n          <Route path=\"/patient-consultations-history\">\r\n            <PatientConsultationHistory />\r\n          </Route>\r\n\r\n          <Route path=\"/patient-history\">\r\n            <PatientDetail />\r\n          </Route>\r\n          {/* \r\n          <Route path=\"/edit-patient\">\r\n            <EditPatient />\r\n          </Route> */}\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>\r\n        \r\n          \r\n        </Switch>\r\n      </div>\r\n \r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","let direction = 'ltr';\r\n\r\nexport const dezThemeSet = [\r\n\t{ /* Default */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"full\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{ /* Demo Theme 1 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tprimary: \"color_5\",\r\n\t\theaderBg: \"color_5\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tdirection: direction\r\n\t},\r\n\t { /* Demo Theme 2 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_11\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_11\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_11\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 3 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"dark\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_3\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 4 */\t\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t\t\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 5 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"horizontal\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_9\",\r\n\t\tsidebarStyle: \"modern\",\r\n\t\tsidebarPosition: \"static\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_9\",\r\n\t\tdirection: direction\r\n\t},\r\n\t/* {\r\n\t\t//Demo Theme 6\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"mini\",\r\n\t\tsidebarBg: \"color_10\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 7 \r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"compact\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_6\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 8 *\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"icon-hover\",\r\n\t\tsidebarBg: \"color_15\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t} */\r\n];\r\n\t","import React, { createContext, useEffect, useState } from \"react\";\r\nimport {dezThemeSet} from './ThemeDemo';\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nconst ThemeContextProvider = (props) => {\r\n\tconst [sideBarStyle, setSideBarStyle] = useState({ value: \"full\", label: \"Full\",});\r\n\tconst [sidebarposition, setSidebarposition] = useState({ value: \"fixed\",\tlabel: \"Fixed\",});\r\n    const [headerposition, setHeaderposition] = useState({ value: \"fixed\", label: \"Fixed\", });\r\n    const [sidebarLayout, setSidebarLayout] = useState({ value: \"vertical\", label: \"Vertical\",});\r\n\tconst [direction, setDirection] = useState({ value: \"ltr\", label: \"LTR\" });\r\n\tconst [primaryColor, setPrimaryColor] = useState(\"color_1\");\r\n\tconst [navigationHader, setNavigationHader] = useState(\"color_1\");\r\n\tconst [haderColor, setHaderColor] = useState(\"color_1\");\r\n\tconst [sidebarColor, setSidebarColor] = useState(\"color_1\");\r\n\tconst [iconHover, setIconHover] = useState(false);\r\n\tconst [menuToggle, setMenuToggle] = useState(false);\r\n\tconst [background, setBackground] = useState({ value: \"light\",\tlabel: \"Light\",});\r\n\tconst [containerPosition_, setcontainerPosition_] = useState({value: \"wide-boxed\", label: \"Wide Boxed\",});\r\n    const body = document.querySelector(\"body\");\r\n    const [windowWidth, setWindowWidth] = useState(0);\r\n    const [windowHeight, setWindowHeight] = useState(0);\r\n\r\n  // layout\r\n  const layoutOption = [\r\n    { value: \"vertical\", label: \"Vertical\" },\r\n    { value: \"horizontal\", label: \"Horizontal\" },\r\n  ];\r\n  const sideBarOption = [\r\n    { value: \"compact\", label: \"Compact\" },\r\n    { value: \"full\", label: \"Full\" },\r\n    { value: \"mini\", label: \"Mini\" },\r\n    { value: \"modern\", label: \"Modern\" },\r\n    { value: \"overlay\", label: \"Overlay\" },\r\n    { value: \"icon-hover\", label: \"Icon-hover\" },\r\n  ];\r\n  const backgroundOption = [\r\n    { value: \"light\", label: \"Light\" },\r\n    { value: \"dark\", label: \"Dark\" },\r\n  ];\r\n  const sidebarpositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const headerPositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const containerPosition = [\r\n    { value: \"wide-boxed\", label: \"Wide Boxed\" },\r\n    { value: \"boxed\", label: \"Boxed\" },\r\n    { value: \"wide\", label: \"Wide\" },\r\n  ];\r\n  const colors = [\r\n    \"color_1\",\r\n    \"color_2\",\r\n    \"color_3\",\r\n    \"color_4\",\r\n    \"color_5\",\r\n    \"color_6\",\r\n    \"color_7\",\r\n    \"color_8\",\r\n    \"color_9\",\r\n    \"color_10\",\r\n    \"color_11\",\r\n    \"color_12\",\r\n    \"color_13\",\r\n    \"color_14\",\r\n    \"color_15\",\r\n  ];\r\n  const directionPosition = [\r\n    { value: \"ltr\", label: \"LTR\" },\r\n    { value: \"rtl\", label: \"RTL\" },\r\n  ];\r\n  const fontFamily = [\r\n    { value: \"poppins\", label: \"Poppins\" },\r\n    { value: \"roboto\", label: \"Roboto\" },\r\n    { value: \"cairo\", label: \"Cairo\" },\r\n    { value: \"opensans\", label: \"Open Sans\" },\r\n    { value: \"HelveticaNeue\", label: \"HelveticaNeue\" },\r\n  ];\r\n  const changePrimaryColor = (name) => {\r\n\tsetPrimaryColor(name);\r\n    body.setAttribute(\"data-primary\", name);\r\n  };\r\n  const changeNavigationHader = (name) => {\r\n    setNavigationHader(name);\r\n    body.setAttribute(\"data-nav-headerbg\", name);\r\n  };\r\n  const chnageHaderColor = (name) => {\r\n    setHaderColor(name);\r\n    body.setAttribute(\"data-headerbg\", name);\r\n  };\r\n  const chnageSidebarColor = (name) => {\r\n    setSidebarColor(name);\r\n    body.setAttribute(\"data-sibebarbg\", name);\r\n  };\r\n  const changeSideBarPostion = (name) => {\r\n    setSidebarposition(name);\r\n    body.setAttribute(\"data-sidebar-position\", name.value);\r\n  };\r\n  const changeDirectionLayout = (name) => {\r\n    setDirection(name);\r\n    body.setAttribute(\"direction\", name.value);\r\n    let html = document.querySelector(\"html\");\r\n    html.setAttribute(\"dir\", name.value);\r\n    html.className = name.value;\r\n  };\r\n  const changeSideBarLayout = (name) => {\r\n    if (name.value === \"horizontal\") {\r\n      if (sideBarStyle.value === \"overlay\") {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n        setSideBarStyle({ value: \"full\", label: \"Full\" });\r\n        body.setAttribute(\"data-sidebar-style\", \"full\");\r\n      } else {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n      }\r\n    } else {\r\n      setSidebarLayout(name);\r\n      body.setAttribute(\"data-layout\", name.value);\r\n    }\r\n  };\r\n  const changeSideBarStyle = (name) => {\r\n    if (sidebarLayout.value === \"horizontal\") {\r\n      if (name.value === \"overlay\") {\r\n        alert(\"Sorry! Overlay is not possible in Horizontal layout.\");\r\n      } else {\r\n        setSideBarStyle(name);\r\n        setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n        body.setAttribute(\"data-sidebar-style\", name.value);\r\n      }\r\n    } else {\r\n      setSideBarStyle(name);\r\n      setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n      body.setAttribute(\"data-sidebar-style\", name.value);\r\n    }\r\n  };\r\n\r\n  const changeHeaderPostion = (name) => {\r\n    setHeaderposition(name);\r\n    body.setAttribute(\"data-header-position\", name.value);\r\n  };\r\n\r\n  const openMenuToggle = () => {\r\n    sideBarStyle.value === \"overly\"\r\n      ? setMenuToggle(true)\r\n      : setMenuToggle(false);\r\n  };\r\n\r\n  const changeBackground = (name) => {\r\n    body.setAttribute(\"data-theme-version\", name.value);\r\n    setBackground(name);\r\n  };\r\n\r\n  const changeContainerPosition = (name) => {\r\n    setcontainerPosition_(name);\r\n    body.setAttribute(\"data-container\", name.value);\r\n    name.value === \"boxed\" &&\r\n      changeSideBarStyle({ value: \"overlay\", label: \"Overlay\" });\r\n  };\r\n  \r\n  const setDemoTheme = (theme,direction) => {\r\n\r\n\tvar setAttr = {};\t\r\n\t\r\n\t\r\n\tvar themeSettings = dezThemeSet[theme];\t\r\n\t\t\r\n\tbody.setAttribute(\"data-typography\", themeSettings.typography);\r\n \r\n\tsetAttr.value = themeSettings.version;\r\n\tchangeBackground(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.layout;\r\n\tchangeSideBarLayout(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.primary;\r\n\tchangePrimaryColor(themeSettings.primary);\r\n\t\r\n//setAttr.value = themeSettings.navheaderBg;\r\n\tchangeNavigationHader(themeSettings.navheaderBg);\r\n\t\r\n//setAttr.value = themeSettings.headerBg;\r\n\tchnageHaderColor(themeSettings.headerBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarStyle;\r\n\tchangeSideBarStyle(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.sidebarBg;\r\n\tchnageSidebarColor(themeSettings.sidebarBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarPosition;\r\n\tchangeSideBarPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.headerPosition;\r\n\tchangeHeaderPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.containerLayout;\r\n\tchangeContainerPosition(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.direction;\r\n\tsetAttr.value = direction;\r\n\tchangeDirectionLayout(setAttr); \r\n\t\r\n\t};\r\n\r\n  useEffect(() => {\r\n\tconst body = document.querySelector(\"body\");\r\n    body.setAttribute(\"data-typography\", \"poppins\");\r\n    body.setAttribute(\"data-theme-version\", \"light\");\r\n    body.setAttribute(\"data-layout\", \"vertical\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-nav-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-style\", \"overlay\");\r\n    body.setAttribute(\"data-sibebarbg\", \"color_1\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-position\", \"fixed\");\r\n    body.setAttribute(\"data-header-position\", \"fixed\");\r\n    body.setAttribute(\"data-container\", \"wide\");\r\n    body.setAttribute(\"direction\", \"ltr\");\r\n\t\tlet resizeWindow = () => {\r\n\t\t\tsetWindowWidth(window.innerWidth);\r\n\t\t\tsetWindowHeight(window.innerHeight);\r\n\t\t\twindow.innerWidth >= 768 && window.innerWidth < 1024\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"mini\")\r\n\t\t\t: window.innerWidth <= 768\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"overlay\")\r\n\t\t\t: body.setAttribute(\"data-sidebar-style\", \"full\");\r\n\t\t};\r\n    resizeWindow();\r\n    window.addEventListener(\"resize\", resizeWindow);\r\n    return () => window.removeEventListener(\"resize\", resizeWindow);\r\n  }, []);\r\n\r\n  return (\r\n    <ThemeContext.Provider\r\n      value={{\r\n        body,\r\n        sideBarOption,\r\n        layoutOption,\r\n        backgroundOption,\r\n        sidebarposition,\r\n        headerPositions,\r\n        containerPosition,\r\n        directionPosition,\r\n        fontFamily,\r\n\t\tprimaryColor,\r\n        navigationHader,\r\n\t\twindowWidth,\r\n\t\twindowHeight,\r\n        changePrimaryColor,\r\n        changeNavigationHader,\r\n        changeSideBarStyle,\r\n        sideBarStyle,\r\n        changeSideBarPostion,\r\n        sidebarpositions,\r\n        changeHeaderPostion,\r\n        headerposition,\r\n        changeSideBarLayout,\r\n        sidebarLayout,\r\n        changeDirectionLayout,\r\n        changeContainerPosition,\r\n        direction,\r\n        colors,\r\n        haderColor,\r\n        chnageHaderColor,\r\n        chnageSidebarColor,\r\n        sidebarColor,\r\n        iconHover,\r\n        menuToggle,\r\n        openMenuToggle,\r\n        changeBackground,\r\n        background,\r\n        containerPosition_,\r\n\t\tsetDemoTheme,\r\n\t}}\r\n    >\r\n      {props.children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeContextProvider;\r\n\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\r\n\r\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\r\nimport SimpleReactLightbox from \"simple-react-lightbox\";\r\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\"; \r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\r\n            <SimpleReactLightbox>\r\n                <BrowserRouter basename='/'>\r\n                    <ThemeContext>\r\n                        <App />\r\n                    </ThemeContext>  \r\n                </BrowserRouter>\r\n            </SimpleReactLightbox>\r\n\r\n\t</React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nreportWebVitals();\r\n"],"sourceRoot":""}